{"version":3,"sources":["components/header.jsx","components/landingPage.jsx","components/pagination.jsx","components/dataChart.jsx","components/dataChartOnly.jsx","components/news.jsx","components/aboutCoronavirus.jsx","components/footer.jsx","App.js","serviceWorker.js","index.js"],"names":["Header","className","Container","fluid","Row","Col","xs","lg","Navbar","expand","Brand","href","Toggle","aria-controls","Collapse","id","Nav","pullright","Link","alt","colors","LandingPage","state","mapData","confirmed","recovered","deaths","top10Confirmed","top10Recovered","top10Deaths","zoom","minZoom","width","window","innerWidth","document","documentElement","clientWidth","body","updateDimensions","setState","this","getData","addEventListener","Axios","get","DataForMapRes","DataForMapAccurate","data","filter","row","lat","DataForCasesRes","Global","TotalConfirmed","TotalRecovered","TotalDeaths","confirmedSorted","Countries","sort","a","b","slice","recoveredSorted","deathsSorted","Card","style","marginBottom","padding","border","Map","center","TileLayer","url","map","city","i","CircleMarker","key","long","readius","Math","log","fillOpacity","fillColor","stroke","Alert","backgroundColor","value","displayType","thousandSeparator","round","color","marginTop","textAlign","height","margin","top","right","left","bottom","layout","barSize","strokeDasharray","type","dataKey","fill","paddingTop","minHeight","timeout","Component","Pagination","dataPerPage","totalData","paginate","PageNumber","ceil","push","number","onClick","DataChart","props","currentData","currentPage","selectedCountry","temp","countries","tableCountries","bind","getCountry","ReactGA","initialize","pageview","getCountryByIP","res","country_name","byConfirmed","Object","keys","indexOfLastData","indexOfFirstData","event","persist","countryRes","searchCountry","target","pageNumber","updatePageNumber","Form","Control","as","size","onChange","custom","items","Table","responsive","striped","bordered","hover","list","index","date","fontWeight","length","DataChartOnly","dot","marginRight","News","trumpNews","USHealth","technology","business","entertainment","sports","getNews","trumpNewsRes","USHealthRes","technologyRes","businessRes","entertainmentRes","sportsRes","console","articles","CardColumns","newsItem","Img","variant","src","urlToImage","publishedAt","Body","Title","fontSize","title","Text","overflow","textOverflow","maxHeight","whiteSpace","description","Footer","source","name","AboutCoronavirus","lineHeight","marginLeft","rel","App","initializeReactGA","exact","path","component","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.1190715e.chunk.js","sourcesContent":["import React from 'react';\nimport {Navbar,Nav, Container, Row,Col} from 'react-bootstrap';\nfunction Header(){\nreturn(\n    <div className=\"header\">\n        <Container fluid>\n            <Row className=\"justify-content-md-center\">\n                <Col xs=\"12\" lg=\"8\">\n                    <Navbar expand=\"lg\">\n                        <Navbar.Brand href=\"/\">COVID-19 Cases Visualization </Navbar.Brand>\n                        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                        <Navbar.Collapse id=\"basic-navbar-nav\">\n                            <Nav pullright>\n                                <Nav.Link href=\"/\" alt=\"Coronavirus Home Page\">Home</Nav.Link>\n                                <Nav.Link href=\"/Data-Visualization\" alt=\"Coronavirus visual data\">Data Visualization</Nav.Link>\n                                <Nav.Link href=\"/Daily-Data\" alt=\"Coronavirus Deaths and Recovered Cases\">Daily Data</Nav.Link>\n                                <Nav.Link href=\"/About-Coronavirus\" alt=\"Coronavirus Overview Coronavirus Symptops Coronavirus Prevention Coronavirus Treatment\">About COVID-19</Nav.Link>\n                                <Nav.Link href=\"/News\" alt=\"Coronavirus Latest News\"> <b>BORED ?</b> Vist News Gallery</Nav.Link>\n                            </Nav>\n                        </Navbar.Collapse>\n                    </Navbar>\n                </Col>\n            </Row>\n        </Container>\n        </div>\n)\n}\nexport default Header;","import React, { Component } from 'react';\nimport Axios from 'axios';\nimport { Map, CircleMarker,TileLayer} from 'react-leaflet';\nimport {Container,Row,Col, Card, Alert} from 'react-bootstrap';\nimport NumberFormat from 'react-number-format';\nimport { BarChart, Bar, XAxis,YAxis, CartesianGrid,Tooltip,Legend} from 'recharts';\nimport \"leaflet/dist/leaflet.css\";\nimport Loader from 'react-loader-spinner';\n\nconst colors = {\n    confirmed: '#FFD31D',\n    recovered: '#21BF72',\n    deaths: '#DD2C00',\n  };\nclass LandingPage extends Component{\n    state={\n        mapData:[],\n        confirmed:0,\n        recovered:0,\n        deaths:0,\n        top10Confirmed:[],\n        top10Recovered:[],\n        top10Deaths:[],\n        zoom:2,\n        minZoom:2,\n        width:\n        window.innerWidth ||\n        document.documentElement.clientWidth ||\n        document.body.clientWidth\n      }\n    \n      componentDidMount(){\n        this.getData();\n        window.addEventListener('resize',this.updateDimensions);\n      }\n      updateDimensions = ()=>{\n        const width = \n        window.innerWidth ||\n        document.documentElement.clientWidth ||\n        document.body.clientWidth;\n\n        this.setState({width});\n    }\n      async getData(){\n        \n      const DataForMapRes=await Axios.get(\"https://covid19.mathdro.id/api/deaths\");\n      const DataForMapAccurate=DataForMapRes.data.filter(row=> row.lat !== null);\n\n      const DataForCasesRes=await Axios.get(\"https://api.covid19api.com/summary\");\n      \n      const confirmed = DataForCasesRes.data.Global.TotalConfirmed;\n      const recovered = DataForCasesRes.data.Global.TotalRecovered;\n      const deaths = DataForCasesRes.data.Global.TotalDeaths;\n\n      const confirmedSorted=DataForCasesRes.data.Countries.sort(function(a,b){\n          return b.TotalConfirmed - a.TotalConfirmed;\n      });\n      const top10Confirmed = confirmedSorted.slice(0,10);\n\n      const recoveredSorted=DataForCasesRes.data.Countries.sort(function(a,b){\n          return b.TotalRecovered - a.TotalRecovered;\n      });\n      const top10Recovered = recoveredSorted.slice(0,10);\n      \n      const deathsSorted=DataForCasesRes.data.Countries.sort(function(a,b){\n          return b.TotalDeaths - a.TotalDeaths;\n      });\n      const top10Deaths = deathsSorted.slice(0,10);\n      this.setState({\n          mapData:DataForMapAccurate,\n          confirmed,\n          recovered,\n          deaths,\n          top10Confirmed,\n          top10Recovered,\n          top10Deaths\n      })\n      }\n    render(){\n        const {\n            mapData,\n            confirmed,\n            recovered,\n            deaths,\n            top10Confirmed,\n            top10Recovered,\n            top10Deaths,\n            zoom,\n            minZoom,\n            width\n        } = this.state;\n\n        if(!confirmed) return (\n                <Container fluid>\n                    <Row className=\"justify-content-md-center\">\n                        <Col xs=\"12\" lg=\"8\">\n                        <Card \n                            className=\"shadow\" \n                            style={{marginBottom:'1rem',paddingTop:'2rem',border:'none',minHeight:\"700px\"}}\n                        >\n                            <Loader \n                                type=\"Rings\"\n                                color=\"#DD2C00\"\n                                height={200}\n                                width={200}\n                                timeout={90000}\n                            />\n                        </Card>     \n                        </Col>\n                    </Row>\n                </Container>\n            );\n\n        return(\n            <div className=\"mid\">\n                <Container fluid>\n                    <Row className=\"justify-content-md-center\">\n                        <Col xs=\"12\" lg=\"8\">\n                        <Card className=\"shadow\" style={{marginBottom:'1rem',padding:'1rem',border:'none'}}>\n                            <Map\n                                width={ width > 980 ? 960 : width - 80 }\n                                zoom={width < 980 ? 1 : zoom}\n                                center={[20.505,-0.09]}\n                                minZoom={width < 980 ? 1 : minZoom}\n                                >\n                                <TileLayer url=\"https://{s}.tile.osm.org/{z}/{x}/{y}.png\" />\n                                \n                                {\n                                mapData.map((city,i) => {\n                                    return (\n                                    <CircleMarker \n                                        key={i} \n                                        center={[city.lat, city.long]} \n                                        readius={20 * Math.log(city.deaths / confirmed)}\n                                        fillOpacity={0.5}\n                                        fillColor={\"red\"}\n                                        stroke={false}\n                                    />\n                                    )\n                                })\n                                }\n                            </Map>\n                        </Card>     \n                        </Col>\n                    </Row>\n                </Container>\n                <Container fluid>\n                    <Row className=\"justify-content-md-center\">\n                        <Col xs lg=\"8\">\n                        <Card className=\"shadow-sm\" style={{marginBottom:'0rem',padding:'1rem',border:'none'}}>\n                            <Row className=\"justify-content-md-center\">\n                                <Col>\n                                    <Alert className=\"shadow\" style={{backgroundColor:colors.confirmed}}>\n                                    <h4>\n                                    <NumberFormat \n                                        value={confirmed} \n                                        displayType={'text'} \n                                        thousandSeparator={true} \n                                    />  \n                                    </h4>  \n                                    <p><b>Accomulative</b><i> as of today</i></p> \n                                    </Alert>\n                                </Col>\n                                <Col>\n                                    <Alert className=\"shadow\" style={{backgroundColor:colors.recovered}}>\n                                    <h4>\n                                    <NumberFormat \n                                        value={recovered} \n                                        displayType={'text'} \n                                        thousandSeparator={true} \n                                    />\n                                    </h4>\n                                    <h6><b>{Math.round((recovered / confirmed) * 100)}</b><i>% Recovery</i></h6>  \n                                    </Alert>\n                                </Col>\n                                <Col>\n                                    <Alert className=\"shadow\" style={{backgroundColor:colors.deaths,color:'#FFFFFF'}}>\n                                    <h4>\n                                    <NumberFormat \n                                        value={deaths} \n                                        displayType={'text'} \n                                        thousandSeparator={true} \n                                    />\n                                    </h4>\n                                    <h6><b>{Math.round((deaths / confirmed) * 100)}</b><i>% Deaths</i></h6>   \n                                    </Alert>\n                                </Col>\n                            </Row>\n                        </Card>     \n                        </Col>\n                    </Row>\n                </Container>\n\n                <Container fluid>\n                    <Row className=\"justify-content-md-center\">\n                        <Col xs lg=\"8\">\n                        <Card className=\"shadow-sm\" style={{marginBottom:'1rem',padding:'1rem',border:'none'}}>\n                            <div style={{marginTop:'1rem'}}>\n                                <h5 style={{textAlign:'center'}}>Top 10 Counties - Confirmed Cases Data</h5>\n                            </div>\n                        <BarChart \n                            width={ width > 980 ? 1200 : width - 80 } \n                            height={400} \n                            data={top10Confirmed}\n                            margin={{top: 5, right: 30, left: 0, bottom: 5}}\n                            layout=\"vertical\"\n                            barSize={15}\n                        >\n                        <CartesianGrid strokeDasharray=\"1 1\"/>\n                        <XAxis  type=\"number\"/>\n                        <YAxis dataKey=\"CountryCode\" type=\"category\" />\n                        <Tooltip />\n                        <Legend  />\n                        <Bar dataKey=\"TotalConfirmed\" fill={colors.confirmed} />\n                        </BarChart> \n                        </Card>     \n                        </Col>\n                    </Row>\n                </Container>\n\n                <Container fluid>\n                    <Row className=\"justify-content-md-center\">\n                        <Col xs lg=\"8\">\n                        <Card className=\"shadow-sm\" style={{marginBottom:'1rem',padding:'1rem',border:'none'}}>\n                            <div style={{marginTop:'1rem'}}>\n                                <h5 style={{textAlign:'center'}}>Top 10 Countries - Recovered Cases Data</h5>\n                            </div>\n                        <BarChart \n                            width={ width > 980 ? 1200 : width - 80 }  \n                            height={400} \n                            data={top10Recovered}\n                            margin={{top: 5, right: 30, left: 0, bottom: 5}}\n                            layout=\"vertical\"\n                            barSize={15}\n                        >\n                        <CartesianGrid strokeDasharray=\"1 1\"/>\n                        <XAxis type=\"number\"/>\n                        <YAxis dataKey=\"CountryCode\" type=\"category\"/>\n                        <Tooltip/>\n                        <Legend />\n                        <Bar dataKey=\"TotalRecovered\" fill={colors.recovered} />\n                        </BarChart>\n                        </Card>     \n                        </Col>\n                    </Row>\n                </Container>\n\n                <Container fluid>\n                    <Row className=\"justify-content-md-center\">\n                        <Col xs lg=\"8\">\n                        <Card className=\"shadow-sm\" style={{marginBottom:'1rem',padding:'1rem',border:'none'}}>\n                            <div style={{marginTop:'1rem'}}>\n                                <h5 style={{textAlign:'center'}}>Top 10 Countries - Death Cases Data</h5>\n                            </div>\n                        <BarChart \n                            width={ width > 980 ? 1200 : width - 80 }  \n                            height={400} \n                            data={top10Deaths}\n                            margin={{top: 5, right: 30, left: 0, bottom: 5}}\n                            layout=\"vertical\"\n                            barSize={15}\n                        >\n                        <CartesianGrid strokeDasharray=\"1 1\"/>\n                        <XAxis type=\"number\"/>\n                        <YAxis dataKey=\"CountryCode\" type=\"category\"/>\n                        <Tooltip/>\n                        <Legend />\n                        <Bar dataKey=\"TotalDeaths\" fill={colors.deaths} width={1} />\n                        </BarChart>\n                        </Card>\n                               \n                        </Col>\n                    </Row>\n                </Container>\n            </div>\n        )\n    }\n}\nexport default LandingPage;","import React from 'react';\nimport { Nav } from 'react-bootstrap';\n\nconst Pagination = ({dataPerPage, totalData, paginate}) =>{\n    const PageNumber=[];\n    for(let i=1;i<=Math.ceil(totalData/dataPerPage);i++){\n        PageNumber.push(i);\n    }\n    return (\n        <Nav>\n            <ul className=\"pagination justify-content-center\">\n                {\n                    PageNumber.map(number=>(\n                        <li key={number} className=\"page-item\">\n                            <a onClick={()=>paginate(number)} href=\"#\" className=\"page-link\">{number}</a>\n                        </li>\n                    ))\n                }\n            </ul>\n        </Nav>\n    )\n}\nexport default Pagination;","import React, { Component } from 'react';\nimport Axios from 'axios';\nimport {Container,Row,Col,Table,Form, Card} from 'react-bootstrap';\nimport NumberFormat from 'react-number-format';\nimport ReactGA from 'react-ga';\nimport Pagination from './pagination';\nimport Loader from 'react-loader-spinner';\n\nconst colors = {\n    confirmed: '#FFD31D',\n    recovered: '#21BF72',\n    deaths: '#DD2C00',\n  };\n\nclass DataChart extends Component{\n    constructor (props){\n        super(props);\n        this.getData=this.getData.bind(this);\n        this.getCountry=this.getCountry.bind(this);\n        this.paginate=this.paginate.bind(this);\n      }\n      \n      state={\n        currentData:[],\n        currentPage:1,\n        dataPerPage:14,\n        selectedCountry:\"China\",\n        temp:[],\n        countries:[],\n        tableCountries:[],\n        width:\n        window.innerWidth ||\n        document.documentElement.clientWidth ||\n        document.body.clientWidth\n      }\n      componentDidMount(){\n\n        ReactGA.initialize('UA-163115935-1');\n        ReactGA.pageview('/Daily-Data');\n\n        this.getCountryByIP();\n        window.addEventListener('resize',this.updateDimensions);\n      }\n      updateDimensions = ()=>{\n          const width = \n          window.innerWidth ||\n          document.documentElement.clientWidth ||\n          document.body.clientWidth;\n\n          this.setState({width});\n      }\n      async getCountryByIP(){\n        const res=await Axios.get(\"https://ipapi.co/json\");\n        this.setState({\n            selectedCountry:res.data.country_name\n        })\n        this.getData();\n    }\n      async getData(){\n        const res=await Axios.get(\"https://pomber.github.io/covid19/timeseries.json\");\n        const selectedCountry=this.state.selectedCountry;\n        const byConfirmed=res.data[selectedCountry].slice(0);\n        byConfirmed.sort(function(a,b){\n            return b.confirmed - a.confirmed;\n        });\n\n        this.setState({\n          countries:res.data[selectedCountry],\n          tableCountries:byConfirmed,\n          temp:Object.keys(res.data)\n        })\n\n        const indexOfLastData=this.state.currentPage * this.state.dataPerPage;\n        const indexOfFirstData=indexOfLastData - this.state.dataPerPage;\n        this.setState({\n            currentData:this.state.tableCountries.slice(indexOfFirstData,indexOfLastData)\n        })\n        \n      }\n      async getCountry(event){\n        event.persist();\n        const countryRes=await Axios.get(\"https://pomber.github.io/covid19/timeseries.json\");\n        const searchCountry=event.target.value;\n        \n        const byConfirmed=countryRes.data[searchCountry].slice(0);\n        byConfirmed.sort(function(a,b){\n            return b.confirmed - a.confirmed;\n        });\n\n        this.setState({\n            selectedCountry:searchCountry,\n            tableCountries:byConfirmed\n        })\n        const indexOfLastData=this.state.currentPage * this.state.dataPerPage;\n        const indexOfFirstData=indexOfLastData - this.state.dataPerPage;\n        this.setState({\n            currentData:this.state.tableCountries.slice(indexOfFirstData,indexOfLastData)\n        })\n      }\n      async updatePageNumber(){\n        const countryRes=await Axios.get(\"https://pomber.github.io/covid19/timeseries.json\");\n        const searchCountry=this.state.selectedCountry;\n        \n        const byConfirmed=countryRes.data[searchCountry].slice(0);\n        byConfirmed.sort(function(a,b){\n            return b.confirmed - a.confirmed;\n        });\n\n        this.setState({\n            selectedCountry:searchCountry,\n            tableCountries:byConfirmed\n        })\n        const indexOfLastData=this.state.currentPage * this.state.dataPerPage;\n        const indexOfFirstData=indexOfLastData - this.state.dataPerPage;\n        this.setState({\n            currentData:this.state.tableCountries.slice(indexOfFirstData,indexOfLastData)\n        })\n      }\n    //paginate = pageNumber=> this.setState({currentPage:pageNumber});\n        paginate(pageNumber){\n        this.setState({currentPage:pageNumber});\n        this.updatePageNumber();\n    }\n    \nrender(){\n    const {\n        currentData,\n        dataPerPage,\n        selectedCountry,\n        temp,\n        tableCountries,\n        width\n    } = this.state;\n\n    if(!currentData) return (\n        <Container fluid>\n            <Row className=\"justify-content-md-center\">\n                <Col xs=\"12\" lg=\"8\">\n                <Card \n                    className=\"shadow\" \n                    style={{marginBottom:'1rem',paddingTop:'15rem',border:'none',minHeight:\"700px\"}}\n                >\n                    <Loader \n                        type=\"ThreeDots\"\n                        color=\"#DD2C00\"\n                        height={100}\n                        width={100}\n                        timeout={900000000}\n                    />\n                </Card>     \n                </Col>\n            </Row>\n        </Container>\n    );\n\n    return(\n        <div className=\"mid\">\n            <Container fluid>\n                <Row className=\"justify-content-md-center\">\n                    <Col xs=\"12\" lg=\"8\">\n                    <Card className=\"shadow-sm\" style={{marginBottom:'1rem',padding:'1rem',border:'none'}}>\n                        <Form.Control as=\"select\" size=\"sm\" onChange={this.getCountry} custom>\n                                <option>{selectedCountry}</option> \n                                {\n                                temp.map((items,i)=>\n                                <option key={i}>{items}</option>  \n                                )\n                                }\n                            </Form.Control>\n                    </Card>     \n                    </Col>\n                </Row>\n            </Container>\n            \n            <Container fluid>\n                <Row className=\"justify-content-md-center\">\n                    <Col xs lg=\"8\">\n                        <Card className=\"shadow-sm\" style={{marginTop:'1rem',padding:'1rem',border:'none'}}>\n                            <Table responsive size=\"sm\" striped={true} bordered={true} hover>\n                                <thead>\n                                    <tr>\n                                    <th>Date</th>\n                                    <th>Confirmed</th>\n                                    <th>Recovered</th>\n                                    <th>Deaths</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {\n                                    currentData.map((list,index)=>\n                                    <tr key={index}>\n                                    <td>{list.date}</td>\n                                    <td><NumberFormat value={list.confirmed} displayType={'text'} thousandSeparator={true} /></td>\n                                    <td><NumberFormat value={list.recovered} displayType={'text'} thousandSeparator={true} /></td>\n                                    <td style={{fontWeight:\"bold\"}}><NumberFormat value={list.deaths} displayType={'text'} thousandSeparator={true} /></td>\n                                    </tr>\n                                    )\n                                    }\n                                </tbody>\n                                </Table>\n                                <Pagination  \n                                    dataPerPage={dataPerPage} \n                                    totalData={tableCountries.length} \n                                    paginate={this.paginate}\n                                />\n                        </Card>\n                    \n                    </Col>\n                </Row>\n            </Container>\n            \n        </div>\n    )\n}\n}\nexport default DataChart;","import React, { Component } from 'react';\nimport Axios from 'axios';\nimport {Container,Row,Col,Table,Form, Card} from 'react-bootstrap';\nimport NumberFormat from 'react-number-format';\nimport { AreaChart, XAxis,YAxis, CartesianGrid,Tooltip,Legend, Area} from 'recharts';\nimport ReactGA from 'react-ga';\nimport Loader from 'react-loader-spinner';\n\nconst colors = {\n    confirmed: '#FFD31D',\n    recovered: '#21BF72',\n    deaths: '#DD2C00',\n  };\n\nclass DataChartOnly extends Component{\n    constructor (props){\n        super(props);\n        this.getData=this.getData.bind(this);\n        this.getCountry=this.getCountry.bind(this);\n      }\n      \n      state={\n        currentData:[],\n        currentPage:1,\n        dataPerPage:7,\n        selectedCountry:\"China\",\n        temp:[],\n        countries:[],\n        tableCountries:[],\n        width:\n        window.innerWidth ||\n        document.documentElement.clientWidth ||\n        document.body.clientWidth\n      }\n      componentDidMount(){\n        \n        ReactGA.initialize('UA-163115935-1');\n        ReactGA.pageview('/Data-Visualization');\n\n        this.getCountryByIP();\n        window.addEventListener('resize',this.updateDimensions);\n      }\n      updateDimensions = ()=>{\n          const width = \n          window.innerWidth ||\n          document.documentElement.clientWidth ||\n          document.body.clientWidth;\n\n          this.setState({width});\n      }\n      async getCountryByIP(){\n          const res=await Axios.get(\"https://ipapi.co/json\");\n          this.setState({\n              selectedCountry:res.data.country_name\n          })\n          this.getData();\n      }\n      async getData(){\n        const selectedCountry=this.state.selectedCountry;\n        const res=await Axios.get(\"https://pomber.github.io/covid19/timeseries.json\");\n        \n        const byConfirmed=res.data[selectedCountry];\n        byConfirmed.sort(function(a,b){\n            return a.confirmed - b.confirmed;\n        });\n\n        this.setState({\n          countries:res.data[selectedCountry],\n          tableCountries:byConfirmed,\n          temp:Object.keys(res.data)\n        })\n      }\n      async getCountry(event){\n        event.persist();\n        const countryRes=await Axios.get(\"https://pomber.github.io/covid19/timeseries.json\");\n        const searchCountry=event.target.value;\n        \n        const byConfirmed=countryRes.data[searchCountry].slice(0);\n        byConfirmed.sort(function(a,b){\n            return b.confirmed - a.confirmed;\n        });\n\n        this.setState({\n            selectedCountry:searchCountry,\n            countries:countryRes.data[searchCountry],\n            tableCountries:byConfirmed\n        })\n        const indexOfLastData=this.state.currentPage * this.state.dataPerPage;\n        const indexOfFirstData=indexOfLastData - this.state.dataPerPage;\n        this.setState({\n            currentData:this.state.tableCountries.slice(indexOfFirstData,indexOfLastData)\n        })\n      }\n    \nrender(){\n    const {\n        selectedCountry,\n        temp,\n        countries,\n        width\n    } = this.state;\n\n    if(!countries) return (\n        <Container fluid>\n            <Row className=\"justify-content-md-center\">\n                <Col xs=\"12\" lg=\"8\">\n                <Card \n                    className=\"shadow\" \n                    style={{marginBottom:'1rem',paddingTop:'15rem',border:'none',minHeight:\"700px\"}}\n                >\n                    <Loader \n                        type=\"ThreeDots\"\n                        color=\"#DD2C00\"\n                        height={100}\n                        width={100}\n                        timeout={9000000000}\n                    />\n                </Card>     \n                </Col>\n            </Row>\n        </Container>\n    );\n    return(\n        <div className=\"mid\">\n            <Container fluid>\n                <Row className=\"justify-content-md-center\">\n                    <Col xs=\"12\" lg=\"8\">\n                    <Card className=\"shadow-sm\" style={{marginBottom:'1rem',padding:'1rem',border:'none'}}>\n                        <Form.Control as=\"select\" size=\"sm\" onChange={this.getCountry} custom>\n                                <option>{selectedCountry}</option> \n                                {\n                                temp.map((items,i)=>\n                                <option key={i}>{items}</option>  \n                                )\n                                }\n                            </Form.Control>\n                    </Card>     \n                    </Col>\n                </Row>\n            </Container>\n            \n            <Container fluid>\n                <Row className=\"justify-content-md-center\">\n                    <Col xs lg=\"8\">\n                        <Card className=\"shadow-sm\" style={{border:'none'}}>\n                            <div style={{marginTop:'1rem'}}>\n                                <h5 style={{textAlign:'center'}}>{selectedCountry}'s Data</h5>\n                            </div>\n                            <AreaChart \n                                width={ width > 980 ? 1200 : width - 80 } \n                                height={300} \n                                data={countries} \n                                margin={{top: 20, right: 20, left: 20, bottom: 20}}\n                                >\n                            <CartesianGrid strokeDasharray=\"1 1\" />\n                            <XAxis dataKey=\"date\" />\n                            <YAxis />\n                            <Tooltip />\n                            <Legend/>\n                            <Area type=\"monotone\"  dataKey=\"confirmed\" dot={false}  stroke={colors.confirmed} fill={colors.confirmed} />\n                            <Area type=\"monotone\" dataKey=\"recovered\" dot={false} stroke={colors.recovered} fill={colors.recovered} />\n                            <Area type=\"monotone\" dataKey=\"deaths\" dot={false}  stroke={colors.deaths} fill={colors.deaths} />\n                            </AreaChart>\n                        </Card>\n                    </Col>\n                </Row>\n            </Container>\n\n            <Container fluid>\n                <Row className=\"justify-content-md-center\">\n                    <Col xs lg=\"8\">\n                        <Card className=\"shadow-sm\" style={{border:'none',marginTop:'1rem'}}>\n                            <Row className=\"justify-content-md-center\">\n                                <Col>\n                                    <AreaChart \n                                        width={\n                                            width > 980\n                                            ? 480\n                                            : width > 720\n                                            ? width / 2 - 80\n                                            : width - 80\n                                        }\n                                        height={250} \n                                        data={countries} \n                                        margin={{top: 20, right: 20, left: 20, bottom: 20}}\n                                        >\n                                    <CartesianGrid strokeDasharray=\"1 1\" />\n                                    <XAxis dataKey=\"date\" />\n                                    <YAxis />\n                                    <Tooltip />\n                                    <Legend/>\n                                    <Area type=\"monotone\"  dataKey=\"confirmed\" dot={false}  stroke={colors.confirmed} fill={colors.confirmed} />\n                                    </AreaChart>\n                                </Col>\n                                <Col style={{textAlign:'right'}}>\n                                    <div style={{marginTop:'2rem',marginRight:'5rem'}}>\n                                        <p>As of available data</p>\n                                        <h3>\n                                        <NumberFormat \n                                        value={\n                                            countries && \n                                            countries[countries.length-1] &&\n                                            countries[countries.length-1].confirmed\n                                        } \n                                        displayType={'text'} \n                                        thousandSeparator={true}\n                                        style={{color:colors.confirmed}} \n                                        />\n                                        </h3>\n                                        <p>Confirmed cases have been Registered</p>\n                                    </div>\n                                </Col>\n                            </Row>\n                        </Card>\n                    </Col>\n                </Row>\n            </Container>\n            <Container fluid>\n                <Row className=\"justify-content-md-center\">\n                    <Col xs lg=\"8\">\n                        <Card className=\"shadow-sm\" style={{border:'none',marginTop:'1rem'}}>\n                            <Row className=\"justify-content-md-center\">\n                                <Col>\n                                    <AreaChart \n                                        width={\n                                            width > 980\n                                            ? 480\n                                            : width > 720\n                                            ? width / 2 - 80\n                                            : width - 80\n                                        }\n                                        height={250} \n                                        data={countries} \n                                        margin={{top: 20, right: 20, left: 20, bottom: 20}}\n                                        >\n                                    <CartesianGrid strokeDasharray=\"1 1\" />\n                                    <XAxis dataKey=\"date\" />\n                                    <YAxis />\n                                    <Tooltip />\n                                    <Legend/>\n                                    <Area type=\"monotone\" dataKey=\"recovered\" dot={false} stroke={colors.recovered} fill={colors.recovered} />\n                                    </AreaChart>\n                                </Col>\n                                <Col style={{textAlign:'right'}}>\n                                <div style={{marginTop:'2rem',marginRight:'5rem'}}>\n                                        <p>As of available data</p>\n                                        <h3>\n                                        <NumberFormat \n                                        value={\n                                            countries && \n                                            countries[countries.length-1] &&\n                                            countries[countries.length-1].deaths\n                                        } \n                                        displayType={'text'} \n                                        thousandSeparator={true} \n                                        style={{color:colors.recovered}}\n                                        />\n                                        </h3>\n                                        <p>Recovered cases have been Registered with</p>\n                                        <h3>\n                                        <NumberFormat \n                                        value={\n                                            countries && \n                                            countries[0] &&\n                                            Math.round(\n                                                (countries[countries.length-1].recovered / countries[countries.length-1].confirmed) * 100\n                                            )\n                                        } \n                                        displayType={'text'} \n                                        thousandSeparator={true} \n                                        /> %\n                                        </h3>\n                                        <p>Recovery rate</p>\n                                    </div>\n                                </Col>\n                            </Row>\n                        </Card>\n                    </Col>\n                </Row>\n            </Container>\n            <Container fluid>\n                <Row className=\"justify-content-md-center\">\n                    <Col xs lg=\"8\">\n                        <Card className=\"shadow-sm\" style={{border:'none',marginTop:'1rem'}}>\n                            <Row className=\"justify-content-md-center\">\n                                <Col>\n                                    <AreaChart \n                                        width={\n                                            width > 980\n                                            ? 480\n                                            : width > 720\n                                            ? width / 2 - 80\n                                            : width - 80\n                                        }\n                                        height={250} \n                                        data={countries} \n                                        margin={{top: 20, right: 20, left: 20, bottom: 20}}\n                                        >\n                                    <CartesianGrid strokeDasharray=\"1 1\" />\n                                    <XAxis dataKey=\"date\" />\n                                    <YAxis />\n                                    <Tooltip />\n                                    <Legend/>\n                                    <Area type=\"monotone\" dataKey=\"deaths\" dot={false}  stroke={colors.deaths} fill={colors.deaths} />\n                                    </AreaChart>\n                                </Col>\n                                <Col style={{textAlign:'right'}}>\n                                    <div style={{marginTop:'2rem',marginRight:'5rem'}}>\n                                        <p>As of available data</p>\n                                        <h3>\n                                        <NumberFormat \n                                        value={\n                                            countries && \n                                            countries[countries.length-1] &&\n                                            countries[countries.length-1].deaths\n                                        } \n                                        displayType={'text'} \n                                        thousandSeparator={true} \n                                        style={{color:colors.deaths}}\n                                        />\n                                        </h3>\n                                        <p>Death cases have been Registered with</p>\n                                        <h3>\n                                        <NumberFormat \n                                        value={\n                                            countries && \n                                            countries[countries.length-1] &&\n                                            Math.round(\n                                                (countries[countries.length-1].deaths / countries[countries.length-1].confirmed) * 100\n                                            )\n                                        } \n                                        displayType={'text'} \n                                        thousandSeparator={true} \n                                        />% \n                                        </h3>\n                                        <p> Death rate</p>\n                                    </div>\n                                </Col>\n                            </Row>\n                        </Card>\n                    </Col>\n                </Row>\n            </Container>\n            \n        </div>\n    )\n}\n}\nexport default DataChartOnly;","import React,{ Component } from 'react';\nimport Axios from 'axios';\nimport {Container,Row,Col, Card, CardColumns} from 'react-bootstrap';\nimport ReactGA from 'react-ga';\nimport Loader from 'react-loader-spinner';\n\nconst trumpNewsEndpoint=\"https://newsapi.org/v2/top-headlines?q=trump&apiKey=1eef6d1799164641972598884245ee39\";\nconst USHealthEndpoint=\"https://newsapi.org/v2/top-headlines?country=us&category=health&apiKey=1eef6d1799164641972598884245ee39\";\nconst technologyEndpoint=\"https://newsapi.org/v2/top-headlines?country=us&category=technology&apiKey=1eef6d1799164641972598884245ee39\";\nconst businessEndpoint=\"https://newsapi.org/v2/top-headlines?country=us&category=business&apiKey=1eef6d1799164641972598884245ee39\";\nconst entertainmentEndpoint=\"https://newsapi.org/v2/top-headlines?country=us&category=entertainment&apiKey=1eef6d1799164641972598884245ee39\";\nconst sportsEndpoint=\"https://newsapi.org/v2/top-headlines?country=us&category=sports&apiKey=1eef6d1799164641972598884245ee39\";\n\nclass News extends Component{\n    state={\n        trumpNews:[],\n        USHealth:[],\n        technology:[],\n        business:[],\n        entertainment:[],\n        sports:[]\n    }\n\n    componentDidMount(){\n\n        ReactGA.initialize('UA-163115935-1');\n        ReactGA.pageview('/News');\n\n        this.getNews();\n    }\n    async getNews(){\n        const trumpNewsRes=await Axios.get(trumpNewsEndpoint);\n        const USHealthRes=await Axios.get(USHealthEndpoint);\n        const technologyRes=await Axios.get(technologyEndpoint);\n        const businessRes=await Axios.get(businessEndpoint);\n        const entertainmentRes=await Axios.get(entertainmentEndpoint);\n        const sportsRes=await Axios.get(sportsEndpoint);\n        console.log(trumpNewsRes.data.articles);\n        this.setState({\n            trumpNews:trumpNewsRes.data.articles.slice(0,3),\n            USHealth:USHealthRes.data.articles.slice(0,6),\n            technology:technologyRes.data.articles.slice(0,3),\n            business:businessRes.data.articles.slice(0,3),\n            entertainment:entertainmentRes.data.articles.slice(0,3),\n            sports:sportsRes.data.articles.slice(0,3)\n        })\n    }\n    render(){\n        const {\n            trumpNews,\n            USHealth,\n            technology,\n            business,\n            entertainment,\n            sports\n        }=this.state;\n\n        if(!trumpNews) return (\n            <Container fluid>\n                <Row className=\"justify-content-md-center\">\n                    <Col xs=\"12\" lg=\"8\">\n                    <Card \n                        className=\"shadow\" \n                        style={{marginBottom:'1rem',paddingTop:'15rem',border:'none',minHeight:\"700px\"}}\n                    >\n                        <Loader \n                            type=\"ThreeDots\"\n                            color=\"#DD2C00\"\n                            height={100}\n                            width={100}\n                            timeout={900000000}\n                        />\n                    </Card>     \n                    </Col>\n                </Row>\n            </Container>\n        );\n        return(\n            <div className=\"mid\">\n                <Container fluid>\n                    <Row className=\"justify-content-md-center\">\n                        <Col xs lg=\"8\" style={{marginBottom:'1rem',marginTop:'1rem',padding:'0rem'}}>\n                            <h3>Latest News on Health</h3>\n                            <span className=\"fade-line\"></span>\n                        </Col>\n                    </Row>\n                    <Row className=\"justify-content-md-center\">\n                        <Col xs=\"12\" lg=\"8\">\n                            <CardColumns>\n                                \n                                    {\n                                        USHealth.map((newsItem,i)=>\n                                        <Card key={i}\n                                            className=\"shadow-sm\" \n                                            style={{marginBottom:'1rem',padding:'0rem',border:'none'}}\n                                        >\n                                            <Card.Img variant=\"top\" style={{minHeight:'10rem'}} src={newsItem.urlToImage} />\n                                            <small className=\"text-muted\">published at {newsItem.publishedAt}</small>\n                                            <Card.Body>\n                                            <Card.Title style={{fontSize:'medium',textAlign:'left'}}>{newsItem.title}</Card.Title>\n                                            <Card.Text style={{overflow:'hidden',textOverflow:'ellipsis',maxHeight:'4rem',whiteSpace:'pre-wrap'}}>\n                                                {newsItem.description}\n                                            </Card.Text>\n                                            </Card.Body>\n                                            <Card.Footer>\n                                                <Card.Link href={newsItem.url} alt={newsItem.title} target=\"_blank\"><b>Read Fill Story on</b> {newsItem.source.name}</Card.Link>\n                                            </Card.Footer>\n                                        </Card>\n                                        )\n                                    } \n                            </CardColumns>    \n                        </Col>\n                    </Row>\n                    \n\n                    <Row className=\"justify-content-md-center\">\n                        <Col xs lg=\"8\" style={{marginBottom:'1rem',marginTop:'1rem',padding:'0rem'}}>\n                            <h3>What Donuld Trump Says ?</h3>\n                            <span className=\"fade-line\"></span>\n                        </Col>\n                    </Row>\n                    <Row className=\"justify-content-md-center\">\n                        <Col xs=\"12\" lg=\"8\">\n                            <CardColumns>\n                                \n                                    {\n                                        trumpNews.map((newsItem,i)=>\n                                        <Card key={i}\n                                            className=\"shadow-sm\" \n                                            style={{marginBottom:'1rem',padding:'0rem',border:'none'}}\n                                        >\n                                            <Card.Img variant=\"top\" style={{minHeight:'10rem'}} src={newsItem.urlToImage} />\n                                            <small className=\"text-muted\">published at {newsItem.publishedAt}</small>\n                                            <Card.Body>\n                                            <Card.Title style={{fontSize:'medium',textAlign:'left'}}>{newsItem.title}</Card.Title>\n                                            <Card.Text style={{overflow:'hidden',textOverflow:'ellipsis',maxHeight:'4rem',whiteSpace:'pre-wrap'}}>\n                                                {newsItem.description}\n                                            </Card.Text>\n                                            </Card.Body>\n                                            <Card.Footer>\n                                                <Card.Link href={newsItem.url} alt={newsItem.title} target=\"_blank\"><b>Read Fill Story on</b> {newsItem.source.name}</Card.Link>\n                                            </Card.Footer>\n                                        </Card>\n                                        )\n                                    } \n                            </CardColumns>    \n                        </Col>\n                    </Row>\n\n                    <Row className=\"justify-content-md-center\">\n                        <Col xs lg=\"8\" style={{marginBottom:'1rem',marginTop:'1rem',padding:'0rem'}}>\n                            <h3>An Inside to Technology</h3>\n                            <span className=\"fade-line\"></span>\n                        </Col>\n                    </Row>\n                    <Row className=\"justify-content-md-center\">\n                        <Col xs=\"12\" lg=\"8\">\n                            <CardColumns>\n                                \n                                    {\n                                        technology.map((newsItem,i)=>\n                                        <Card key={i}\n                                            className=\"shadow-sm\" \n                                            style={{marginBottom:'1rem',padding:'0rem',border:'none'}}\n                                        >\n                                            <Card.Img variant=\"top\" style={{minHeight:'10rem'}} src={newsItem.urlToImage} />\n                                            <small className=\"text-muted\">published at {newsItem.publishedAt}</small>\n                                            <Card.Body>\n                                            <Card.Title style={{fontSize:'medium',textAlign:'left'}}>{newsItem.title}</Card.Title>\n                                            <Card.Text style={{overflow:'hidden',textOverflow:'ellipsis',maxHeight:'4rem',whiteSpace:'pre-wrap'}}>\n                                                {newsItem.description}\n                                            </Card.Text>\n                                            </Card.Body>\n                                            <Card.Footer>\n                                                <Card.Link href={newsItem.url} alt={newsItem.title} target=\"_blank\"><b>Read Fill Story on</b> {newsItem.source.name}</Card.Link>\n                                            </Card.Footer>\n                                        </Card>\n                                        )\n                                    } \n                            </CardColumns>    \n                        </Col>\n                    </Row>\n\n                    <Row className=\"justify-content-md-center\">\n                        <Col xs lg=\"8\" style={{marginBottom:'1rem',marginTop:'1rem',padding:'0rem'}}>\n                            <h3>Business Insider</h3>\n                            <span className=\"fade-line\"></span>\n                        </Col>\n                    </Row>\n                    <Row className=\"justify-content-md-center\">\n                        <Col xs=\"12\" lg=\"8\">\n                            <CardColumns>\n                                \n                                    {\n                                        business.map((newsItem,i)=>\n                                        <Card key={i}\n                                            className=\"shadow-sm\" \n                                            style={{marginBottom:'1rem',padding:'0rem',border:'none'}}\n                                        >\n                                            <Card.Img variant=\"top\" style={{minHeight:'10rem'}} src={newsItem.urlToImage} />\n                                            <small className=\"text-muted\">published at {newsItem.publishedAt}</small>\n                                            <Card.Body>\n                                            <Card.Title style={{fontSize:'medium',textAlign:'left'}}>{newsItem.title}</Card.Title>\n                                            <Card.Text style={{overflow:'hidden',textOverflow:'ellipsis',maxHeight:'4rem',whiteSpace:'pre-wrap'}}>\n                                                {newsItem.description}\n                                            </Card.Text>\n                                            </Card.Body>\n                                            <Card.Footer>\n                                                <Card.Link href={newsItem.url} alt={newsItem.title} target=\"_blank\"><b>Read Fill Story on</b> {newsItem.source.name}</Card.Link>\n                                            </Card.Footer>\n                                        </Card>\n                                        )\n                                    } \n                            </CardColumns>    \n                        </Col>\n                    </Row>\n\n                    <Row className=\"justify-content-md-center\">\n                        <Col xs lg=\"8\" style={{marginBottom:'1rem',marginTop:'1rem',padding:'0rem'}}>\n                            <h3>Entertainment Hall</h3>\n                            <span className=\"fade-line\"></span>\n                        </Col>\n                    </Row>\n                    <Row className=\"justify-content-md-center\">\n                        <Col xs=\"12\" lg=\"8\">\n                            <CardColumns>\n                                \n                                    {\n                                        entertainment.map((newsItem,i)=>\n                                        <Card key={i}\n                                            className=\"shadow-sm\" \n                                            style={{marginBottom:'1rem',padding:'0rem',border:'none'}}\n                                        >\n                                            <Card.Img variant=\"top\" style={{minHeight:'10rem'}} src={newsItem.urlToImage} />\n                                            <small className=\"text-muted\">published at {newsItem.publishedAt}</small>\n                                            <Card.Body>\n                                            <Card.Title style={{fontSize:'medium',textAlign:'left'}}>{newsItem.title}</Card.Title>\n                                            <Card.Text style={{overflow:'hidden',textOverflow:'ellipsis',maxHeight:'4rem',whiteSpace:'pre-wrap'}}>\n                                                {newsItem.description}\n                                            </Card.Text>\n                                            </Card.Body>\n                                            <Card.Footer>\n                                                <Card.Link href={newsItem.url} alt={newsItem.title} target=\"_blank\"><b>Read Fill Story on</b> {newsItem.source.name}</Card.Link>\n                                            </Card.Footer>\n                                        </Card>\n                                        )\n                                    } \n                            </CardColumns>    \n                        </Col>\n                    </Row>\n\n                    <Row className=\"justify-content-md-center\">\n                        <Col xs lg=\"8\" style={{marginBottom:'1rem',marginTop:'1rem',padding:'0rem'}}>\n                            <h3>Sports Universe</h3>\n                            <span className=\"fade-line\"></span>\n                        </Col>\n                    </Row>\n                    <Row className=\"justify-content-md-center\">\n                        <Col xs=\"12\" lg=\"8\">\n                            <CardColumns>\n                                \n                                    {\n                                        sports.map((newsItem,i)=>\n                                        <Card key={i}\n                                            className=\"shadow-sm\" \n                                            style={{marginBottom:'1rem',padding:'0rem',border:'none'}}\n                                        >\n                                            <Card.Img variant=\"top\" style={{minHeight:'10rem'}} src={newsItem.urlToImage} />\n                                            <small className=\"text-muted\">published at {newsItem.publishedAt}</small>\n                                            <Card.Body>\n                                            <Card.Title style={{fontSize:'medium',textAlign:'left'}}>{newsItem.title}</Card.Title>\n                                            <Card.Text style={{overflow:'hidden',textOverflow:'ellipsis',maxHeight:'4rem',whiteSpace:'pre-wrap'}}>\n                                                {newsItem.description}\n                                            </Card.Text>\n                                            </Card.Body>\n                                            <Card.Footer>\n                                                <Card.Link href={newsItem.url} alt={newsItem.title} target=\"_blank\"><b>Read Fill Story on</b> {newsItem.source.name}</Card.Link>\n                                            </Card.Footer>\n                                        </Card>\n                                        )\n                                    } \n                            </CardColumns>    \n                        </Col>\n                    </Row>\n                </Container>\n            </div>\n        )\n    }\n}\nexport default News;","import React, { Component } from 'react';\nimport {Container,Row,Col, Card} from 'react-bootstrap';\nimport ReactGA from 'react-ga';\n\nclass AboutCoronavirus extends Component{\n    componentDidMount(){\n\n        ReactGA.initialize('UA-163115935-1');\n        ReactGA.pageview('/About-Coronavirus');\n    }\n    render(){\n        return(\n            <div className=\"mid\">\n                <Container fluid>\n    \n                    <Row className=\"justify-content-md-center\" style={{textAlign:\"left\"}}>\n                        <Col xs=\"12\" lg=\"8\">\n                            <Card className=\"shadow-sm\" style={{marginBottom:\"1rem\"}}>\n                                <Card.Body>\n                                    <Card.Title>Coronavirus Overview</Card.Title>\n                                    <Card.Text>\n                                        <p>Coronavirus disease (COVID-19) is an infectious disease caused by a new virus.<br/><br/>\n                                        The disease causes respiratory illness (like the flu) with symptoms such as a cough, \n                                        fever, and in more severe cases, difficulty breathing. You can protect yourself by washing \n                                        your hands frequently, avoiding touching your face, and avoiding close contact \n                                        (1 meter or 3 feet) with people who are unwell.</p>\n                                        <Card.Title>HOW IT SPREADS ?</Card.Title>\n                                        <p>Coronavirus disease spreads primarily through contact with an infected person when they cough \n                                            or sneeze. It also spreads when a person touches a surface or object that has the virus on it, \n                                            then touches their eyes, nose, or mouth.</p>\n    \n                                    </Card.Text>\n                                    <Card.Link href=\"https://www.who.int/emergencies/diseases/novel-coronavirus-2019\" \n                                    alt=\"WHO Coronavirus pandemic\"\n                                    target=\"_blank\">\n                                        Learn more on WHO website\n                                    </Card.Link>\n                                </Card.Body>\n                            </Card> \n    \n                            <Card className=\"shadow-sm\" style={{marginBottom:\"1rem\"}}>\n                                <Card.Body>\n                                    <Card.Title>Coronavirus Symptoms</Card.Title>\n                                    <Card.Text>\n                                        <p>People may be sick with the virus for 1 to 14 days before developing symptoms. \n                                            The most common symptoms of coronavirus disease (COVID-19) are fever, tiredness, \n                                            and dry cough. Most people (about 80%) recover from the disease without needing special \n                                            treatment.<br/><br/>\n                                            More rarely, the disease can be serious and even fatal. Older people, and people with \n                                            other medical conditions (such as asthma, diabetes, or heart disease), may be more \n                                            vulnerable to becoming severely ill.<br/><br/>\n                                            \n                                            <b>People may experience:</b><br/><br/>\n                                            1 - cough<br/>\n                                            2 - fever<br/>\n                                            3 - tiredness<br/>\n                                            4 - difficulty breathing (severe cases)<br/></p>\n                                        \n    \n                                    </Card.Text>\n                                    <Card.Link href=\"https://www.who.int/emergencies/diseases/novel-coronavirus-2019\" \n                                    alt=\"WHO Coronavirus pandemic Symptoms\"\n                                    target=\"_blank\">\n                                        Learn more on WHO website\n                                    </Card.Link>\n                                </Card.Body>\n                            </Card>\n    \n                            <Card className=\"shadow-sm\" style={{marginBottom:\"1rem\"}}>\n                                <Card.Body>\n                                    <Card.Title>Coronavirus Prevention</Card.Title>\n                                    <Card.Text>\n                                        <p>There’s currently no vaccine to prevent coronavirus disease (COVID-19).<br/><br/>\n    \n                                            You can protect yourself and help prevent spreading the virus to others if you:<br/><br/>\n                                            \n                                            <b>DO:</b><br/><br/>\n                                            1 - Wash your hands regularly for 20 seconds, with soap and water or alcohol-based hand rub<br/><br/>\n                                            2 - Cover your nose and mouth with a disposable tissue or flexed elbow when you cough or sneeze<br/><br/>\n                                            3 - Avoid close contact (1 meter or 3 feet) with people who are unwell<br/><br/>\n                                            4 - Stay home and self-isolate from others in the household if you feel unwell<br/><br/>\n    \n                                            <b>DON'T:</b><br/><br/>\n                                            1 - Touch your eyes, nose, or mouth if your hands are not clean<br/><br/>\n                                            </p>\n                                        \n    \n                                    </Card.Text>\n                                    <Card.Link href=\"https://www.who.int/emergencies/diseases/novel-coronavirus-2019\" \n                                    alt=\"WHO Coronavirus pandemic Prevention\"\n                                    target=\"_blank\">\n                                        Learn more on WHO website\n                                    </Card.Link>\n                                </Card.Body>\n                            </Card>\n    \n                            <Card className=\"shadow-sm\" style={{marginBottom:\"1rem\"}}>\n                                <Card.Body>\n                                    <Card.Title>Coronavirus Treatment</Card.Title>\n                                    <Card.Text>\n                                        <p>There is no specific medicine to prevent or treat coronavirus disease (COVID-19). \n                                            People may need supportive care to help them breathe.<br/><br/>\n                                            \n                                            <b>Self Care</b><br/><br/>\n    \n                                            If you have mild symptoms, stay at home until you’ve recovered. You can relieve your symptoms if you:<br/><br/>\n    \n                                            1 - rest and sleep<br/><br/>\n                                            2 - keep warm<br/><br/>\n                                            3 - drink plenty of liquids<br/><br/>\n                                            4 - use a room humidifier or take a hot shower to help ease a sore throat and cough<br/><br/>\n    \n                                            <b>Medical Treatments</b><br/><br/>\n                                            If you develop a fever, cough, and have difficulty breathing, promptly seek medical care. \n                                            Call in advance and tell your health provider of any recent travel or recent contact with travelers.<br/><br/>\n                                            </p>\n                                        \n    \n                                    </Card.Text>\n                                    <Card.Link href=\"https://www.who.int/emergencies/diseases/novel-coronavirus-2019\" \n                                    alt=\"WHO Coronavirus pandemic Treatment\"\n                                    target=\"_blank\">\n                                        Learn more on WHO website\n                                    </Card.Link>\n                                </Card.Body>\n                            </Card>\n    \n                        </Col>\n                    </Row>\n                </Container>\n            </div>\n        )\n    }\n}\nexport default AboutCoronavirus;","import React from 'react';\nimport { Container, Row,Col} from 'react-bootstrap';\nconst dataProvider = 'https://github.com/CSSEGISandData/COVID-19';\nconst dataParser = 'https://github.com/pomber/covid19';\n\nfunction Footer(){\n    return(\n        <div className=\"footer\">\n            <Container fluid>\n            <Row className=\"justify-content-md-center\">\n                <Col xs=\"12\" lg=\"8\">\n                <p style={{ fontSize: 14, lineHeight: 1.2, marginTop: 10,marginBottom:24, marginLeft:50,marginRight:50 }}>\n                    Data, Numbers and Stats provided on this website is pulled from different data sources. This website is \n                    merely a mean of providing a general overview and graphical representation of COVID-19 pandemic. Viewers / visitors \n                    of this website is advised not to absorb Data, Numbers and Stats as final and do visit other information sources\n                    for the sack of your information.  \n                </p>\n                <p>\n                    Data retrieved from <a href={dataProvider} rel=\"alternate nooperner noreferre\" target=\"_blank\">Johns Hopkins</a> via{' '}\n                    <a href={dataParser} rel=\"alternate nooperner noreferre\" target=\"_blank\">@pomber</a> <br />\n                </p>\n                <p>\n                    And <a href=\"https://covid-19-apis.postman.com/\" rel=\"alternate nooperner noreferre\" target=\"_blank\">postman.com</a>\n                </p>\n                <p>\n                    Developed with <a href=\"http://recharts.org/\" rel=\"alternate nooperner noreferre\" target=\"_blank\">Recharts for Responsive Charting</a>,{' '}\n                    <a href=\"https://react-bootstrap.github.io/\" rel=\"alternate nooperner noreferre\" target=\"_blank\">React-Bootstrap</a>,{' '}\n                    <a href=\"https://react-leaflet.js.org/\" rel=\"alternate nooperner noreferre\" target=\"_blank\">React-Leaflet for Map Data Visualization</a>,{' '}\n                    <a href=\"https://reactjs.org\" rel=\"alternate nooperner noreferre\" target=\"_blank\">React</a> by{' '}\n                    <a href=\"https://github.com/arifshariati\" rel=\"alternate nooperner noreferre\" target=\"_blank\">Arif Shariati</a>\n                </p>\n                <p>\n                    There is always room for improvement ! <b>if you want to contribute?</b> Please do so !{' '}\n                    <a href=\"https://github.com/eminx/thecurve\" rel=\"alternate nooperner noreferre\" target=\"_blank\">Create an issue</a> or{' '}\n                    <a href=\"mailto:mohammad.arif.fast@hotmail.com\">send me an email</a>\n                </p>\n                </Col>\n            </Row>\n        </Container>\n        </div>\n    )\n}\nexport default Footer;","import React, { Component } from 'react';\nimport '../src/assets/css/App.css';\nimport Header from './components/header';\nimport LandingPage from './components/landingPage';\nimport DataChart from './components/dataChart';\nimport DataChartOnly from './components/dataChartOnly';\nimport News from './components/news';\nimport AboutCoronavirus from './components/aboutCoronavirus';\nimport Footer from './components/footer';\nimport ReactGA from 'react-ga';\nimport { BrowserRouter as Router, Route} from 'react-router-dom';\n\n\nclass App extends Component {\n  \n  componentDidMount(){\n\n    this.initializeReactGA();\n    \n  }\n  initializeReactGA(){\n    ReactGA.initialize('UA-163115935-1');\n    ReactGA.pageview('/homepage');\n  }\n  \n  render(){\n    return (\n      <div className=\"App\">\n        <Router>\n          <Header />\n          <Route exact path=\"/\" component={LandingPage} />\n          <Route  path=\"/Data-Visualization\" component={DataChartOnly} />\n          <Route path=\"/Daily-Data\" component={DataChart} />\n          <Route path=\"/News\" component={News} />\n          <Route path=\"/About-Coronavirus\" component={AboutCoronavirus} />\n          <Footer />\n        </Router>\n      </div>\n      )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\nserviceWorker.unregister();\n"],"sourceRoot":""}