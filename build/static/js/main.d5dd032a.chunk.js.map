{"version":3,"sources":["components/header.jsx","components/landingPage.jsx","components/pagination.jsx","components/dataChart.jsx","components/dataChartOnly.jsx","components/news.jsx","components/footer.jsx","App.js","serviceWorker.js","index.js"],"names":["Header","className","Container","fluid","Row","Col","xs","lg","Navbar","expand","Brand","href","Toggle","aria-controls","Collapse","id","Nav","pullright","Link","alt","colors","LandingPage","state","confirmed","recovered","deaths","total","incidents","incidentsSorted","confirmedSorted","recoveredSorted","deathsSorted","zoom","minZoom","width","window","innerWidth","document","documentElement","clientWidth","body","updateDimensions","setState","this","getData","addEventListener","Axios","get","res","totalDeaths","filteredData","data","filter","row","lat","sortfilteredData","countryRegion","sort","a","b","slice","value","Card","style","marginBottom","padding","border","Map","center","TileLayer","url","map","city","i","CircleMarker","key","long","readius","Math","log","fillOpacity","fillColor","stroke","Alert","backgroundColor","displayType","thousandSeparator","round","color","marginTop","textAlign","height","margin","top","right","left","bottom","layout","barSize","strokeDasharray","type","dataKey","fill","Component","Pagination","dataPerPage","totalData","paginate","PageNumber","ceil","push","number","onClick","DataChart","props","currentData","currentPage","selectedCountry","temp","countries","tableCountries","bind","getCountry","getCountryByIP","country_name","byConfirmed","Object","keys","indexOfLastData","indexOfFirstData","event","persist","countryRes","searchCountry","target","pageNumber","updatePageNumber","Form","Control","as","size","onChange","custom","items","dot","Table","responsive","striped","bordered","hover","list","index","date","fontWeight","length","DataChartOnly","marginRight","News","trumpNews","USHealth","technology","business","entertainment","sports","getNews","trumpNewsRes","USHealthRes","technologyRes","businessRes","entertainmentRes","sportsRes","console","articles","CardColumns","newsItem","Img","variant","minHeight","src","urlToImage","publishedAt","Body","Title","fontSize","title","Text","overflow","textOverflow","maxHeight","whiteSpace","description","Footer","source","name","lineHeight","marginLeft","rel","App","exact","path","component","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.d5dd032a.chunk.js","sourcesContent":["import React from 'react';\nimport {Navbar,Nav, Container, Row,Col} from 'react-bootstrap';\nfunction Header(){\nreturn(\n    <div className=\"header\">\n        <Container fluid>\n            <Row className=\"justify-content-md-center\">\n                <Col xs=\"12\" lg=\"8\">\n                    <Navbar expand=\"lg\">\n                        <Navbar.Brand href=\"/\">COVID-19 Cases Visualization </Navbar.Brand>\n                        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                        <Navbar.Collapse id=\"basic-navbar-nav\">\n                            <Nav pullright>\n                                <Nav.Link href=\"/\" alt=\"Coronavirus Home Page\">Home</Nav.Link>\n                                <Nav.Link href=\"/DataChartOnly\" alt=\"Coronavirus visual data\">Data Chart</Nav.Link>\n                                <Nav.Link href=\"/Data-Table\" alt=\"Coronavirus Deaths and Recovered Cases\">Data Table</Nav.Link>\n                                <Nav.Link href=\"/News\" alt=\"Coronavirus Latest News\"> <b>BORED ?</b> Vist News Gallery</Nav.Link>\n                            </Nav>\n                        </Navbar.Collapse>\n                    </Navbar>\n                </Col>\n            </Row>\n        </Container>\n        </div>\n)\n}\nexport default Header;","import React, { Component } from 'react';\nimport Axios from 'axios';\nimport { Map, CircleMarker,TileLayer} from 'react-leaflet';\nimport {Container,Row,Col, Card, Alert} from 'react-bootstrap';\nimport NumberFormat from 'react-number-format';\nimport { BarChart, Bar, XAxis,YAxis, CartesianGrid,Tooltip,Legend} from 'recharts';\nimport \"leaflet/dist/leaflet.css\";\n\nconst colors = {\n    confirmed: '#FFD31D',\n    recovered: '#21BF72',\n    deaths: '#DD2C00',\n  };\nclass LandingPage extends Component{\n    state={\n        confirmed:0,\n        recovered:0,\n        deaths:0,\n        total:0,\n        incidents:[],\n        incidentsSorted:[],\n        confirmedSorted:[],\n        recoveredSorted:[],\n        deathsSorted:[],\n        zoom:2,\n        minZoom:2,\n        width:\n        window.innerWidth ||\n        document.documentElement.clientWidth ||\n        document.body.clientWidth\n      }\n    \n      componentDidMount(){\n        this.getData();\n        window.addEventListener('resize',this.updateDimensions);\n      }\n      updateDimensions = ()=>{\n        const width = \n        window.innerWidth ||\n        document.documentElement.clientWidth ||\n        document.body.clientWidth;\n\n        this.setState({width});\n    }\n      async getData(){\n      const res=await Axios.get(\"https://covid19.mathdro.id/api/confirmed\");\n      const totalDeaths=await Axios.get(\"https://covid19.mathdro.id/api\");\n      \n      const filteredData=res.data.filter(row=> row.lat !== null)\n      \n      const sortfilteredData=res.data.filter(row=>row.countryRegion !== \"US\")\n    \n      const incidentsSorted=sortfilteredData.sort(function(a,b){\n        return b.confirmed - a.confirmed;\n    });\n      const confirmedSorted=sortfilteredData.sort(function(a,b){\n        return b.confirmed - a.confirmed;\n    });\n\n    const recoveredSorted=sortfilteredData.sort(function(a,b){\n        return b.recovered - a.recovered;\n    });\n\n    const deathsSorted=sortfilteredData.sort(function(a,b){\n        return b.deaths - a.deaths;\n    });\n\n      this.setState({\n        incidents:filteredData,\n        incidentsSorted:incidentsSorted.slice(1,10),\n        confirmedSorted:confirmedSorted.slice(1,10),\n        recoveredSorted:recoveredSorted.slice(1,10),\n        deathsSorted:deathsSorted.slice(1,10),\n        total:totalDeaths.data.deaths.value,\n        confirmed:totalDeaths.data.confirmed.value,\n        recovered:totalDeaths.data.recovered.value,\n        deaths:totalDeaths.data.deaths.value\n      })\n      }\n    render(){\n        const {\n            confirmed,\n            recovered,\n            deaths,\n            total,\n            incidents,\n            confirmedSorted,\n            recoveredSorted,\n            deathsSorted,\n            zoom,\n            minZoom,\n            width\n        } = this.state;\n        return(\n            <div className=\"mid\">\n                <Container fluid>\n                    <Row className=\"justify-content-md-center\">\n                        <Col xs=\"12\" lg=\"8\">\n                        <Card className=\"shadow\" style={{marginBottom:'1rem',padding:'1rem',border:'none'}}>\n                            <Map\n                                width={ width > 980 ? 960 : width - 80 }\n                                zoom={width < 980 ? 1 : zoom}\n                                center={[20.505,-0.09]}\n                                minZoom={width < 980 ? 1 : minZoom}\n                                >\n                                <TileLayer url=\"https://{s}.tile.osm.org/{z}/{x}/{y}.png\" />\n                                \n                                {\n                                incidents.map((city,i) => {\n                                    return (\n                                    <CircleMarker \n                                        key={i} \n                                        center={[city.lat, city.long]} \n                                        readius={20 * Math.log(city.deaths / total)}\n                                        fillOpacity={0.5}\n                                        fillColor={\"red\"}\n                                        stroke={false}\n                                    />\n                                    )\n                                })\n                                }\n                            </Map>\n                        </Card>     \n                        </Col>\n                    </Row>\n                </Container>\n                <Container fluid>\n                    <Row className=\"justify-content-md-center\">\n                        <Col xs lg=\"8\">\n                        <Card className=\"shadow-sm\" style={{marginBottom:'0rem',padding:'1rem',border:'none'}}>\n                            <Row className=\"justify-content-md-center\">\n                                <Col>\n                                    <Alert className=\"shadow\" style={{backgroundColor:colors.confirmed}}>\n                                    <h4>\n                                    <NumberFormat \n                                        value={confirmed} \n                                        displayType={'text'} \n                                        thousandSeparator={true} \n                                    />  \n                                    </h4>  \n                                    <p><b>Accomulative</b><i> as of today</i></p> \n                                    </Alert>\n                                </Col>\n                                <Col>\n                                    <Alert className=\"shadow\" style={{backgroundColor:colors.recovered}}>\n                                    <h4>\n                                    <NumberFormat \n                                        value={recovered} \n                                        displayType={'text'} \n                                        thousandSeparator={true} \n                                    />\n                                    </h4>\n                                    <h6><b>{Math.round((recovered / confirmed) * 100)}</b><i>% Recovery</i></h6>  \n                                    </Alert>\n                                </Col>\n                                <Col>\n                                    <Alert className=\"shadow\" style={{backgroundColor:colors.deaths,color:'#FFFFFF'}}>\n                                    <h4>\n                                    <NumberFormat \n                                        value={deaths} \n                                        displayType={'text'} \n                                        thousandSeparator={true} \n                                    />\n                                    </h4>\n                                    <h6><b>{Math.round((deaths / confirmed) * 100)}</b><i>% Deaths</i></h6>   \n                                    </Alert>\n                                </Col>\n                            </Row>\n                        </Card>     \n                        </Col>\n                    </Row>\n                </Container>\n\n                <Container fluid>\n                    <Row className=\"justify-content-md-center\">\n                        <Col xs lg=\"8\">\n                        <Card className=\"shadow-sm\" style={{marginBottom:'1rem',padding:'1rem',border:'none'}}>\n                            <div style={{marginTop:'1rem'}}>\n                                <h5 style={{textAlign:'center'}}>Top 10 Counties - Confirmed Cases Data</h5>\n                            </div>\n                        <BarChart \n                            width={ width > 980 ? 1200 : width - 80 } \n                            height={400} \n                            data={confirmedSorted}\n                            margin={{top: 5, right: 30, left: 20, bottom: 5}}\n                            layout=\"vertical\"\n                            barSize={15}\n                        >\n                        <CartesianGrid strokeDasharray=\"1 1\"/>\n                        <XAxis  type=\"number\"/>\n                        <YAxis dataKey=\"countryRegion\" type=\"category\" />\n                        <Tooltip/>\n                        <Legend  />\n                        <Bar dataKey=\"confirmed\" fill={colors.confirmed} />\n                        </BarChart>\n                        </Card>     \n                        </Col>\n                    </Row>\n                </Container>\n\n                <Container fluid>\n                    <Row className=\"justify-content-md-center\">\n                        <Col xs lg=\"8\">\n                        <Card className=\"shadow-sm\" style={{marginBottom:'1rem',padding:'1rem',border:'none'}}>\n                            <div style={{marginTop:'1rem'}}>\n                                <h5 style={{textAlign:'center'}}>Top 10 Countries - Recovered Cases Data</h5>\n                            </div>\n                        <BarChart \n                            width={ width > 980 ? 1200 : width - 80 }  \n                            height={400} \n                            data={recoveredSorted}\n                            margin={{top: 5, right: 30, left: 20, bottom: 5}}\n                            layout=\"vertical\"\n                            barSize={15}\n                        >\n                        <CartesianGrid strokeDasharray=\"1 1\"/>\n                        <XAxis type=\"number\"/>\n                        <YAxis dataKey=\"countryRegion\" type=\"category\"/>\n                        <Tooltip/>\n                        <Legend />\n                        <Bar dataKey=\"recovered\" fill={colors.recovered} />\n                        </BarChart>\n                        </Card>     \n                        </Col>\n                    </Row>\n                </Container>\n\n                <Container fluid>\n                    <Row className=\"justify-content-md-center\">\n                        <Col xs lg=\"8\">\n                        <Card className=\"shadow-sm\" style={{marginBottom:'1rem',padding:'1rem',border:'none'}}>\n                            <div style={{marginTop:'1rem'}}>\n                                <h5 style={{textAlign:'center'}}>Top 10 Countries - Death Cases Data</h5>\n                            </div>\n                        <BarChart \n                            width={ width > 980 ? 1200 : width - 80 }  \n                            height={400} \n                            data={deathsSorted}\n                            margin={{top: 5, right: 30, left: 20, bottom: 5}}\n                            layout=\"vertical\"\n                            barSize={15}\n                        >\n                        <CartesianGrid strokeDasharray=\"1 1\"/>\n                        <XAxis type=\"number\"/>\n                        <YAxis dataKey=\"countryRegion\" type=\"category\"/>\n                        <Tooltip/>\n                        <Legend />\n                        <Bar dataKey=\"deaths\" fill={colors.deaths} width={1} />\n                        </BarChart>\n                        </Card>     \n                        </Col>\n                    </Row>\n                </Container>\n            </div>\n        )\n    }\n}\nexport default LandingPage;","import React from 'react';\nimport { Nav } from 'react-bootstrap';\n\nconst Pagination = ({dataPerPage, totalData, paginate}) =>{\n    const PageNumber=[];\n    for(let i=1;i<=Math.ceil(totalData/dataPerPage);i++){\n        PageNumber.push(i);\n    }\n    return (\n        <Nav>\n            <ul className=\"pagination justify-content-center\">\n                {\n                    PageNumber.map(number=>(\n                        <li key={number} className=\"page-item\">\n                            <a onClick={()=>paginate(number)} href=\"#\" className=\"page-link\">{number}</a>\n                        </li>\n                    ))\n                }\n            </ul>\n        </Nav>\n    )\n}\nexport default Pagination;","import React, { Component } from 'react';\nimport Axios from 'axios';\nimport {Container,Row,Col,Table,Form, Card} from 'react-bootstrap';\nimport NumberFormat from 'react-number-format';\nimport { AreaChart, XAxis,YAxis, CartesianGrid,Tooltip,Legend, Area} from 'recharts';\nimport Pagination from './pagination';\n\nconst colors = {\n    confirmed: '#FFD31D',\n    recovered: '#21BF72',\n    deaths: '#DD2C00',\n  };\n\nclass DataChart extends Component{\n    constructor (props){\n        super(props);\n        this.getData=this.getData.bind(this);\n        this.getCountry=this.getCountry.bind(this);\n        this.paginate=this.paginate.bind(this);\n      }\n      \n      state={\n        currentData:[],\n        currentPage:1,\n        dataPerPage:7,\n        selectedCountry:\"China\",\n        temp:[],\n        countries:[],\n        tableCountries:[],\n        width:\n        window.innerWidth ||\n        document.documentElement.clientWidth ||\n        document.body.clientWidth\n      }\n      componentDidMount(){\n        this.getCountryByIP();\n        window.addEventListener('resize',this.updateDimensions);\n      }\n      updateDimensions = ()=>{\n          const width = \n          window.innerWidth ||\n          document.documentElement.clientWidth ||\n          document.body.clientWidth;\n\n          this.setState({width});\n      }\n      async getCountryByIP(){\n        const res=await Axios.get(\"https://ipapi.co/json\");\n        this.setState({\n            selectedCountry:res.data.country_name\n        })\n        this.getData();\n    }\n      async getData(){\n        const res=await Axios.get(\"https://pomber.github.io/covid19/timeseries.json\");\n        const selectedCountry=this.state.selectedCountry;\n        const byConfirmed=res.data[selectedCountry].slice(0);\n        byConfirmed.sort(function(a,b){\n            return b.confirmed - a.confirmed;\n        });\n\n        this.setState({\n          countries:res.data[selectedCountry],\n          tableCountries:byConfirmed,\n          temp:Object.keys(res.data)\n        })\n\n        const indexOfLastData=this.state.currentPage * this.state.dataPerPage;\n        const indexOfFirstData=indexOfLastData - this.state.dataPerPage;\n        this.setState({\n            currentData:this.state.tableCountries.slice(indexOfFirstData,indexOfLastData)\n        })\n        \n      }\n      async getCountry(event){\n        event.persist();\n        const countryRes=await Axios.get(\"https://pomber.github.io/covid19/timeseries.json\");\n        const searchCountry=event.target.value;\n        \n        const byConfirmed=countryRes.data[searchCountry].slice(0);\n        byConfirmed.sort(function(a,b){\n            return b.confirmed - a.confirmed;\n        });\n\n        this.setState({\n            selectedCountry:searchCountry,\n            countries:countryRes.data[searchCountry],\n            tableCountries:byConfirmed\n        })\n        const indexOfLastData=this.state.currentPage * this.state.dataPerPage;\n        const indexOfFirstData=indexOfLastData - this.state.dataPerPage;\n        this.setState({\n            currentData:this.state.tableCountries.slice(indexOfFirstData,indexOfLastData)\n        })\n      }\n      async updatePageNumber(){\n        const countryRes=await Axios.get(\"https://pomber.github.io/covid19/timeseries.json\");\n        const searchCountry=this.state.selectedCountry;\n        \n        const byConfirmed=countryRes.data[searchCountry].slice(0);\n        byConfirmed.sort(function(a,b){\n            return b.confirmed - a.confirmed;\n        });\n\n        this.setState({\n            selectedCountry:searchCountry,\n            countries:countryRes.data[searchCountry],\n            tableCountries:byConfirmed\n        })\n        const indexOfLastData=this.state.currentPage * this.state.dataPerPage;\n        const indexOfFirstData=indexOfLastData - this.state.dataPerPage;\n        this.setState({\n            currentData:this.state.tableCountries.slice(indexOfFirstData,indexOfLastData)\n        })\n      }\n    //paginate = pageNumber=> this.setState({currentPage:pageNumber});\n        paginate(pageNumber){\n        this.setState({currentPage:pageNumber});\n        this.updatePageNumber();\n    }\n    \nrender(){\n    const {\n        currentData,\n        dataPerPage,\n        selectedCountry,\n        temp,\n        countries,\n        tableCountries,\n        width\n    } = this.state;\n    return(\n        <div className=\"mid\">\n            <Container fluid>\n                <Row className=\"justify-content-md-center\">\n                    <Col xs=\"12\" lg=\"8\">\n                    <Card className=\"shadow-sm\" style={{marginBottom:'1rem',padding:'1rem',border:'none'}}>\n                        <Form.Control as=\"select\" size=\"sm\" onChange={this.getCountry} custom>\n                                <option>{selectedCountry}</option> \n                                {\n                                temp.map((items,i)=>\n                                <option key={i}>{items}</option>  \n                                )\n                                }\n                            </Form.Control>\n                    </Card>     \n                    </Col>\n                </Row>\n            </Container>\n            \n            <Container fluid>\n                <Row className=\"justify-content-md-center\">\n                    <Col xs lg=\"8\">\n                        <Card className=\"shadow-sm\" style={{border:'none'}}>\n                            <div style={{marginTop:'1rem'}}>\n                                <h5 style={{textAlign:'center'}}>{selectedCountry}'s Data</h5>\n                            </div>\n                            <AreaChart \n                                width={ width > 980 ? 1200 : width - 80 } \n                                height={300} \n                                data={countries} \n                                margin={{top: 20, right: 20, left: 20, bottom: 20}}\n                                >\n                            <CartesianGrid strokeDasharray=\"1 1\" />\n                            <XAxis dataKey=\"date\" />\n                            <YAxis />\n                            <Tooltip />\n                            <Legend/>\n                            <Area type=\"monotone\"  dataKey=\"confirmed\" dot={false}  stroke={colors.confirmed} fill={colors.confirmed} />\n                            <Area type=\"monotone\" dataKey=\"recovered\" dot={false} stroke={colors.recovered} fill={colors.recovered} />\n                            <Area type=\"monotone\" dataKey=\"deaths\" dot={false}  stroke={colors.deaths} fill={colors.deaths} />\n                            </AreaChart>\n                        </Card>\n                    </Col>\n                </Row>\n            </Container>\n            \n            <Container fluid>\n                <Row className=\"justify-content-md-center\">\n                    <Col xs lg=\"8\">\n                        <Card className=\"shadow-sm\" style={{marginTop:'1rem',padding:'1rem',border:'none'}}>\n                            <Table responsive size=\"sm\" striped={true} bordered={true} hover>\n                                <thead>\n                                    <tr>\n                                    <th>Date</th>\n                                    <th>Confirmed</th>\n                                    <th>Recovered</th>\n                                    <th>Deaths</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {\n                                    currentData.map((list,index)=>\n                                    <tr key={index}>\n                                    <td>{list.date}</td>\n                                    <td><NumberFormat value={list.confirmed} displayType={'text'} thousandSeparator={true} /></td>\n                                    <td><NumberFormat value={list.recovered} displayType={'text'} thousandSeparator={true} /></td>\n                                    <td style={{fontWeight:\"bold\"}}><NumberFormat value={list.deaths} displayType={'text'} thousandSeparator={true} /></td>\n                                    </tr>\n                                    )\n                                    }\n                                </tbody>\n                                </Table>\n                                <Pagination  \n                                    dataPerPage={dataPerPage} \n                                    totalData={tableCountries.length} \n                                    paginate={this.paginate}\n                                />\n                        </Card>\n                    \n                    </Col>\n                </Row>\n            </Container>\n            \n        </div>\n    )\n}\n}\nexport default DataChart;","import React, { Component } from 'react';\nimport Axios from 'axios';\nimport {Container,Row,Col,Table,Form, Card} from 'react-bootstrap';\nimport NumberFormat from 'react-number-format';\nimport { AreaChart, XAxis,YAxis, CartesianGrid,Tooltip,Legend, Area} from 'recharts';\n\nconst colors = {\n    confirmed: '#FFD31D',\n    recovered: '#21BF72',\n    deaths: '#DD2C00',\n  };\n\nclass DataChartOnly extends Component{\n    constructor (props){\n        super(props);\n        this.getData=this.getData.bind(this);\n        this.getCountry=this.getCountry.bind(this);\n      }\n      \n      state={\n        currentData:[],\n        currentPage:1,\n        dataPerPage:7,\n        selectedCountry:\"China\",\n        temp:[],\n        countries:[],\n        tableCountries:[],\n        width:\n        window.innerWidth ||\n        document.documentElement.clientWidth ||\n        document.body.clientWidth\n      }\n      componentDidMount(){\n        this.getCountryByIP();\n        window.addEventListener('resize',this.updateDimensions);\n      }\n      updateDimensions = ()=>{\n          const width = \n          window.innerWidth ||\n          document.documentElement.clientWidth ||\n          document.body.clientWidth;\n\n          this.setState({width});\n      }\n      async getCountryByIP(){\n          const res=await Axios.get(\"https://ipapi.co/json\");\n          this.setState({\n              selectedCountry:res.data.country_name\n          })\n          this.getData();\n      }\n      async getData(){\n        const selectedCountry=this.state.selectedCountry;\n        const res=await Axios.get(\"https://pomber.github.io/covid19/timeseries.json\");\n        \n        const byConfirmed=res.data[selectedCountry];\n        byConfirmed.sort(function(a,b){\n            return a.confirmed - b.confirmed;\n        });\n\n        this.setState({\n          countries:res.data[selectedCountry],\n          tableCountries:byConfirmed,\n          temp:Object.keys(res.data)\n        })\n      }\n      async getCountry(event){\n        event.persist();\n        const countryRes=await Axios.get(\"https://pomber.github.io/covid19/timeseries.json\");\n        const searchCountry=event.target.value;\n        \n        const byConfirmed=countryRes.data[searchCountry].slice(0);\n        byConfirmed.sort(function(a,b){\n            return b.confirmed - a.confirmed;\n        });\n\n        this.setState({\n            selectedCountry:searchCountry,\n            countries:countryRes.data[searchCountry],\n            tableCountries:byConfirmed\n        })\n        const indexOfLastData=this.state.currentPage * this.state.dataPerPage;\n        const indexOfFirstData=indexOfLastData - this.state.dataPerPage;\n        this.setState({\n            currentData:this.state.tableCountries.slice(indexOfFirstData,indexOfLastData)\n        })\n      }\n    \nrender(){\n    const {\n        selectedCountry,\n        temp,\n        countries,\n        width\n    } = this.state;\n    return(\n        <div className=\"mid\">\n            <Container fluid>\n                <Row className=\"justify-content-md-center\">\n                    <Col xs=\"12\" lg=\"8\">\n                    <Card className=\"shadow-sm\" style={{marginBottom:'1rem',padding:'1rem',border:'none'}}>\n                        <Form.Control as=\"select\" size=\"sm\" onChange={this.getCountry} custom>\n                                <option>{selectedCountry}</option> \n                                {\n                                temp.map((items,i)=>\n                                <option key={i}>{items}</option>  \n                                )\n                                }\n                            </Form.Control>\n                    </Card>     \n                    </Col>\n                </Row>\n            </Container>\n            \n            <Container fluid>\n                <Row className=\"justify-content-md-center\">\n                    <Col xs lg=\"8\">\n                        <Card className=\"shadow-sm\" style={{border:'none'}}>\n                            <div style={{marginTop:'1rem'}}>\n                                <h5 style={{textAlign:'center'}}>{selectedCountry}'s Data</h5>\n                            </div>\n                            <AreaChart \n                                width={ width > 980 ? 1200 : width - 80 } \n                                height={300} \n                                data={countries} \n                                margin={{top: 20, right: 20, left: 20, bottom: 20}}\n                                >\n                            <CartesianGrid strokeDasharray=\"1 1\" />\n                            <XAxis dataKey=\"date\" />\n                            <YAxis />\n                            <Tooltip />\n                            <Legend/>\n                            <Area type=\"monotone\"  dataKey=\"confirmed\" dot={false}  stroke={colors.confirmed} fill={colors.confirmed} />\n                            <Area type=\"monotone\" dataKey=\"recovered\" dot={false} stroke={colors.recovered} fill={colors.recovered} />\n                            <Area type=\"monotone\" dataKey=\"deaths\" dot={false}  stroke={colors.deaths} fill={colors.deaths} />\n                            </AreaChart>\n                        </Card>\n                    </Col>\n                </Row>\n            </Container>\n\n            <Container fluid>\n                <Row className=\"justify-content-md-center\">\n                    <Col xs lg=\"8\">\n                        <Card className=\"shadow-sm\" style={{border:'none',marginTop:'1rem'}}>\n                            <Row className=\"justify-content-md-center\">\n                                <Col>\n                                    <AreaChart \n                                        width={\n                                            width > 980\n                                            ? 480\n                                            : width > 720\n                                            ? width / 2 - 80\n                                            : width - 80\n                                        }\n                                        height={250} \n                                        data={countries} \n                                        margin={{top: 20, right: 20, left: 20, bottom: 20}}\n                                        >\n                                    <CartesianGrid strokeDasharray=\"1 1\" />\n                                    <XAxis dataKey=\"date\" />\n                                    <YAxis />\n                                    <Tooltip />\n                                    <Legend/>\n                                    <Area type=\"monotone\"  dataKey=\"confirmed\" dot={false}  stroke={colors.confirmed} fill={colors.confirmed} />\n                                    </AreaChart>\n                                </Col>\n                                <Col style={{textAlign:'right'}}>\n                                    <div style={{marginTop:'2rem',marginRight:'5rem'}}>\n                                        <p>As of available data</p>\n                                        <h3>\n                                        <NumberFormat \n                                        value={\n                                            countries && \n                                            countries[countries.length-1] &&\n                                            countries[countries.length-1].confirmed\n                                        } \n                                        displayType={'text'} \n                                        thousandSeparator={true}\n                                        style={{color:colors.confirmed}} \n                                        />\n                                        </h3>\n                                        <p>Confirmed cases have been Registered</p>\n                                    </div>\n                                </Col>\n                            </Row>\n                        </Card>\n                    </Col>\n                </Row>\n            </Container>\n            <Container fluid>\n                <Row className=\"justify-content-md-center\">\n                    <Col xs lg=\"8\">\n                        <Card className=\"shadow-sm\" style={{border:'none',marginTop:'1rem'}}>\n                            <Row className=\"justify-content-md-center\">\n                                <Col>\n                                    <AreaChart \n                                        width={\n                                            width > 980\n                                            ? 480\n                                            : width > 720\n                                            ? width / 2 - 80\n                                            : width - 80\n                                        }\n                                        height={250} \n                                        data={countries} \n                                        margin={{top: 20, right: 20, left: 20, bottom: 20}}\n                                        >\n                                    <CartesianGrid strokeDasharray=\"1 1\" />\n                                    <XAxis dataKey=\"date\" />\n                                    <YAxis />\n                                    <Tooltip />\n                                    <Legend/>\n                                    <Area type=\"monotone\" dataKey=\"recovered\" dot={false} stroke={colors.recovered} fill={colors.recovered} />\n                                    </AreaChart>\n                                </Col>\n                                <Col style={{textAlign:'right'}}>\n                                <div style={{marginTop:'2rem',marginRight:'5rem'}}>\n                                        <p>As of available data</p>\n                                        <h3>\n                                        <NumberFormat \n                                        value={\n                                            countries && \n                                            countries[countries.length-1] &&\n                                            countries[countries.length-1].deaths\n                                        } \n                                        displayType={'text'} \n                                        thousandSeparator={true} \n                                        style={{color:colors.recovered}}\n                                        />\n                                        </h3>\n                                        <p>Recovered cases have been Registered with</p>\n                                        <h3>\n                                        <NumberFormat \n                                        value={\n                                            countries && \n                                            countries[0] &&\n                                            Math.round(\n                                                (countries[countries.length-1].recovered / countries[countries.length-1].confirmed) * 100\n                                            )\n                                        } \n                                        displayType={'text'} \n                                        thousandSeparator={true} \n                                        /> %\n                                        </h3>\n                                        <p>Recovery rate</p>\n                                    </div>\n                                </Col>\n                            </Row>\n                        </Card>\n                    </Col>\n                </Row>\n            </Container>\n            <Container fluid>\n                <Row className=\"justify-content-md-center\">\n                    <Col xs lg=\"8\">\n                        <Card className=\"shadow-sm\" style={{border:'none',marginTop:'1rem'}}>\n                            <Row className=\"justify-content-md-center\">\n                                <Col>\n                                    <AreaChart \n                                        width={\n                                            width > 980\n                                            ? 480\n                                            : width > 720\n                                            ? width / 2 - 80\n                                            : width - 80\n                                        }\n                                        height={250} \n                                        data={countries} \n                                        margin={{top: 20, right: 20, left: 20, bottom: 20}}\n                                        >\n                                    <CartesianGrid strokeDasharray=\"1 1\" />\n                                    <XAxis dataKey=\"date\" />\n                                    <YAxis />\n                                    <Tooltip />\n                                    <Legend/>\n                                    <Area type=\"monotone\" dataKey=\"deaths\" dot={false}  stroke={colors.deaths} fill={colors.deaths} />\n                                    </AreaChart>\n                                </Col>\n                                <Col style={{textAlign:'right'}}>\n                                    <div style={{marginTop:'2rem',marginRight:'5rem'}}>\n                                        <p>As of available data</p>\n                                        <h3>\n                                        <NumberFormat \n                                        value={\n                                            countries && \n                                            countries[countries.length-1] &&\n                                            countries[countries.length-1].deaths\n                                        } \n                                        displayType={'text'} \n                                        thousandSeparator={true} \n                                        style={{color:colors.deaths}}\n                                        />\n                                        </h3>\n                                        <p>Death cases have been Registered with</p>\n                                        <h3>\n                                        <NumberFormat \n                                        value={\n                                            countries && \n                                            countries[countries.length-1] &&\n                                            Math.round(\n                                                (countries[countries.length-1].deaths / countries[countries.length-1].confirmed) * 100\n                                            )\n                                        } \n                                        displayType={'text'} \n                                        thousandSeparator={true} \n                                        />% \n                                        </h3>\n                                        <p> Death rate</p>\n                                    </div>\n                                </Col>\n                            </Row>\n                        </Card>\n                    </Col>\n                </Row>\n            </Container>\n            \n        </div>\n    )\n}\n}\nexport default DataChartOnly;","import React,{ Component } from 'react';\nimport Axios from 'axios';\nimport {Container,Row,Col,Table,Form, Card, CardDeck, CardColumns, Button} from 'react-bootstrap';\n\nconst trumpNewsEndpoint=\"https://newsapi.org/v2/top-headlines?q=trump&apiKey=1eef6d1799164641972598884245ee39\";\nconst USHealthEndpoint=\"https://newsapi.org/v2/top-headlines?country=us&category=health&apiKey=1eef6d1799164641972598884245ee39\";\nconst technologyEndpoint=\"https://newsapi.org/v2/top-headlines?country=us&category=technology&apiKey=1eef6d1799164641972598884245ee39\";\nconst businessEndpoint=\"https://newsapi.org/v2/top-headlines?country=us&category=business&apiKey=1eef6d1799164641972598884245ee39\";\nconst entertainmentEndpoint=\"https://newsapi.org/v2/top-headlines?country=us&category=entertainment&apiKey=1eef6d1799164641972598884245ee39\";\nconst sportsEndpoint=\"https://newsapi.org/v2/top-headlines?country=us&category=sports&apiKey=1eef6d1799164641972598884245ee39\";\n\nclass News extends Component{\n    state={\n        trumpNews:[],\n        USHealth:[],\n        technology:[],\n        business:[],\n        entertainment:[],\n        sports:[]\n    }\n\n    componentDidMount(){\n        this.getNews();\n    }\n    async getNews(){\n        const trumpNewsRes=await Axios.get(trumpNewsEndpoint);\n        const USHealthRes=await Axios.get(USHealthEndpoint);\n        const technologyRes=await Axios.get(technologyEndpoint);\n        const businessRes=await Axios.get(businessEndpoint);\n        const entertainmentRes=await Axios.get(entertainmentEndpoint);\n        const sportsRes=await Axios.get(sportsEndpoint);\n        console.log(trumpNewsRes.data.articles);\n        this.setState({\n            trumpNews:trumpNewsRes.data.articles.slice(0,3),\n            USHealth:USHealthRes.data.articles.slice(0,6),\n            technology:technologyRes.data.articles.slice(0,3),\n            business:businessRes.data.articles.slice(0,3),\n            entertainment:entertainmentRes.data.articles.slice(0,3),\n            sports:sportsRes.data.articles.slice(0,3)\n        })\n    }\n    render(){\n        const {\n            trumpNews,\n            USHealth,\n            technology,\n            business,\n            entertainment,\n            sports\n        }=this.state;\n        return(\n            <div className=\"mid\">\n                <Container fluid>\n                    <Row className=\"justify-content-md-center\">\n                        <Col xs lg=\"8\" style={{marginBottom:'1rem',marginTop:'1rem',padding:'0rem'}}>\n                            <h3>Latest News on Health</h3>\n                            <span className=\"fade-line\"></span>\n                        </Col>\n                    </Row>\n                    <Row className=\"justify-content-md-center\">\n                        <Col xs=\"12\" lg=\"8\">\n                            <CardColumns>\n                                \n                                    {\n                                        USHealth.map((newsItem,i)=>\n                                        <Card key={i}\n                                            className=\"shadow-sm\" \n                                            style={{marginBottom:'1rem',padding:'0rem',border:'none'}}\n                                        >\n                                            <Card.Img variant=\"top\" style={{minHeight:'10rem'}} src={newsItem.urlToImage} />\n                                            <small className=\"text-muted\">published at {newsItem.publishedAt}</small>\n                                            <Card.Body>\n                                            <Card.Title style={{fontSize:'medium',textAlign:'left'}}>{newsItem.title}</Card.Title>\n                                            <Card.Text style={{overflow:'hidden',textOverflow:'ellipsis',maxHeight:'4rem',whiteSpace:'pre-wrap'}}>\n                                                {newsItem.description}\n                                            </Card.Text>\n                                            </Card.Body>\n                                            <Card.Footer>\n                                                <Card.Link href={newsItem.url} target=\"_blank\"><b>Read Fill Story on</b> {newsItem.source.name}</Card.Link>\n                                            </Card.Footer>\n                                        </Card>\n                                        )\n                                    } \n                            </CardColumns>    \n                        </Col>\n                    </Row>\n                    \n\n                    <Row className=\"justify-content-md-center\">\n                        <Col xs lg=\"8\" style={{marginBottom:'1rem',marginTop:'1rem',padding:'0rem'}}>\n                            <h3>What Donuld Trump Says ?</h3>\n                            <span className=\"fade-line\"></span>\n                        </Col>\n                    </Row>\n                    <Row className=\"justify-content-md-center\">\n                        <Col xs=\"12\" lg=\"8\">\n                            <CardColumns>\n                                \n                                    {\n                                        trumpNews.map((newsItem,i)=>\n                                        <Card key={i}\n                                            className=\"shadow-sm\" \n                                            style={{marginBottom:'1rem',padding:'0rem',border:'none'}}\n                                        >\n                                            <Card.Img variant=\"top\" style={{minHeight:'10rem'}} src={newsItem.urlToImage} />\n                                            <small className=\"text-muted\">published at {newsItem.publishedAt}</small>\n                                            <Card.Body>\n                                            <Card.Title style={{fontSize:'medium',textAlign:'left'}}>{newsItem.title}</Card.Title>\n                                            <Card.Text style={{overflow:'hidden',textOverflow:'ellipsis',maxHeight:'4rem',whiteSpace:'pre-wrap'}}>\n                                                {newsItem.description}\n                                            </Card.Text>\n                                            </Card.Body>\n                                            <Card.Footer>\n                                                <Card.Link href={newsItem.url} target=\"_blank\"><b>Read Fill Story on</b> {newsItem.source.name}</Card.Link>\n                                            </Card.Footer>\n                                        </Card>\n                                        )\n                                    } \n                            </CardColumns>    \n                        </Col>\n                    </Row>\n\n                    <Row className=\"justify-content-md-center\">\n                        <Col xs lg=\"8\" style={{marginBottom:'1rem',marginTop:'1rem',padding:'0rem'}}>\n                            <h3>An Inside to Technology</h3>\n                            <span className=\"fade-line\"></span>\n                        </Col>\n                    </Row>\n                    <Row className=\"justify-content-md-center\">\n                        <Col xs=\"12\" lg=\"8\">\n                            <CardColumns>\n                                \n                                    {\n                                        technology.map((newsItem,i)=>\n                                        <Card key={i}\n                                            className=\"shadow-sm\" \n                                            style={{marginBottom:'1rem',padding:'0rem',border:'none'}}\n                                        >\n                                            <Card.Img variant=\"top\" style={{minHeight:'10rem'}} src={newsItem.urlToImage} />\n                                            <small className=\"text-muted\">published at {newsItem.publishedAt}</small>\n                                            <Card.Body>\n                                            <Card.Title style={{fontSize:'medium',textAlign:'left'}}>{newsItem.title}</Card.Title>\n                                            <Card.Text style={{overflow:'hidden',textOverflow:'ellipsis',maxHeight:'4rem',whiteSpace:'pre-wrap'}}>\n                                                {newsItem.description}\n                                            </Card.Text>\n                                            </Card.Body>\n                                            <Card.Footer>\n                                                <Card.Link href={newsItem.url} target=\"_blank\"><b>Read Fill Story on</b> {newsItem.source.name}</Card.Link>\n                                            </Card.Footer>\n                                        </Card>\n                                        )\n                                    } \n                            </CardColumns>    \n                        </Col>\n                    </Row>\n\n                    <Row className=\"justify-content-md-center\">\n                        <Col xs lg=\"8\" style={{marginBottom:'1rem',marginTop:'1rem',padding:'0rem'}}>\n                            <h3>Business Insider</h3>\n                            <span className=\"fade-line\"></span>\n                        </Col>\n                    </Row>\n                    <Row className=\"justify-content-md-center\">\n                        <Col xs=\"12\" lg=\"8\">\n                            <CardColumns>\n                                \n                                    {\n                                        business.map((newsItem,i)=>\n                                        <Card key={i}\n                                            className=\"shadow-sm\" \n                                            style={{marginBottom:'1rem',padding:'0rem',border:'none'}}\n                                        >\n                                            <Card.Img variant=\"top\" style={{minHeight:'10rem'}} src={newsItem.urlToImage} />\n                                            <small className=\"text-muted\">published at {newsItem.publishedAt}</small>\n                                            <Card.Body>\n                                            <Card.Title style={{fontSize:'medium',textAlign:'left'}}>{newsItem.title}</Card.Title>\n                                            <Card.Text style={{overflow:'hidden',textOverflow:'ellipsis',maxHeight:'4rem',whiteSpace:'pre-wrap'}}>\n                                                {newsItem.description}\n                                            </Card.Text>\n                                            </Card.Body>\n                                            <Card.Footer>\n                                                <Card.Link href={newsItem.url} target=\"_blank\"><b>Read Fill Story on</b> {newsItem.source.name}</Card.Link>\n                                            </Card.Footer>\n                                        </Card>\n                                        )\n                                    } \n                            </CardColumns>    \n                        </Col>\n                    </Row>\n\n                    <Row className=\"justify-content-md-center\">\n                        <Col xs lg=\"8\" style={{marginBottom:'1rem',marginTop:'1rem',padding:'0rem'}}>\n                            <h3>Entertainment Hall</h3>\n                            <span className=\"fade-line\"></span>\n                        </Col>\n                    </Row>\n                    <Row className=\"justify-content-md-center\">\n                        <Col xs=\"12\" lg=\"8\">\n                            <CardColumns>\n                                \n                                    {\n                                        entertainment.map((newsItem,i)=>\n                                        <Card key={i}\n                                            className=\"shadow-sm\" \n                                            style={{marginBottom:'1rem',padding:'0rem',border:'none'}}\n                                        >\n                                            <Card.Img variant=\"top\" style={{minHeight:'10rem'}} src={newsItem.urlToImage} />\n                                            <small className=\"text-muted\">published at {newsItem.publishedAt}</small>\n                                            <Card.Body>\n                                            <Card.Title style={{fontSize:'medium',textAlign:'left'}}>{newsItem.title}</Card.Title>\n                                            <Card.Text style={{overflow:'hidden',textOverflow:'ellipsis',maxHeight:'4rem',whiteSpace:'pre-wrap'}}>\n                                                {newsItem.description}\n                                            </Card.Text>\n                                            </Card.Body>\n                                            <Card.Footer>\n                                                <Card.Link href={newsItem.url} target=\"_blank\"><b>Read Fill Story on</b> {newsItem.source.name}</Card.Link>\n                                            </Card.Footer>\n                                        </Card>\n                                        )\n                                    } \n                            </CardColumns>    \n                        </Col>\n                    </Row>\n\n                    <Row className=\"justify-content-md-center\">\n                        <Col xs lg=\"8\" style={{marginBottom:'1rem',marginTop:'1rem',padding:'0rem'}}>\n                            <h3>Sports Universe</h3>\n                            <span className=\"fade-line\"></span>\n                        </Col>\n                    </Row>\n                    <Row className=\"justify-content-md-center\">\n                        <Col xs=\"12\" lg=\"8\">\n                            <CardColumns>\n                                \n                                    {\n                                        sports.map((newsItem,i)=>\n                                        <Card key={i}\n                                            className=\"shadow-sm\" \n                                            style={{marginBottom:'1rem',padding:'0rem',border:'none'}}\n                                        >\n                                            <Card.Img variant=\"top\" style={{minHeight:'10rem'}} src={newsItem.urlToImage} />\n                                            <small className=\"text-muted\">published at {newsItem.publishedAt}</small>\n                                            <Card.Body>\n                                            <Card.Title style={{fontSize:'medium',textAlign:'left'}}>{newsItem.title}</Card.Title>\n                                            <Card.Text style={{overflow:'hidden',textOverflow:'ellipsis',maxHeight:'4rem',whiteSpace:'pre-wrap'}}>\n                                                {newsItem.description}\n                                            </Card.Text>\n                                            </Card.Body>\n                                            <Card.Footer>\n                                                <Card.Link href={newsItem.url} target=\"_blank\"><b>Read Fill Story on</b> {newsItem.source.name}</Card.Link>\n                                            </Card.Footer>\n                                        </Card>\n                                        )\n                                    } \n                            </CardColumns>    \n                        </Col>\n                    </Row>\n                </Container>\n            </div>\n        )\n    }\n}\nexport default News;","import React from 'react';\nimport { Container, Row,Col} from 'react-bootstrap';\nconst dataProvider = 'https://github.com/CSSEGISandData/COVID-19';\nconst dataParser = 'https://github.com/pomber/covid19';\n\nfunction Footer(){\n    return(\n        <div className=\"footer\">\n            <Container fluid>\n            <Row className=\"justify-content-md-center\">\n                <Col xs=\"12\" lg=\"8\">\n                <p style={{ fontSize: 14, lineHeight: 1.2, marginTop: 10,marginBottom:24, marginLeft:50,marginRight:50 }}>\n                    Data, Numbers and Stats provided on this website is pulled from different data sources. This website is \n                    merely a mean of providing a general overview and graphical representation of COVID-19 pandemic. Viewers / visitors \n                    of this website is advised not to absorb Data, Numbers and Stats as final and do visit other information sources\n                    for the sack of your information.  \n                </p>\n                <p>\n                    Data retrieved from <a href={dataProvider} rel=\"alternate nooperner noreferre\" target=\"_blank\">Johns Hopkins</a> via{' '}\n                    <a href={dataParser} rel=\"alternate nooperner noreferre\" target=\"_blank\">@pomber</a> <br />\n                </p>\n                <p>\n                    Developed with <a href=\"http://recharts.org/\" rel=\"alternate nooperner noreferre\" target=\"_blank\">Recharts for Responsive Charting</a>,{' '}\n                    <a href=\"https://react-bootstrap.github.io/\" rel=\"alternate nooperner noreferre\" target=\"_blank\">React-Bootstrap</a>,{' '}\n                    <a href=\"https://react-leaflet.js.org/\" rel=\"alternate nooperner noreferre\" target=\"_blank\">React-Leaflet for Map Data Visualization</a>,{' '}\n                    <a href=\"https://reactjs.org\" rel=\"alternate nooperner noreferre\" target=\"_blank\">React</a> by{' '}\n                    <a href=\"https://github.com/arifshariati\" rel=\"alternate nooperner noreferre\" target=\"_blank\">Arif Shariati</a>\n                </p>\n                <p>\n                    There is always room for improvement ! <b>if you want to contribute?</b> Please do so !{' '}\n                    <a href=\"https://github.com/eminx/thecurve\" rel=\"alternate nooperner noreferre\" target=\"_blank\">Create an issue</a> or{' '}\n                    <a href=\"mailto:mohammad.arif.fast@hotmail.com\">send me an email</a>\n                </p>\n                </Col>\n            </Row>\n        </Container>\n        </div>\n    )\n}\nexport default Footer;","import React, { Component } from 'react';\nimport '../src/assets/css/App.css';\nimport Header from './components/header';\nimport LandingPage from './components/landingPage';\nimport DataChart from './components/dataChart';\nimport DataChartOnly from './components/dataChartOnly';\nimport News from './components/news';\nimport Footer from './components/footer';\nimport { BrowserRouter as Router, Route} from 'react-router-dom';\n\n\nclass App extends Component {\n  \n  render(){\n    return (\n      <div className=\"App\">\n        <Router>\n          <Header />\n          <Route exact path=\"/\" component={LandingPage} />\n          <Route  path=\"/DataChartOnly\" component={DataChartOnly} />\n          <Route path=\"/Data-Table\" component={DataChart} />\n          <Route path=\"/News\" component={News} />\n          <Footer />\n        </Router>\n      </div>\n      )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\nserviceWorker.unregister();\n"],"sourceRoot":""}