{"ast":null,"code":"var _jsxFileName = \"/Users/shariati/Desktop/Projects/demo2/src/components/landingPage.jsx\";\nimport React, { Component } from 'react';\nimport Axios from 'axios';\nimport { Map, CircleMarker, TileLayer } from 'react-leaflet';\nimport { Container, Row, Col, Card, Alert } from 'react-bootstrap';\nimport NumberFormat from 'react-number-format';\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from 'recharts';\nimport \"leaflet/dist/leaflet.css\";\nimport Loader from 'react-loader-spinner';\nconst colors = {\n  confirmed: '#FFD31D',\n  recovered: '#21BF72',\n  deaths: '#DD2C00'\n};\n\nclass LandingPage extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      userCountry: \"Turkey\",\n      mapData: [],\n      confirmed: 0,\n      recovered: 0,\n      deaths: 0,\n      top10Confirmed: [],\n      top10Recovered: [],\n      top10Deaths: [],\n      zoom: 2,\n      minZoom: 2,\n      width: window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth\n    };\n\n    this.updateDimensions = () => {\n      const width = window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth;\n      this.setState({\n        width\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.getData();\n    window.addEventListener('resize', this.updateDimensions);\n  }\n\n  async getData() {\n    const ipapires = await Axios.get(\"https://ipapi.co/json\");\n    const userCountry = ipapi.data.country_name;\n    console.log(userCountry);\n    const DataForMapRes = await Axios.get(\"https://covid19.mathdro.id/api/deaths\");\n    const DataForMapAccurate = DataForMapRes.data.filter(row => row.lat !== null);\n    const DataForCasesRes = await Axios.get(\"https://api.covid19api.com/summary\");\n    const confirmed = DataForCasesRes.data.Global.TotalConfirmed;\n    const recovered = DataForCasesRes.data.Global.TotalRecovered;\n    const deaths = DataForCasesRes.data.Global.TotalDeaths;\n    const confirmedSorted = DataForCasesRes.data.Countries.sort(function (a, b) {\n      return b.TotalConfirmed - a.TotalConfirmed;\n    });\n    const top10Confirmed = confirmedSorted.slice(0, 10);\n    const recoveredSorted = DataForCasesRes.data.Countries.sort(function (a, b) {\n      return b.TotalRecovered - a.TotalRecovered;\n    });\n    const top10Recovered = recoveredSorted.slice(0, 10);\n    const deathsSorted = DataForCasesRes.data.Countries.sort(function (a, b) {\n      return b.TotalDeaths - a.TotalDeaths;\n    });\n    const top10Deaths = deathsSorted.slice(0, 10);\n    this.setState({\n      userCountry,\n      mapData: DataForMapAccurate,\n      confirmed,\n      recovered,\n      deaths,\n      top10Confirmed,\n      top10Recovered,\n      top10Deaths\n    });\n  }\n\n  render() {\n    const {\n      userCountry,\n      mapData,\n      confirmed,\n      recovered,\n      deaths,\n      top10Confirmed,\n      top10Recovered,\n      top10Deaths,\n      zoom,\n      minZoom,\n      width\n    } = this.state;\n    if (!confirmed) return /*#__PURE__*/React.createElement(Container, {\n      fluid: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      className: \"justify-content-md-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      xs: \"12\",\n      lg: \"8\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      className: \"shadow\",\n      style: {\n        marginBottom: '1rem',\n        paddingTop: '2rem',\n        border: 'none',\n        minHeight: \"700px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Loader, {\n      type: \"Rings\",\n      color: \"#DD2C00\",\n      height: 200,\n      width: 200,\n      timeout: 90000,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 29\n      }\n    })))));\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Container, {\n      fluid: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      className: \"justify-content-md-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      xs: \"12\",\n      lg: \"8\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      className: \"shadow=sm\",\n      style: {\n        marginBottom: '1rem',\n        padding: '1rem',\n        border: 'none'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 25\n      }\n    }, (() => {\n      switch (userCountry) {\n        case \"Afghanistan\":\n          return \"Afghanistan\";\n\n        case \"Turkey\":\n          return \"Turkey\";\n\n        default:\n          return \"Others\";\n      }\n    })()))), /*#__PURE__*/React.createElement(Row, {\n      className: \"justify-content-md-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      xs: \"12\",\n      lg: \"8\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      className: \"shadow\",\n      style: {\n        marginBottom: '1rem',\n        padding: '1rem',\n        border: 'none'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Map, {\n      width: width > 980 ? 960 : width - 80,\n      zoom: width < 980 ? 1 : zoom,\n      center: [20.505, -0.09],\n      minZoom: width < 980 ? 1 : minZoom,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(TileLayer, {\n      url: \"https://{s}.tile.osm.org/{z}/{x}/{y}.png\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 33\n      }\n    }), mapData.map((city, i) => {\n      return /*#__PURE__*/React.createElement(CircleMarker, {\n        key: i,\n        center: [city.lat, city.long],\n        readius: 20 * Math.log(city.deaths / confirmed),\n        fillOpacity: 0.5,\n        fillColor: \"red\",\n        stroke: false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 37\n        }\n      });\n    })))))), /*#__PURE__*/React.createElement(Container, {\n      fluid: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      className: \"justify-content-md-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      xs: true,\n      lg: \"8\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      className: \"shadow-sm\",\n      style: {\n        marginBottom: '0rem',\n        padding: '1rem',\n        border: 'none'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      className: \"justify-content-md-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Alert, {\n      className: \"shadow\",\n      style: {\n        backgroundColor: colors.confirmed\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(NumberFormat, {\n      value: confirmed,\n      displayType: 'text',\n      thousandSeparator: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 37\n      }\n    })), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 40\n      }\n    }, \"Accomulative\"), /*#__PURE__*/React.createElement(\"i\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 59\n      }\n    }, \" as of today\")))), /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Alert, {\n      className: \"shadow\",\n      style: {\n        backgroundColor: colors.recovered\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(NumberFormat, {\n      value: recovered,\n      displayType: 'text',\n      thousandSeparator: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 37\n      }\n    })), /*#__PURE__*/React.createElement(\"h6\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 41\n      }\n    }, Math.round(recovered / confirmed * 100)), /*#__PURE__*/React.createElement(\"i\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 91\n      }\n    }, \"% Recovery\")))), /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Alert, {\n      className: \"shadow\",\n      style: {\n        backgroundColor: colors.deaths,\n        color: '#FFFFFF'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(NumberFormat, {\n      value: deaths,\n      displayType: 'text',\n      thousandSeparator: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 37\n      }\n    })), /*#__PURE__*/React.createElement(\"h6\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 41\n      }\n    }, Math.round(deaths / confirmed * 100)), /*#__PURE__*/React.createElement(\"i\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 88\n      }\n    }, \"% Deaths\"))))))))), /*#__PURE__*/React.createElement(Container, {\n      fluid: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      className: \"justify-content-md-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      xs: true,\n      lg: \"8\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      className: \"shadow-sm\",\n      style: {\n        marginBottom: '1rem',\n        padding: '1rem',\n        border: 'none'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        marginTop: '1rem'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      style: {\n        textAlign: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 33\n      }\n    }, \"Top 10 Counties - Confirmed Cases Data\")), /*#__PURE__*/React.createElement(BarChart, {\n      width: width > 980 ? 1200 : width - 80,\n      height: 400,\n      data: top10Confirmed,\n      margin: {\n        top: 5,\n        right: 30,\n        left: 0,\n        bottom: 5\n      },\n      layout: \"vertical\",\n      barSize: 15,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(CartesianGrid, {\n      strokeDasharray: \"1 1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(XAxis, {\n      type: \"number\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(YAxis, {\n      dataKey: \"CountryCode\",\n      type: \"category\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(Tooltip, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(Legend, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(Bar, {\n      dataKey: \"TotalConfirmed\",\n      fill: colors.confirmed,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 25\n      }\n    })))))), /*#__PURE__*/React.createElement(Container, {\n      fluid: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      className: \"justify-content-md-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      xs: true,\n      lg: \"8\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      className: \"shadow-sm\",\n      style: {\n        marginBottom: '1rem',\n        padding: '1rem',\n        border: 'none'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        marginTop: '1rem'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      style: {\n        textAlign: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 33\n      }\n    }, \"Top 10 Countries - Recovered Cases Data\")), /*#__PURE__*/React.createElement(BarChart, {\n      width: width > 980 ? 1200 : width - 80,\n      height: 400,\n      data: top10Recovered,\n      margin: {\n        top: 5,\n        right: 30,\n        left: 0,\n        bottom: 5\n      },\n      layout: \"vertical\",\n      barSize: 15,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(CartesianGrid, {\n      strokeDasharray: \"1 1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(XAxis, {\n      type: \"number\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(YAxis, {\n      dataKey: \"CountryCode\",\n      type: \"category\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(Tooltip, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(Legend, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(Bar, {\n      dataKey: \"TotalRecovered\",\n      fill: colors.recovered,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 25\n      }\n    })))))), /*#__PURE__*/React.createElement(Container, {\n      fluid: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      className: \"justify-content-md-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      xs: true,\n      lg: \"8\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      className: \"shadow-sm\",\n      style: {\n        marginBottom: '1rem',\n        padding: '1rem',\n        border: 'none'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        marginTop: '1rem'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      style: {\n        textAlign: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 33\n      }\n    }, \"Top 10 Countries - Death Cases Data\")), /*#__PURE__*/React.createElement(BarChart, {\n      width: width > 980 ? 1200 : width - 80,\n      height: 400,\n      data: top10Deaths,\n      margin: {\n        top: 5,\n        right: 30,\n        left: 0,\n        bottom: 5\n      },\n      layout: \"vertical\",\n      barSize: 15,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(CartesianGrid, {\n      strokeDasharray: \"1 1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(XAxis, {\n      type: \"number\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(YAxis, {\n      dataKey: \"CountryCode\",\n      type: \"category\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(Tooltip, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(Legend, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(Bar, {\n      dataKey: \"TotalDeaths\",\n      fill: colors.deaths,\n      width: 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 25\n      }\n    })))))));\n  }\n\n}\n\nexport default LandingPage;","map":{"version":3,"sources":["/Users/shariati/Desktop/Projects/demo2/src/components/landingPage.jsx"],"names":["React","Component","Axios","Map","CircleMarker","TileLayer","Container","Row","Col","Card","Alert","NumberFormat","BarChart","Bar","XAxis","YAxis","CartesianGrid","Tooltip","Legend","Loader","colors","confirmed","recovered","deaths","LandingPage","state","userCountry","mapData","top10Confirmed","top10Recovered","top10Deaths","zoom","minZoom","width","window","innerWidth","document","documentElement","clientWidth","body","updateDimensions","setState","componentDidMount","getData","addEventListener","ipapires","get","ipapi","data","country_name","console","log","DataForMapRes","DataForMapAccurate","filter","row","lat","DataForCasesRes","Global","TotalConfirmed","TotalRecovered","TotalDeaths","confirmedSorted","Countries","sort","a","b","slice","recoveredSorted","deathsSorted","render","marginBottom","paddingTop","border","minHeight","padding","map","city","i","long","Math","backgroundColor","round","color","marginTop","textAlign","top","right","left","bottom"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,EAAcC,YAAd,EAA2BC,SAA3B,QAA2C,eAA3C;AACA,SAAQC,SAAR,EAAkBC,GAAlB,EAAsBC,GAAtB,EAA2BC,IAA3B,EAAiCC,KAAjC,QAA6C,iBAA7C;AACA,OAAOC,YAAP,MAAyB,qBAAzB;AACA,SAASC,QAAT,EAAmBC,GAAnB,EAAwBC,KAAxB,EAA8BC,KAA9B,EAAqCC,aAArC,EAAmDC,OAAnD,EAA2DC,MAA3D,QAAwE,UAAxE;AACA,OAAO,0BAAP;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AAEA,MAAMC,MAAM,GAAG;AACXC,EAAAA,SAAS,EAAE,SADA;AAEXC,EAAAA,SAAS,EAAE,SAFA;AAGXC,EAAAA,MAAM,EAAE;AAHG,CAAf;;AAKA,MAAMC,WAAN,SAA0BvB,SAA1B,CAAmC;AAAA;AAAA;AAAA,SAC/BwB,KAD+B,GACzB;AACFC,MAAAA,WAAW,EAAC,QADV;AAEFC,MAAAA,OAAO,EAAC,EAFN;AAGFN,MAAAA,SAAS,EAAC,CAHR;AAIFC,MAAAA,SAAS,EAAC,CAJR;AAKFC,MAAAA,MAAM,EAAC,CALL;AAMFK,MAAAA,cAAc,EAAC,EANb;AAOFC,MAAAA,cAAc,EAAC,EAPb;AAQFC,MAAAA,WAAW,EAAC,EARV;AASFC,MAAAA,IAAI,EAAC,CATH;AAUFC,MAAAA,OAAO,EAAC,CAVN;AAWFC,MAAAA,KAAK,EACLC,MAAM,CAACC,UAAP,IACAC,QAAQ,CAACC,eAAT,CAAyBC,WADzB,IAEAF,QAAQ,CAACG,IAAT,CAAcD;AAdZ,KADyB;;AAAA,SAsB7BE,gBAtB6B,GAsBV,MAAI;AACrB,YAAMP,KAAK,GACXC,MAAM,CAACC,UAAP,IACAC,QAAQ,CAACC,eAAT,CAAyBC,WADzB,IAEAF,QAAQ,CAACG,IAAT,CAAcD,WAHd;AAKA,WAAKG,QAAL,CAAc;AAACR,QAAAA;AAAD,OAAd;AACH,KA7B8B;AAAA;;AAkB7BS,EAAAA,iBAAiB,GAAE;AACjB,SAAKC,OAAL;AACAT,IAAAA,MAAM,CAACU,gBAAP,CAAwB,QAAxB,EAAiC,KAAKJ,gBAAtC;AACD;;AASD,QAAMG,OAAN,GAAe;AAEf,UAAME,QAAQ,GAAC,MAAM3C,KAAK,CAAC4C,GAAN,CAAU,uBAAV,CAArB;AACA,UAAMpB,WAAW,GAACqB,KAAK,CAACC,IAAN,CAAWC,YAA7B;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYzB,WAAZ;AACA,UAAM0B,aAAa,GAAC,MAAMlD,KAAK,CAAC4C,GAAN,CAAU,uCAAV,CAA1B;AACA,UAAMO,kBAAkB,GAACD,aAAa,CAACJ,IAAd,CAAmBM,MAAnB,CAA0BC,GAAG,IAAGA,GAAG,CAACC,GAAJ,KAAY,IAA5C,CAAzB;AAEA,UAAMC,eAAe,GAAC,MAAMvD,KAAK,CAAC4C,GAAN,CAAU,oCAAV,CAA5B;AAEA,UAAMzB,SAAS,GAAGoC,eAAe,CAACT,IAAhB,CAAqBU,MAArB,CAA4BC,cAA9C;AACA,UAAMrC,SAAS,GAAGmC,eAAe,CAACT,IAAhB,CAAqBU,MAArB,CAA4BE,cAA9C;AACA,UAAMrC,MAAM,GAAGkC,eAAe,CAACT,IAAhB,CAAqBU,MAArB,CAA4BG,WAA3C;AAEA,UAAMC,eAAe,GAACL,eAAe,CAACT,IAAhB,CAAqBe,SAArB,CAA+BC,IAA/B,CAAoC,UAASC,CAAT,EAAWC,CAAX,EAAa;AACnE,aAAOA,CAAC,CAACP,cAAF,GAAmBM,CAAC,CAACN,cAA5B;AACH,KAFqB,CAAtB;AAGA,UAAM/B,cAAc,GAAGkC,eAAe,CAACK,KAAhB,CAAsB,CAAtB,EAAwB,EAAxB,CAAvB;AAEA,UAAMC,eAAe,GAACX,eAAe,CAACT,IAAhB,CAAqBe,SAArB,CAA+BC,IAA/B,CAAoC,UAASC,CAAT,EAAWC,CAAX,EAAa;AACnE,aAAOA,CAAC,CAACN,cAAF,GAAmBK,CAAC,CAACL,cAA5B;AACH,KAFqB,CAAtB;AAGA,UAAM/B,cAAc,GAAGuC,eAAe,CAACD,KAAhB,CAAsB,CAAtB,EAAwB,EAAxB,CAAvB;AAEA,UAAME,YAAY,GAACZ,eAAe,CAACT,IAAhB,CAAqBe,SAArB,CAA+BC,IAA/B,CAAoC,UAASC,CAAT,EAAWC,CAAX,EAAa;AAChE,aAAOA,CAAC,CAACL,WAAF,GAAgBI,CAAC,CAACJ,WAAzB;AACH,KAFkB,CAAnB;AAGA,UAAM/B,WAAW,GAAGuC,YAAY,CAACF,KAAb,CAAmB,CAAnB,EAAqB,EAArB,CAApB;AACA,SAAK1B,QAAL,CAAc;AACVf,MAAAA,WADU;AAEVC,MAAAA,OAAO,EAAC0B,kBAFE;AAGVhC,MAAAA,SAHU;AAIVC,MAAAA,SAJU;AAKVC,MAAAA,MALU;AAMVK,MAAAA,cANU;AAOVC,MAAAA,cAPU;AAQVC,MAAAA;AARU,KAAd;AAUC;;AACHwC,EAAAA,MAAM,GAAE;AACJ,UAAM;AACF5C,MAAAA,WADE;AAEFC,MAAAA,OAFE;AAGFN,MAAAA,SAHE;AAIFC,MAAAA,SAJE;AAKFC,MAAAA,MALE;AAMFK,MAAAA,cANE;AAOFC,MAAAA,cAPE;AAQFC,MAAAA,WARE;AASFC,MAAAA,IATE;AAUFC,MAAAA,OAVE;AAWFC,MAAAA;AAXE,QAYF,KAAKR,KAZT;AAcA,QAAG,CAACJ,SAAJ,EAAe,oBACP,oBAAC,SAAD;AAAW,MAAA,KAAK,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,GAAD;AAAK,MAAA,SAAS,EAAC,2BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAC,IAAR;AAAa,MAAA,EAAE,EAAC,GAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA,oBAAC,IAAD;AACI,MAAA,SAAS,EAAC,QADd;AAEI,MAAA,KAAK,EAAE;AAACkD,QAAAA,YAAY,EAAC,MAAd;AAAqBC,QAAAA,UAAU,EAAC,MAAhC;AAAuCC,QAAAA,MAAM,EAAC,MAA9C;AAAqDC,QAAAA,SAAS,EAAC;AAA/D,OAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAII,oBAAC,MAAD;AACI,MAAA,IAAI,EAAC,OADT;AAEI,MAAA,KAAK,EAAC,SAFV;AAGI,MAAA,MAAM,EAAE,GAHZ;AAII,MAAA,KAAK,EAAE,GAJX;AAKI,MAAA,OAAO,EAAE,KALb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,CADA,CADJ,CADJ,CADO;AAqBf,wBACI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,SAAD;AAAW,MAAA,KAAK,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA,oBAAC,GAAD;AAAK,MAAA,SAAS,EAAC,2BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACQ,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAC,IAAR;AAAa,MAAA,EAAE,EAAC,GAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA,oBAAC,IAAD;AAAM,MAAA,SAAS,EAAC,WAAhB;AAA4B,MAAA,KAAK,EAAE;AAACH,QAAAA,YAAY,EAAC,MAAd;AAAqBI,QAAAA,OAAO,EAAC,MAA7B;AAAoCF,QAAAA,MAAM,EAAC;AAA3C,OAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEQ,CAAC,MAAI;AACD,cAAO/C,WAAP;AACI,aAAK,aAAL;AAAmB,iBAAO,aAAP;;AACnB,aAAK,QAAL;AAAc,iBAAQ,QAAR;;AACd;AAAQ,iBAAO,QAAP;AAHZ;AAKH,KAND,GAFR,CADA,CADR,CADA,eAgBI,oBAAC,GAAD;AAAK,MAAA,SAAS,EAAC,2BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAC,IAAR;AAAa,MAAA,EAAE,EAAC,GAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA,oBAAC,IAAD;AAAM,MAAA,SAAS,EAAC,QAAhB;AAAyB,MAAA,KAAK,EAAE;AAAC6C,QAAAA,YAAY,EAAC,MAAd;AAAqBI,QAAAA,OAAO,EAAC,MAA7B;AAAoCF,QAAAA,MAAM,EAAC;AAA3C,OAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,GAAD;AACI,MAAA,KAAK,EAAGxC,KAAK,GAAG,GAAR,GAAc,GAAd,GAAoBA,KAAK,GAAG,EADxC;AAEI,MAAA,IAAI,EAAEA,KAAK,GAAG,GAAR,GAAc,CAAd,GAAkBF,IAF5B;AAGI,MAAA,MAAM,EAAE,CAAC,MAAD,EAAQ,CAAC,IAAT,CAHZ;AAII,MAAA,OAAO,EAAEE,KAAK,GAAG,GAAR,GAAc,CAAd,GAAkBD,OAJ/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAMI,oBAAC,SAAD;AAAW,MAAA,GAAG,EAAC,0CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANJ,EASIL,OAAO,CAACiD,GAAR,CAAY,CAACC,IAAD,EAAMC,CAAN,KAAY;AACpB,0BACA,oBAAC,YAAD;AACI,QAAA,GAAG,EAAEA,CADT;AAEI,QAAA,MAAM,EAAE,CAACD,IAAI,CAACrB,GAAN,EAAWqB,IAAI,CAACE,IAAhB,CAFZ;AAGI,QAAA,OAAO,EAAE,KAAKC,IAAI,CAAC7B,GAAL,CAAS0B,IAAI,CAACtD,MAAL,GAAcF,SAAvB,CAHlB;AAII,QAAA,WAAW,EAAE,GAJjB;AAKI,QAAA,SAAS,EAAE,KALf;AAMI,QAAA,MAAM,EAAE,KANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADA;AAUH,KAXD,CATJ,CADJ,CADA,CADJ,CAhBJ,CADJ,eA+CI,oBAAC,SAAD;AAAW,MAAA,KAAK,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,GAAD;AAAK,MAAA,SAAS,EAAC,2BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,GAAD;AAAK,MAAA,EAAE,MAAP;AAAQ,MAAA,EAAE,EAAC,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA,oBAAC,IAAD;AAAM,MAAA,SAAS,EAAC,WAAhB;AAA4B,MAAA,KAAK,EAAE;AAACkD,QAAAA,YAAY,EAAC,MAAd;AAAqBI,QAAAA,OAAO,EAAC,MAA7B;AAAoCF,QAAAA,MAAM,EAAC;AAA3C,OAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,GAAD;AAAK,MAAA,SAAS,EAAC,2BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,KAAD;AAAO,MAAA,SAAS,EAAC,QAAjB;AAA0B,MAAA,KAAK,EAAE;AAACQ,QAAAA,eAAe,EAAC7D,MAAM,CAACC;AAAxB,OAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA,oBAAC,YAAD;AACI,MAAA,KAAK,EAAEA,SADX;AAEI,MAAA,WAAW,EAAE,MAFjB;AAGI,MAAA,iBAAiB,EAAE,IAHvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,CADA,eAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAH,eAAsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAtB,CARA,CADJ,CADJ,eAaI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,KAAD;AAAO,MAAA,SAAS,EAAC,QAAjB;AAA0B,MAAA,KAAK,EAAE;AAAC4D,QAAAA,eAAe,EAAC7D,MAAM,CAACE;AAAxB,OAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA,oBAAC,YAAD;AACI,MAAA,KAAK,EAAEA,SADX;AAEI,MAAA,WAAW,EAAE,MAFjB;AAGI,MAAA,iBAAiB,EAAE,IAHvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,CADA,eAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAI0D,IAAI,CAACE,KAAL,CAAY5D,SAAS,GAAGD,SAAb,GAA0B,GAArC,CAAJ,CAAJ,eAAsD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAtD,CARA,CADJ,CAbJ,eAyBI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,KAAD;AAAO,MAAA,SAAS,EAAC,QAAjB;AAA0B,MAAA,KAAK,EAAE;AAAC4D,QAAAA,eAAe,EAAC7D,MAAM,CAACG,MAAxB;AAA+B4D,QAAAA,KAAK,EAAC;AAArC,OAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA,oBAAC,YAAD;AACI,MAAA,KAAK,EAAE5D,MADX;AAEI,MAAA,WAAW,EAAE,MAFjB;AAGI,MAAA,iBAAiB,EAAE,IAHvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,CADA,eAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIyD,IAAI,CAACE,KAAL,CAAY3D,MAAM,GAAGF,SAAV,GAAuB,GAAlC,CAAJ,CAAJ,eAAmD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAnD,CARA,CADJ,CAzBJ,CADJ,CADA,CADJ,CADJ,CA/CJ,eA8FI,oBAAC,SAAD;AAAW,MAAA,KAAK,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,GAAD;AAAK,MAAA,SAAS,EAAC,2BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,GAAD;AAAK,MAAA,EAAE,MAAP;AAAQ,MAAA,EAAE,EAAC,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA,oBAAC,IAAD;AAAM,MAAA,SAAS,EAAC,WAAhB;AAA4B,MAAA,KAAK,EAAE;AAACkD,QAAAA,YAAY,EAAC,MAAd;AAAqBI,QAAAA,OAAO,EAAC,MAA7B;AAAoCF,QAAAA,MAAM,EAAC;AAA3C,OAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,KAAK,EAAE;AAACW,QAAAA,SAAS,EAAC;AAAX,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAI,MAAA,KAAK,EAAE;AAACC,QAAAA,SAAS,EAAC;AAAX,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gDADJ,CADJ,eAIA,oBAAC,QAAD;AACI,MAAA,KAAK,EAAGpD,KAAK,GAAG,GAAR,GAAc,IAAd,GAAqBA,KAAK,GAAG,EADzC;AAEI,MAAA,MAAM,EAAE,GAFZ;AAGI,MAAA,IAAI,EAAEL,cAHV;AAII,MAAA,MAAM,EAAE;AAAC0D,QAAAA,GAAG,EAAE,CAAN;AAASC,QAAAA,KAAK,EAAE,EAAhB;AAAoBC,QAAAA,IAAI,EAAE,CAA1B;AAA6BC,QAAAA,MAAM,EAAE;AAArC,OAJZ;AAKI,MAAA,MAAM,EAAC,UALX;AAMI,MAAA,OAAO,EAAE,EANb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAQA,oBAAC,aAAD;AAAe,MAAA,eAAe,EAAC,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARA,eASA,oBAAC,KAAD;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATA,eAUA,oBAAC,KAAD;AAAO,MAAA,OAAO,EAAC,aAAf;AAA6B,MAAA,IAAI,EAAC,UAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVA,eAWA,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAXA,eAYA,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAZA,eAaA,oBAAC,GAAD;AAAK,MAAA,OAAO,EAAC,gBAAb;AAA8B,MAAA,IAAI,EAAErE,MAAM,CAACC,SAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAbA,CAJA,CADA,CADJ,CADJ,CA9FJ,eAyHI,oBAAC,SAAD;AAAW,MAAA,KAAK,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,GAAD;AAAK,MAAA,SAAS,EAAC,2BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,GAAD;AAAK,MAAA,EAAE,MAAP;AAAQ,MAAA,EAAE,EAAC,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA,oBAAC,IAAD;AAAM,MAAA,SAAS,EAAC,WAAhB;AAA4B,MAAA,KAAK,EAAE;AAACkD,QAAAA,YAAY,EAAC,MAAd;AAAqBI,QAAAA,OAAO,EAAC,MAA7B;AAAoCF,QAAAA,MAAM,EAAC;AAA3C,OAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,KAAK,EAAE;AAACW,QAAAA,SAAS,EAAC;AAAX,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAI,MAAA,KAAK,EAAE;AAACC,QAAAA,SAAS,EAAC;AAAX,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iDADJ,CADJ,eAIA,oBAAC,QAAD;AACI,MAAA,KAAK,EAAGpD,KAAK,GAAG,GAAR,GAAc,IAAd,GAAqBA,KAAK,GAAG,EADzC;AAEI,MAAA,MAAM,EAAE,GAFZ;AAGI,MAAA,IAAI,EAAEJ,cAHV;AAII,MAAA,MAAM,EAAE;AAACyD,QAAAA,GAAG,EAAE,CAAN;AAASC,QAAAA,KAAK,EAAE,EAAhB;AAAoBC,QAAAA,IAAI,EAAE,CAA1B;AAA6BC,QAAAA,MAAM,EAAE;AAArC,OAJZ;AAKI,MAAA,MAAM,EAAC,UALX;AAMI,MAAA,OAAO,EAAE,EANb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAQA,oBAAC,aAAD;AAAe,MAAA,eAAe,EAAC,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARA,eASA,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATA,eAUA,oBAAC,KAAD;AAAO,MAAA,OAAO,EAAC,aAAf;AAA6B,MAAA,IAAI,EAAC,UAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVA,eAWA,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAXA,eAYA,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAZA,eAaA,oBAAC,GAAD;AAAK,MAAA,OAAO,EAAC,gBAAb;AAA8B,MAAA,IAAI,EAAErE,MAAM,CAACE,SAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAbA,CAJA,CADA,CADJ,CADJ,CAzHJ,eAoJI,oBAAC,SAAD;AAAW,MAAA,KAAK,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,GAAD;AAAK,MAAA,SAAS,EAAC,2BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,GAAD;AAAK,MAAA,EAAE,MAAP;AAAQ,MAAA,EAAE,EAAC,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA,oBAAC,IAAD;AAAM,MAAA,SAAS,EAAC,WAAhB;AAA4B,MAAA,KAAK,EAAE;AAACiD,QAAAA,YAAY,EAAC,MAAd;AAAqBI,QAAAA,OAAO,EAAC,MAA7B;AAAoCF,QAAAA,MAAM,EAAC;AAA3C,OAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,KAAK,EAAE;AAACW,QAAAA,SAAS,EAAC;AAAX,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAI,MAAA,KAAK,EAAE;AAACC,QAAAA,SAAS,EAAC;AAAX,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CADJ,CADJ,eAIA,oBAAC,QAAD;AACI,MAAA,KAAK,EAAGpD,KAAK,GAAG,GAAR,GAAc,IAAd,GAAqBA,KAAK,GAAG,EADzC;AAEI,MAAA,MAAM,EAAE,GAFZ;AAGI,MAAA,IAAI,EAAEH,WAHV;AAII,MAAA,MAAM,EAAE;AAACwD,QAAAA,GAAG,EAAE,CAAN;AAASC,QAAAA,KAAK,EAAE,EAAhB;AAAoBC,QAAAA,IAAI,EAAE,CAA1B;AAA6BC,QAAAA,MAAM,EAAE;AAArC,OAJZ;AAKI,MAAA,MAAM,EAAC,UALX;AAMI,MAAA,OAAO,EAAE,EANb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAQA,oBAAC,aAAD;AAAe,MAAA,eAAe,EAAC,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARA,eASA,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATA,eAUA,oBAAC,KAAD;AAAO,MAAA,OAAO,EAAC,aAAf;AAA6B,MAAA,IAAI,EAAC,UAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVA,eAWA,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAXA,eAYA,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAZA,eAaA,oBAAC,GAAD;AAAK,MAAA,OAAO,EAAC,aAAb;AAA2B,MAAA,IAAI,EAAErE,MAAM,CAACG,MAAxC;AAAgD,MAAA,KAAK,EAAE,CAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAbA,CAJA,CADA,CADJ,CADJ,CApJJ,CADJ;AAkLH;;AA3R8B;;AA6RnC,eAAeC,WAAf","sourcesContent":["import React, { Component } from 'react';\nimport Axios from 'axios';\nimport { Map, CircleMarker,TileLayer} from 'react-leaflet';\nimport {Container,Row,Col, Card, Alert} from 'react-bootstrap';\nimport NumberFormat from 'react-number-format';\nimport { BarChart, Bar, XAxis,YAxis, CartesianGrid,Tooltip,Legend} from 'recharts';\nimport \"leaflet/dist/leaflet.css\";\nimport Loader from 'react-loader-spinner';\n\nconst colors = {\n    confirmed: '#FFD31D',\n    recovered: '#21BF72',\n    deaths: '#DD2C00',\n  };\nclass LandingPage extends Component{\n    state={\n        userCountry:\"Turkey\",\n        mapData:[],\n        confirmed:0,\n        recovered:0,\n        deaths:0,\n        top10Confirmed:[],\n        top10Recovered:[],\n        top10Deaths:[],\n        zoom:2,\n        minZoom:2,\n        width:\n        window.innerWidth ||\n        document.documentElement.clientWidth ||\n        document.body.clientWidth\n      }\n    \n      componentDidMount(){\n        this.getData();\n        window.addEventListener('resize',this.updateDimensions);\n      }\n      updateDimensions = ()=>{\n        const width = \n        window.innerWidth ||\n        document.documentElement.clientWidth ||\n        document.body.clientWidth;\n\n        this.setState({width});\n    }\n      async getData(){\n\n      const ipapires=await Axios.get(\"https://ipapi.co/json\");\n      const userCountry=ipapi.data.country_name;\n      console.log(userCountry);\n      const DataForMapRes=await Axios.get(\"https://covid19.mathdro.id/api/deaths\");\n      const DataForMapAccurate=DataForMapRes.data.filter(row=> row.lat !== null);\n\n      const DataForCasesRes=await Axios.get(\"https://api.covid19api.com/summary\");\n      \n      const confirmed = DataForCasesRes.data.Global.TotalConfirmed;\n      const recovered = DataForCasesRes.data.Global.TotalRecovered;\n      const deaths = DataForCasesRes.data.Global.TotalDeaths;\n\n      const confirmedSorted=DataForCasesRes.data.Countries.sort(function(a,b){\n          return b.TotalConfirmed - a.TotalConfirmed;\n      });\n      const top10Confirmed = confirmedSorted.slice(0,10);\n\n      const recoveredSorted=DataForCasesRes.data.Countries.sort(function(a,b){\n          return b.TotalRecovered - a.TotalRecovered;\n      });\n      const top10Recovered = recoveredSorted.slice(0,10);\n      \n      const deathsSorted=DataForCasesRes.data.Countries.sort(function(a,b){\n          return b.TotalDeaths - a.TotalDeaths;\n      });\n      const top10Deaths = deathsSorted.slice(0,10);\n      this.setState({\n          userCountry,\n          mapData:DataForMapAccurate,\n          confirmed,\n          recovered,\n          deaths,\n          top10Confirmed,\n          top10Recovered,\n          top10Deaths\n      })\n      }\n    render(){\n        const {\n            userCountry,\n            mapData,\n            confirmed,\n            recovered,\n            deaths,\n            top10Confirmed,\n            top10Recovered,\n            top10Deaths,\n            zoom,\n            minZoom,\n            width\n        } = this.state;\n\n        if(!confirmed) return (\n                <Container fluid>\n                    <Row className=\"justify-content-md-center\">\n                        <Col xs=\"12\" lg=\"8\">\n                        <Card \n                            className=\"shadow\" \n                            style={{marginBottom:'1rem',paddingTop:'2rem',border:'none',minHeight:\"700px\"}}\n                        >\n                            <Loader \n                                type=\"Rings\"\n                                color=\"#DD2C00\"\n                                height={200}\n                                width={200}\n                                timeout={90000}\n                            />\n                        </Card>     \n                        </Col>\n                    </Row>\n                </Container>\n            );\n\n        return(\n            <div className=\"mid\">\n                <Container fluid>\n                <Row className=\"justify-content-md-center\">\n                        <Col xs=\"12\" lg=\"8\">\n                        <Card className=\"shadow=sm\" style={{marginBottom:'1rem',padding:'1rem',border:'none'}}>\n                            {\n                                (()=>{\n                                    switch(userCountry){\n                                        case \"Afghanistan\":return(\"Afghanistan\");\n                                        case \"Turkey\":return (\"Turkey\");\n                                        default:return(\"Others\");\n                                    }\n                                })()\n                            }\n                        </Card>     \n                        </Col>\n                    </Row>\n                    <Row className=\"justify-content-md-center\">\n                        <Col xs=\"12\" lg=\"8\">\n                        <Card className=\"shadow\" style={{marginBottom:'1rem',padding:'1rem',border:'none'}}>\n                            <Map\n                                width={ width > 980 ? 960 : width - 80 }\n                                zoom={width < 980 ? 1 : zoom}\n                                center={[20.505,-0.09]}\n                                minZoom={width < 980 ? 1 : minZoom}\n                                >\n                                <TileLayer url=\"https://{s}.tile.osm.org/{z}/{x}/{y}.png\" />\n                                \n                                {\n                                mapData.map((city,i) => {\n                                    return (\n                                    <CircleMarker \n                                        key={i} \n                                        center={[city.lat, city.long]} \n                                        readius={20 * Math.log(city.deaths / confirmed)}\n                                        fillOpacity={0.5}\n                                        fillColor={\"red\"}\n                                        stroke={false}\n                                    />\n                                    )\n                                })\n                                }\n                            </Map>\n                        </Card>     \n                        </Col>\n                    </Row>\n                </Container>\n                <Container fluid>\n                    <Row className=\"justify-content-md-center\">\n                        <Col xs lg=\"8\">\n                        <Card className=\"shadow-sm\" style={{marginBottom:'0rem',padding:'1rem',border:'none'}}>\n                            <Row className=\"justify-content-md-center\">\n                                <Col>\n                                    <Alert className=\"shadow\" style={{backgroundColor:colors.confirmed}}>\n                                    <h4>\n                                    <NumberFormat \n                                        value={confirmed} \n                                        displayType={'text'} \n                                        thousandSeparator={true} \n                                    />  \n                                    </h4>  \n                                    <p><b>Accomulative</b><i> as of today</i></p> \n                                    </Alert>\n                                </Col>\n                                <Col>\n                                    <Alert className=\"shadow\" style={{backgroundColor:colors.recovered}}>\n                                    <h4>\n                                    <NumberFormat \n                                        value={recovered} \n                                        displayType={'text'} \n                                        thousandSeparator={true} \n                                    />\n                                    </h4>\n                                    <h6><b>{Math.round((recovered / confirmed) * 100)}</b><i>% Recovery</i></h6>  \n                                    </Alert>\n                                </Col>\n                                <Col>\n                                    <Alert className=\"shadow\" style={{backgroundColor:colors.deaths,color:'#FFFFFF'}}>\n                                    <h4>\n                                    <NumberFormat \n                                        value={deaths} \n                                        displayType={'text'} \n                                        thousandSeparator={true} \n                                    />\n                                    </h4>\n                                    <h6><b>{Math.round((deaths / confirmed) * 100)}</b><i>% Deaths</i></h6>   \n                                    </Alert>\n                                </Col>\n                            </Row>\n                        </Card>     \n                        </Col>\n                    </Row>\n                </Container>\n\n                <Container fluid>\n                    <Row className=\"justify-content-md-center\">\n                        <Col xs lg=\"8\">\n                        <Card className=\"shadow-sm\" style={{marginBottom:'1rem',padding:'1rem',border:'none'}}>\n                            <div style={{marginTop:'1rem'}}>\n                                <h5 style={{textAlign:'center'}}>Top 10 Counties - Confirmed Cases Data</h5>\n                            </div>\n                        <BarChart \n                            width={ width > 980 ? 1200 : width - 80 } \n                            height={400} \n                            data={top10Confirmed}\n                            margin={{top: 5, right: 30, left: 0, bottom: 5}}\n                            layout=\"vertical\"\n                            barSize={15}\n                        >\n                        <CartesianGrid strokeDasharray=\"1 1\"/>\n                        <XAxis  type=\"number\"/>\n                        <YAxis dataKey=\"CountryCode\" type=\"category\" />\n                        <Tooltip />\n                        <Legend  />\n                        <Bar dataKey=\"TotalConfirmed\" fill={colors.confirmed} />\n                        </BarChart> \n                        </Card>     \n                        </Col>\n                    </Row>\n                </Container>\n\n                <Container fluid>\n                    <Row className=\"justify-content-md-center\">\n                        <Col xs lg=\"8\">\n                        <Card className=\"shadow-sm\" style={{marginBottom:'1rem',padding:'1rem',border:'none'}}>\n                            <div style={{marginTop:'1rem'}}>\n                                <h5 style={{textAlign:'center'}}>Top 10 Countries - Recovered Cases Data</h5>\n                            </div>\n                        <BarChart \n                            width={ width > 980 ? 1200 : width - 80 }  \n                            height={400} \n                            data={top10Recovered}\n                            margin={{top: 5, right: 30, left: 0, bottom: 5}}\n                            layout=\"vertical\"\n                            barSize={15}\n                        >\n                        <CartesianGrid strokeDasharray=\"1 1\"/>\n                        <XAxis type=\"number\"/>\n                        <YAxis dataKey=\"CountryCode\" type=\"category\"/>\n                        <Tooltip/>\n                        <Legend />\n                        <Bar dataKey=\"TotalRecovered\" fill={colors.recovered} />\n                        </BarChart>\n                        </Card>     \n                        </Col>\n                    </Row>\n                </Container>\n\n                <Container fluid>\n                    <Row className=\"justify-content-md-center\">\n                        <Col xs lg=\"8\">\n                        <Card className=\"shadow-sm\" style={{marginBottom:'1rem',padding:'1rem',border:'none'}}>\n                            <div style={{marginTop:'1rem'}}>\n                                <h5 style={{textAlign:'center'}}>Top 10 Countries - Death Cases Data</h5>\n                            </div>\n                        <BarChart \n                            width={ width > 980 ? 1200 : width - 80 }  \n                            height={400} \n                            data={top10Deaths}\n                            margin={{top: 5, right: 30, left: 0, bottom: 5}}\n                            layout=\"vertical\"\n                            barSize={15}\n                        >\n                        <CartesianGrid strokeDasharray=\"1 1\"/>\n                        <XAxis type=\"number\"/>\n                        <YAxis dataKey=\"CountryCode\" type=\"category\"/>\n                        <Tooltip/>\n                        <Legend />\n                        <Bar dataKey=\"TotalDeaths\" fill={colors.deaths} width={1} />\n                        </BarChart>\n                        </Card>\n                               \n                        </Col>\n                    </Row>\n                </Container>\n            </div>\n        )\n    }\n}\nexport default LandingPage;"]},"metadata":{},"sourceType":"module"}