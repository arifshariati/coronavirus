{"ast":null,"code":"import _regeneratorRuntime from\"/Users/shariati/Desktop/Projects/demo2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/shariati/Desktop/Projects/demo2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _classCallCheck from\"/Users/shariati/Desktop/Projects/demo2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/shariati/Desktop/Projects/demo2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _assertThisInitialized from\"/Users/shariati/Desktop/Projects/demo2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _createSuper from\"/Users/shariati/Desktop/Projects/demo2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import _inherits from\"/Users/shariati/Desktop/Projects/demo2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import React,{Component}from'react';import Axios from'axios';import{Container,Row,Col,Table,Form,Card,Button}from'react-bootstrap';import NumberFormat from'react-number-format';import ReactGA from'react-ga';import Loadding from'./loading';import Loading from'./loading';var colors={confirmed:'#FFD31D',recovered:'#21BF72',deaths:'#DD2C00'};var showChartPeriod=[{period:0,periodTitle:\"All Data\"},{period:7,periodTitle:\"Last 7 Days\"},{period:14,periodTitle:\"Last 14 Days\"},{period:30,periodTitle:\"Last 30 Days\"}];var DataChart=/*#__PURE__*/function(_Component){_inherits(DataChart,_Component);var _super=_createSuper(DataChart);function DataChart(props){var _this;_classCallCheck(this,DataChart);_this=_super.call(this,props);_this.state={loading:true,currentData:[],currentPage:1,dataPerPage:7,selectedCountry:\"China\",population:0,temp:[],countries:[],tableCountries:[],width:window.innerWidth||document.documentElement.clientWidth||document.body.clientWidth};_this.updateDimensions=function(){var width=window.innerWidth||document.documentElement.clientWidth||document.body.clientWidth;_this.setState({width:width});};_this.getData=_this.getData.bind(_assertThisInitialized(_this));_this.getCountry=_this.getCountry.bind(_assertThisInitialized(_this));_this.updateChartPeriod=_this.updateChartPeriod.bind(_assertThisInitialized(_this));return _this;}_createClass(DataChart,[{key:\"componentDidMount\",value:function componentDidMount(){ReactGA.initialize('UA-163115935-1');ReactGA.pageview('/Daily-Data');this.getCountryByIP();window.addEventListener('resize',this.updateDimensions);}},{key:\"getCountryByIP\",value:function(){var _getCountryByIP=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var res;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return Axios.get(\"https://ipapi.co/json\");case 2:res=_context.sent;this.setState({selectedCountry:res.data.country_name===\"United States\"?\"US\":res.data.country_name,population:res.data.country_population});this.getData();case 5:case\"end\":return _context.stop();}}},_callee,this);}));function getCountryByIP(){return _getCountryByIP.apply(this,arguments);}return getCountryByIP;}()},{key:\"getData\",value:function(){var _getData=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var res,selectedCountry,byConfirmed,indexOfLastData,indexOfFirstData;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return Axios.get(\"https://pomber.github.io/covid19/timeseries.json\");case 2:res=_context2.sent;selectedCountry=this.state.selectedCountry;byConfirmed=res.data[selectedCountry].slice(0);byConfirmed.sort(function(a,b){return b.confirmed-a.confirmed;});this.setState({countries:res.data[selectedCountry],tableCountries:byConfirmed,temp:Object.keys(res.data)});indexOfLastData=this.state.currentPage*this.state.dataPerPage;indexOfFirstData=indexOfLastData-this.state.dataPerPage;this.setState({loading:false,currentData:this.state.dataPerPage===0?this.state.tableCountries:this.state.tableCountries.slice(indexOfFirstData,indexOfLastData)});case 10:case\"end\":return _context2.stop();}}},_callee2,this);}));function getData(){return _getData.apply(this,arguments);}return getData;}()},{key:\"getCountry\",value:function(){var _getCountry=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(event){var countryRes,searchCountry,byConfirmed,indexOfLastData,indexOfFirstData;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:event.persist();_context3.next=3;return Axios.get(\"https://pomber.github.io/covid19/timeseries.json\");case 3:countryRes=_context3.sent;searchCountry=event.target.value;byConfirmed=countryRes.data[searchCountry].slice(0);byConfirmed.sort(function(a,b){return b.confirmed-a.confirmed;});this.setState({selectedCountry:searchCountry,tableCountries:byConfirmed});indexOfLastData=this.state.currentPage*this.state.dataPerPage;indexOfFirstData=indexOfLastData-this.state.dataPerPage;this.setState({loading:false,currentData:this.state.dataPerPage===0?this.state.tableCountries:this.state.tableCountries.slice(indexOfFirstData,indexOfLastData)});case 11:case\"end\":return _context3.stop();}}},_callee3,this);}));function getCountry(_x){return _getCountry.apply(this,arguments);}return getCountry;}()},{key:\"updateChartPeriod\",value:function updateChartPeriod(props){console.log(props);this.setState({dataPerPage:props});this.getData();//console.log(event.target.value);\n}},{key:\"render\",value:function render(){var _this2=this;var _this$state=this.state,currentData=_this$state.currentData,dataPerPage=_this$state.dataPerPage,selectedCountry=_this$state.selectedCountry,population=_this$state.population,temp=_this$state.temp,tableCountries=_this$state.tableCountries,width=_this$state.width;var loading=this.state.loading;if(loading)return/*#__PURE__*/React.createElement(Loading,null);return/*#__PURE__*/React.createElement(\"div\",{className:\"mid\"},/*#__PURE__*/React.createElement(Container,{fluid:true},/*#__PURE__*/React.createElement(Row,{className:\"justify-content-md-center\"},/*#__PURE__*/React.createElement(Col,{xs:\"12\",lg:\"8\"},/*#__PURE__*/React.createElement(Card,{className:\"shadow-sm\",style:{marginBottom:'1rem',padding:'1rem',border:'none'}},/*#__PURE__*/React.createElement(Form.Control,{as:\"select\",size:\"sm\",onChange:this.getCountry,custom:true},/*#__PURE__*/React.createElement(\"option\",null,selectedCountry),temp.map(function(items,i){return/*#__PURE__*/React.createElement(\"option\",{key:i},items);}))))),/*#__PURE__*/React.createElement(Row,{className:\"justify-content-md-center\",style:{marginBottom:\"1rem\"}},/*#__PURE__*/React.createElement(Col,{xs:true,lg:\"8\"},/*#__PURE__*/React.createElement(Row,{className:\"justify-content-md-center\"},showChartPeriod.map(function(period,index){return/*#__PURE__*/React.createElement(Col,null,/*#__PURE__*/React.createElement(Button,{key:index,variant:\"primary\",onClick:function onClick(){return _this2.updateChartPeriod(period.period);}},period.periodTitle));}))))),/*#__PURE__*/React.createElement(Container,{fluid:true},/*#__PURE__*/React.createElement(Row,{className:\"justify-content-md-center\"},/*#__PURE__*/React.createElement(Col,{xs:true,lg:\"8\"},/*#__PURE__*/React.createElement(Card,{className:\"shadow-sm\",style:{marginTop:'1rem',padding:'1rem',border:'none'}},/*#__PURE__*/React.createElement(Table,{responsive:true,size:\"sm\",striped:true,bordered:true,hover:true},/*#__PURE__*/React.createElement(\"thead\",null,/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"th\",null,\"Date\"),/*#__PURE__*/React.createElement(\"th\",null,\"Confirmed\"),/*#__PURE__*/React.createElement(\"th\",null,\"Recovered\"),/*#__PURE__*/React.createElement(\"th\",null,\"Deaths\"))),/*#__PURE__*/React.createElement(\"tbody\",null,currentData.map(function(list,index){return/*#__PURE__*/React.createElement(\"tr\",{key:index},/*#__PURE__*/React.createElement(\"td\",null,list.date),/*#__PURE__*/React.createElement(\"td\",null,/*#__PURE__*/React.createElement(NumberFormat,{value:list.confirmed,displayType:'text',thousandSeparator:true})),/*#__PURE__*/React.createElement(\"td\",null,/*#__PURE__*/React.createElement(NumberFormat,{value:list.recovered,displayType:'text',thousandSeparator:true})),/*#__PURE__*/React.createElement(\"td\",{style:{fontWeight:\"bold\"}},/*#__PURE__*/React.createElement(NumberFormat,{value:list.deaths,displayType:'text',thousandSeparator:true})));}))))))));}}]);return DataChart;}(Component);export default DataChart;","map":{"version":3,"sources":["/Users/shariati/Desktop/Projects/demo2/src/components/dataChart.jsx"],"names":["React","Component","Axios","Container","Row","Col","Table","Form","Card","Button","NumberFormat","ReactGA","Loadding","Loading","colors","confirmed","recovered","deaths","showChartPeriod","period","periodTitle","DataChart","props","state","loading","currentData","currentPage","dataPerPage","selectedCountry","population","temp","countries","tableCountries","width","window","innerWidth","document","documentElement","clientWidth","body","updateDimensions","setState","getData","bind","getCountry","updateChartPeriod","initialize","pageview","getCountryByIP","addEventListener","get","res","data","country_name","country_population","byConfirmed","slice","sort","a","b","Object","keys","indexOfLastData","indexOfFirstData","event","persist","countryRes","searchCountry","target","value","console","log","marginBottom","padding","border","map","items","i","index","marginTop","list","date","fontWeight"],"mappings":"wkCAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAAQC,SAAR,CAAkBC,GAAlB,CAAsBC,GAAtB,CAA0BC,KAA1B,CAAgCC,IAAhC,CAAsCC,IAAtC,CAA2CC,MAA3C,KAAwD,iBAAxD,CACA,MAAOC,CAAAA,YAAP,KAAyB,qBAAzB,CACA,MAAOC,CAAAA,OAAP,KAAoB,UAApB,CACA,MAAOC,CAAAA,QAAP,KAAqB,WAArB,CACA,MAAOC,CAAAA,OAAP,KAAoB,WAApB,CAEA,GAAMC,CAAAA,MAAM,CAAG,CACXC,SAAS,CAAE,SADA,CAEXC,SAAS,CAAE,SAFA,CAGXC,MAAM,CAAE,SAHG,CAAf,CAME,GAAMC,CAAAA,eAAe,CAAC,CACpB,CACIC,MAAM,CAAC,CADX,CAEIC,WAAW,CAAC,UAFhB,CADoB,CAKpB,CACID,MAAM,CAAC,CADX,CAEIC,WAAW,CAAC,aAFhB,CALoB,CASpB,CACID,MAAM,CAAC,EADX,CAEIC,WAAW,CAAC,cAFhB,CAToB,CAapB,CACID,MAAM,CAAC,EADX,CAEIC,WAAW,CAAC,cAFhB,CAboB,CAAtB,C,GAmBIC,CAAAA,S,sGACF,mBAAaC,KAAb,CAAmB,2CACf,uBAAMA,KAAN,EADe,MAOjBC,KAPiB,CAOX,CACJC,OAAO,CAAC,IADJ,CAEJC,WAAW,CAAC,EAFR,CAGJC,WAAW,CAAC,CAHR,CAIJC,WAAW,CAAC,CAJR,CAKJC,eAAe,CAAC,OALZ,CAMJC,UAAU,CAAC,CANP,CAOJC,IAAI,CAAC,EAPD,CAQJC,SAAS,CAAC,EARN,CASJC,cAAc,CAAC,EATX,CAUJC,KAAK,CACLC,MAAM,CAACC,UAAP,EACAC,QAAQ,CAACC,eAAT,CAAyBC,WADzB,EAEAF,QAAQ,CAACG,IAAT,CAAcD,WAbV,CAPW,OA8BjBE,gBA9BiB,CA8BE,UAAI,CACnB,GAAMP,CAAAA,KAAK,CACXC,MAAM,CAACC,UAAP,EACAC,QAAQ,CAACC,eAAT,CAAyBC,WADzB,EAEAF,QAAQ,CAACG,IAAT,CAAcD,WAHd,CAKA,MAAKG,QAAL,CAAc,CAACR,KAAK,CAALA,KAAD,CAAd,EACH,CArCgB,CAEf,MAAKS,OAAL,CAAa,MAAKA,OAAL,CAAaC,IAAb,+BAAb,CACA,MAAKC,UAAL,CAAgB,MAAKA,UAAL,CAAgBD,IAAhB,+BAAhB,CACA,MAAKE,iBAAL,CAAuB,MAAKA,iBAAL,CAAuBF,IAAvB,+BAAvB,CAJe,aAKhB,C,mFAiBkB,CAEjBhC,OAAO,CAACmC,UAAR,CAAmB,gBAAnB,EACAnC,OAAO,CAACoC,QAAR,CAAiB,aAAjB,EAEA,KAAKC,cAAL,GACAd,MAAM,CAACe,gBAAP,CAAwB,QAAxB,CAAiC,KAAKT,gBAAtC,EACD,C,sRAUiBtC,CAAAA,KAAK,CAACgD,GAAN,CAAU,uBAAV,C,QAAVC,G,eACN,KAAKV,QAAL,CAAc,CACVb,eAAe,CAACuB,GAAG,CAACC,IAAJ,CAASC,YAAT,GAAyB,eAAzB,CAA2C,IAA3C,CAAkDF,GAAG,CAACC,IAAJ,CAASC,YADjE,CAERxB,UAAU,CAACsB,GAAG,CAACC,IAAJ,CAASE,kBAFZ,CAAd,EAIA,KAAKZ,OAAL,G,0eAGgBxC,CAAAA,KAAK,CAACgD,GAAN,CAAU,kDAAV,C,QAAVC,G,gBACAvB,e,CAAgB,KAAKL,KAAL,CAAWK,e,CAC3B2B,W,CAAYJ,GAAG,CAACC,IAAJ,CAASxB,eAAT,EAA0B4B,KAA1B,CAAgC,CAAhC,C,CAClBD,WAAW,CAACE,IAAZ,CAAiB,SAASC,CAAT,CAAWC,CAAX,CAAa,CAC1B,MAAOA,CAAAA,CAAC,CAAC5C,SAAF,CAAc2C,CAAC,CAAC3C,SAAvB,CACH,CAFD,EAIA,KAAK0B,QAAL,CAAc,CACZV,SAAS,CAACoB,GAAG,CAACC,IAAJ,CAASxB,eAAT,CADE,CAEZI,cAAc,CAACuB,WAFH,CAGZzB,IAAI,CAAC8B,MAAM,CAACC,IAAP,CAAYV,GAAG,CAACC,IAAhB,CAHO,CAAd,EAOMU,e,CAAgB,KAAKvC,KAAL,CAAWG,WAAX,CAAyB,KAAKH,KAAL,CAAWI,W,CACpDoC,gB,CAAiBD,eAAe,CAAG,KAAKvC,KAAL,CAAWI,W,CACpD,KAAKc,QAAL,CAAc,CACVjB,OAAO,CAAC,KADE,CAEVC,WAAW,CACC,KAAKF,KAAL,CAAWI,WAAX,GAA2B,CAA3B,CACA,KAAKJ,KAAL,CAAWS,cADX,CAEA,KAAKT,KAAL,CAAWS,cAAX,CAA0BwB,KAA1B,CAAgCO,gBAAhC,CAAiDD,eAAjD,CALF,CAAd,E,4QAUeE,K,gMACfA,KAAK,CAACC,OAAN,G,uBACuB/D,CAAAA,KAAK,CAACgD,GAAN,CAAU,kDAAV,C,QAAjBgB,U,gBACAC,a,CAAcH,KAAK,CAACI,MAAN,CAAaC,K,CAE3Bd,W,CAAYW,UAAU,CAACd,IAAX,CAAgBe,aAAhB,EAA+BX,KAA/B,CAAqC,CAArC,C,CAClBD,WAAW,CAACE,IAAZ,CAAiB,SAASC,CAAT,CAAWC,CAAX,CAAa,CAC1B,MAAOA,CAAAA,CAAC,CAAC5C,SAAF,CAAc2C,CAAC,CAAC3C,SAAvB,CACH,CAFD,EAIA,KAAK0B,QAAL,CAAc,CACVb,eAAe,CAACuC,aADN,CAEVnC,cAAc,CAACuB,WAFL,CAAd,EAMMO,e,CAAgB,KAAKvC,KAAL,CAAWG,WAAX,CAAyB,KAAKH,KAAL,CAAWI,W,CACpDoC,gB,CAAiBD,eAAe,CAAG,KAAKvC,KAAL,CAAWI,W,CACpD,KAAKc,QAAL,CAAc,CACVjB,OAAO,CAAC,KADE,CAEVC,WAAW,CACC,KAAKF,KAAL,CAAWI,WAAX,GAA2B,CAA3B,CACA,KAAKJ,KAAL,CAAWS,cADX,CAEA,KAAKT,KAAL,CAAWS,cAAX,CAA0BwB,KAA1B,CAAgCO,gBAAhC,CAAiDD,eAAjD,CALF,CAAd,E,oNASgBxC,K,CAAM,CACtBgD,OAAO,CAACC,GAAR,CAAYjD,KAAZ,EACA,KAAKmB,QAAL,CAAc,CACVd,WAAW,CAACL,KADF,CAAd,EAGA,KAAKoB,OAAL,GACA;AACD,C,uCAGC,iCASA,KAAKnB,KATL,CAEAE,WAFA,aAEAA,WAFA,CAGAE,WAHA,aAGAA,WAHA,CAIAC,eAJA,aAIAA,eAJA,CAKAC,UALA,aAKAA,UALA,CAMAC,IANA,aAMAA,IANA,CAOAE,cAPA,aAOAA,cAPA,CAQAC,KARA,aAQAA,KARA,CAWJ,GAAMT,CAAAA,OAAO,CAAG,KAAKD,KAAL,CAAWC,OAA3B,CACA,GAAGA,OAAH,CAAY,mBACR,oBAAC,OAAD,MADQ,CAIZ,mBACI,2BAAK,SAAS,CAAC,KAAf,eACI,oBAAC,SAAD,EAAW,KAAK,KAAhB,eACI,oBAAC,GAAD,EAAK,SAAS,CAAC,2BAAf,eACI,oBAAC,GAAD,EAAK,EAAE,CAAC,IAAR,CAAa,EAAE,CAAC,GAAhB,eACA,oBAAC,IAAD,EAAM,SAAS,CAAC,WAAhB,CAA4B,KAAK,CAAE,CAACgD,YAAY,CAAC,MAAd,CAAqBC,OAAO,CAAC,MAA7B,CAAoCC,MAAM,CAAC,MAA3C,CAAnC,eACI,oBAAC,IAAD,CAAM,OAAN,EAAc,EAAE,CAAC,QAAjB,CAA0B,IAAI,CAAC,IAA/B,CAAoC,QAAQ,CAAE,KAAK9B,UAAnD,CAA+D,MAAM,KAArE,eACQ,kCAAShB,eAAT,CADR,CAGQE,IAAI,CAAC6C,GAAL,CAAS,SAACC,KAAD,CAAOC,CAAP,qBACT,8BAAQ,GAAG,CAAEA,CAAb,EAAiBD,KAAjB,CADS,EAAT,CAHR,CADJ,CADA,CADJ,CADJ,cAgBI,oBAAC,GAAD,EAAK,SAAS,CAAC,2BAAf,CAA2C,KAAK,CAAE,CAACJ,YAAY,CAAC,MAAd,CAAlD,eACQ,oBAAC,GAAD,EAAK,EAAE,KAAP,CAAQ,EAAE,CAAC,GAAX,eACI,oBAAC,GAAD,EAAK,SAAS,CAAC,2BAAf,EAEQtD,eAAe,CAACyD,GAAhB,CAAoB,SAACxD,MAAD,CAAQ2D,KAAR,qBAChB,oBAAC,GAAD,mBACI,oBAAC,MAAD,EAAQ,GAAG,CAAEA,KAAb,CAAoB,OAAO,CAAC,SAA5B,CAAsC,OAAO,CAAE,yBAAI,CAAA,MAAI,CAACjC,iBAAL,CAAuB1B,MAAM,CAACA,MAA9B,CAAJ,EAA/C,EAA2FA,MAAM,CAACC,WAAlG,CADJ,CADgB,EAApB,CAFR,CADJ,CADR,CAhBJ,CADJ,cAgCI,oBAAC,SAAD,EAAW,KAAK,KAAhB,eACI,oBAAC,GAAD,EAAK,SAAS,CAAC,2BAAf,eACI,oBAAC,GAAD,EAAK,EAAE,KAAP,CAAQ,EAAE,CAAC,GAAX,eACI,oBAAC,IAAD,EAAM,SAAS,CAAC,WAAhB,CAA4B,KAAK,CAAE,CAAC2D,SAAS,CAAC,MAAX,CAAkBN,OAAO,CAAC,MAA1B,CAAiCC,MAAM,CAAC,MAAxC,CAAnC,eACI,oBAAC,KAAD,EAAO,UAAU,KAAjB,CAAkB,IAAI,CAAC,IAAvB,CAA4B,OAAO,CAAE,IAArC,CAA2C,QAAQ,CAAE,IAArD,CAA2D,KAAK,KAAhE,eACI,8CACI,2CACA,qCADA,cAEA,0CAFA,cAGA,0CAHA,cAIA,uCAJA,CADJ,CADJ,cASI,iCAEIjD,WAAW,CAACkD,GAAZ,CAAgB,SAACK,IAAD,CAAMF,KAAN,qBAChB,0BAAI,GAAG,CAAEA,KAAT,eACA,8BAAKE,IAAI,CAACC,IAAV,CADA,cAEA,2CACI,oBAAC,YAAD,EACI,KAAK,CAAED,IAAI,CAACjE,SADhB,CAEI,WAAW,CAAE,MAFjB,CAGI,iBAAiB,CAAE,IAHvB,EADJ,CAFA,cAUA,2CACI,oBAAC,YAAD,EAAc,KAAK,CAAEiE,IAAI,CAAChE,SAA1B,CAAqC,WAAW,CAAE,MAAlD,CAA0D,iBAAiB,CAAE,IAA7E,EADJ,CAVA,cAaA,0BAAI,KAAK,CAAE,CAACkE,UAAU,CAAC,MAAZ,CAAX,eACI,oBAAC,YAAD,EAAc,KAAK,CAAEF,IAAI,CAAC/D,MAA1B,CAAkC,WAAW,CAAE,MAA/C,CAAuD,iBAAiB,CAAE,IAA1E,EADJ,CAbA,CADgB,EAAhB,CAFJ,CATJ,CADJ,CADJ,CADJ,CADJ,CAhCJ,CADJ,CA8EH,C,uBA7MuBhB,S,EA+MxB,cAAeoB,CAAAA,SAAf","sourcesContent":["import React, { Component } from 'react';\nimport Axios from 'axios';\nimport {Container,Row,Col,Table,Form, Card,Button} from 'react-bootstrap';\nimport NumberFormat from 'react-number-format';\nimport ReactGA from 'react-ga';\nimport Loadding from './loading';\nimport Loading from './loading';\n\nconst colors = {\n    confirmed: '#FFD31D',\n    recovered: '#21BF72',\n    deaths: '#DD2C00',\n  };\n\n  const showChartPeriod=[\n    {\n        period:0,\n        periodTitle:\"All Data\"\n    },\n    {\n        period:7,\n        periodTitle:\"Last 7 Days\"\n    },\n    {\n        period:14,\n        periodTitle:\"Last 14 Days\"\n    },\n    {\n        period:30,\n        periodTitle:\"Last 30 Days\"\n    }\n]\n\nclass DataChart extends Component{\n    constructor (props){\n        super(props);\n        this.getData=this.getData.bind(this);\n        this.getCountry=this.getCountry.bind(this);\n        this.updateChartPeriod=this.updateChartPeriod.bind(this);\n      }\n      \n      state={\n        loading:true,\n        currentData:[],\n        currentPage:1,\n        dataPerPage:7,\n        selectedCountry:\"China\",\n        population:0,\n        temp:[],\n        countries:[],\n        tableCountries:[],\n        width:\n        window.innerWidth ||\n        document.documentElement.clientWidth ||\n        document.body.clientWidth\n      }\n      componentDidMount(){\n\n        ReactGA.initialize('UA-163115935-1');\n        ReactGA.pageview('/Daily-Data');\n\n        this.getCountryByIP();\n        window.addEventListener('resize',this.updateDimensions);\n      }\n      updateDimensions = ()=>{\n          const width = \n          window.innerWidth ||\n          document.documentElement.clientWidth ||\n          document.body.clientWidth;\n\n          this.setState({width});\n      }\n      async getCountryByIP(){\n        const res=await Axios.get(\"https://ipapi.co/json\");\n        this.setState({\n            selectedCountry:res.data.country_name ===\"United States\" ? \"US\" : res.data.country_name,\n              population:res.data.country_population\n        })\n        this.getData();\n    }\n      async getData(){\n        const res=await Axios.get(\"https://pomber.github.io/covid19/timeseries.json\");\n        const selectedCountry=this.state.selectedCountry;\n        const byConfirmed=res.data[selectedCountry].slice(0);\n        byConfirmed.sort(function(a,b){\n            return b.confirmed - a.confirmed;\n        });\n\n        this.setState({\n          countries:res.data[selectedCountry],\n          tableCountries:byConfirmed,\n          temp:Object.keys(res.data)\n        })\n\n\n        const indexOfLastData=this.state.currentPage * this.state.dataPerPage;\n        const indexOfFirstData=indexOfLastData - this.state.dataPerPage;\n        this.setState({\n            loading:false,\n            currentData:\n                        this.state.dataPerPage === 0 ? \n                        this.state.tableCountries : \n                        this.state.tableCountries.slice(indexOfFirstData,indexOfLastData)\n        })\n        \n        \n      }\n      async getCountry(event){\n        event.persist();\n        const countryRes=await Axios.get(\"https://pomber.github.io/covid19/timeseries.json\");\n        const searchCountry=event.target.value;\n        \n        const byConfirmed=countryRes.data[searchCountry].slice(0);\n        byConfirmed.sort(function(a,b){\n            return b.confirmed - a.confirmed;\n        });\n\n        this.setState({\n            selectedCountry:searchCountry,\n            tableCountries:byConfirmed\n        })\n\n\n        const indexOfLastData=this.state.currentPage * this.state.dataPerPage;\n        const indexOfFirstData=indexOfLastData - this.state.dataPerPage;\n        this.setState({\n            loading:false,\n            currentData:\n                        this.state.dataPerPage === 0 ?\n                        this.state.tableCountries :\n                        this.state.tableCountries.slice(indexOfFirstData,indexOfLastData)\n        })\n      }\n\n      updateChartPeriod(props){\n        console.log(props);\n        this.setState({\n            dataPerPage:props,\n        })\n        this.getData();\n        //console.log(event.target.value);\n      }\n\n    \nrender(){\n    const {\n        currentData,\n        dataPerPage,\n        selectedCountry,\n        population,\n        temp,\n        tableCountries,\n        width\n    } = this.state;\n    \n    const loading = this.state.loading;\n    if(loading) return (\n        <Loading />\n    );\n\n    return(\n        <div className=\"mid\">\n            <Container fluid>\n                <Row className=\"justify-content-md-center\">\n                    <Col xs=\"12\" lg=\"8\">\n                    <Card className=\"shadow-sm\" style={{marginBottom:'1rem',padding:'1rem',border:'none'}}>\n                        <Form.Control as=\"select\" size=\"sm\" onChange={this.getCountry} custom>\n                                <option>{selectedCountry}</option> \n                                {\n                                temp.map((items,i)=>\n                                <option key={i}>{items}</option>  \n                                )\n                                }\n                            </Form.Control>\n                    </Card>     \n                    </Col>\n                </Row>\n\n                <Row className=\"justify-content-md-center\" style={{marginBottom:\"1rem\"}}>\n                        <Col xs lg=\"8\">\n                            <Row className=\"justify-content-md-center\">\n                                {\n                                    showChartPeriod.map((period,index)=>\n                                        <Col>\n                                            <Button key={index} variant=\"primary\" onClick={()=>this.updateChartPeriod(period.period)}>{period.periodTitle}</Button>\n                                        </Col>\n                                    )\n                                }\n                            </Row>\n                        </Col>\n                    </Row>\n            </Container>\n            \n            <Container fluid>\n                <Row className=\"justify-content-md-center\">\n                    <Col xs lg=\"8\">\n                        <Card className=\"shadow-sm\" style={{marginTop:'1rem',padding:'1rem',border:'none'}}>\n                            <Table responsive size=\"sm\" striped={true} bordered={true} hover>\n                                <thead>\n                                    <tr>\n                                    <th>Date</th>\n                                    <th>Confirmed</th>\n                                    <th>Recovered</th>\n                                    <th>Deaths</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {\n                                    currentData.map((list,index)=>\n                                    <tr key={index}>\n                                    <td>{list.date}</td>\n                                    <td>\n                                        <NumberFormat \n                                            value={list.confirmed} \n                                            displayType={'text'} \n                                            thousandSeparator={true} \n                                        />\n                                        \n                                    </td>\n                                    <td>\n                                        <NumberFormat value={list.recovered} displayType={'text'} thousandSeparator={true} />\n                                    </td>\n                                    <td style={{fontWeight:\"bold\"}}>\n                                        <NumberFormat value={list.deaths} displayType={'text'} thousandSeparator={true} />\n                                    </td>\n                                    </tr>\n                                    )\n                                    }\n                                </tbody>\n                                </Table>\n                        </Card>\n                    \n                    </Col>\n                </Row>\n            </Container>\n            \n        </div>\n    )\n}\n}\nexport default DataChart;"]},"metadata":{},"sourceType":"module"}