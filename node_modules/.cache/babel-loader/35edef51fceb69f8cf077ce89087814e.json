{"ast":null,"code":"import _regeneratorRuntime from\"/Users/shariati/Desktop/Projects/demo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/shariati/Desktop/Projects/demo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _classCallCheck from\"/Users/shariati/Desktop/Projects/demo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/shariati/Desktop/Projects/demo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _assertThisInitialized from\"/Users/shariati/Desktop/Projects/demo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _createSuper from\"/Users/shariati/Desktop/Projects/demo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import _inherits from\"/Users/shariati/Desktop/Projects/demo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import React,{Component}from'react';import Axios from'axios';import{Container,Row,Col,Table,Form}from'react-bootstrap';import NumberFormat from'react-number-format';import{LineChart,Line,XAxis,YAxis,CartesianGrid,Tooltip,Legend}from'recharts';import Pagination from'./pagination';var DataChart=/*#__PURE__*/function(_Component){_inherits(DataChart,_Component);var _super=_createSuper(DataChart);function DataChart(props){var _this;_classCallCheck(this,DataChart);_this=_super.call(this,props);_this.state={currentData:[],currentPage:1,dataPerPage:7,selectedCountry:\"China\",temp:[],countries:[],tableCountries:[]};_this.getCountry=_this.getCountry.bind(_assertThisInitialized(_this));_this.paginate=_this.paginate.bind(_assertThisInitialized(_this));return _this;}_createClass(DataChart,[{key:\"componentDidMount\",value:function componentDidMount(){this.getData();}},{key:\"getData\",value:function(){var _getData=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var res,byConfirmed,indexOfLastData,indexOfFirstData;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return Axios.get(\"https://pomber.github.io/covid19/timeseries.json\");case 2:res=_context.sent;byConfirmed=res.data.China.slice(0);byConfirmed.sort(function(a,b){return b.confirmed-a.confirmed;});this.setState({countries:res.data.China,tableCountries:byConfirmed,temp:Object.keys(res.data)});indexOfLastData=this.state.currentPage*this.state.dataPerPage;indexOfFirstData=indexOfLastData-this.state.dataPerPage;this.setState({currentData:this.state.tableCountries.slice(indexOfFirstData,indexOfLastData)});case 9:case\"end\":return _context.stop();}}},_callee,this);}));function getData(){return _getData.apply(this,arguments);}return getData;}()},{key:\"getCountry\",value:function(){var _getCountry=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(event){var countryRes,searchCountry,byConfirmed,indexOfLastData,indexOfFirstData;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:event.persist();_context2.next=3;return Axios.get(\"https://pomber.github.io/covid19/timeseries.json\");case 3:countryRes=_context2.sent;searchCountry=event.target.value;byConfirmed=countryRes.data[searchCountry].slice(0);byConfirmed.sort(function(a,b){return b.confirmed-a.confirmed;});this.setState({selectedCountry:searchCountry,countries:countryRes.data[searchCountry],tableCountries:byConfirmed});indexOfLastData=this.state.currentPage*this.state.dataPerPage;indexOfFirstData=indexOfLastData-this.state.dataPerPage;this.setState({currentData:this.state.tableCountries.slice(indexOfFirstData,indexOfLastData)});case 11:case\"end\":return _context2.stop();}}},_callee2,this);}));function getCountry(_x){return _getCountry.apply(this,arguments);}return getCountry;}()},{key:\"updatePageNumber\",value:function(){var _updatePageNumber=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(){var countryRes,searchCountry,byConfirmed,indexOfLastData,indexOfFirstData;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.next=2;return Axios.get(\"https://pomber.github.io/covid19/timeseries.json\");case 2:countryRes=_context3.sent;searchCountry=this.state.selectedCountry;byConfirmed=countryRes.data[searchCountry].slice(0);byConfirmed.sort(function(a,b){return b.confirmed-a.confirmed;});this.setState({selectedCountry:searchCountry,countries:countryRes.data[searchCountry],tableCountries:byConfirmed});indexOfLastData=this.state.currentPage*this.state.dataPerPage;indexOfFirstData=indexOfLastData-this.state.dataPerPage;this.setState({currentData:this.state.tableCountries.slice(indexOfFirstData,indexOfLastData)});case 10:case\"end\":return _context3.stop();}}},_callee3,this);}));function updatePageNumber(){return _updatePageNumber.apply(this,arguments);}return updatePageNumber;}()//paginate = pageNumber=> this.setState({currentPage:pageNumber});\n},{key:\"paginate\",value:function paginate(pageNumber){this.setState({currentPage:pageNumber});this.updatePageNumber();}},{key:\"render\",value:function render(){return/*#__PURE__*/React.createElement(\"div\",{className:\"dataChart\"},/*#__PURE__*/React.createElement(Container,{fluid:\"md\"},/*#__PURE__*/React.createElement(Row,{className:\"justify-content-md-center\"},/*#__PURE__*/React.createElement(Col,{lg:\"12\",md:\"12\"},/*#__PURE__*/React.createElement(\"h5\",null,\"Visual Chart of COVID-19 Daily Statistics\"))),/*#__PURE__*/React.createElement(Row,{className:\"justify-content-md-center\"},/*#__PURE__*/React.createElement(Col,{lg:\"12\",md:\"12\"},/*#__PURE__*/React.createElement(\"h5\",null,this.state.selectedCountry,\"'s Data\")))),/*#__PURE__*/React.createElement(Container,{fluid:true},/*#__PURE__*/React.createElement(Row,{className:\"justify-content-md-center\"},/*#__PURE__*/React.createElement(Col,{lg:\"12\",md:\"12\"},/*#__PURE__*/React.createElement(LineChart,{width:300,height:350,data:this.state.countries,margin:{top:20,right:30,left:0,bottom:20}},/*#__PURE__*/React.createElement(CartesianGrid,{strokeDasharray:\"1 1\"}),/*#__PURE__*/React.createElement(XAxis,{dataKey:\"date\"}),/*#__PURE__*/React.createElement(YAxis,null),/*#__PURE__*/React.createElement(Tooltip,null),/*#__PURE__*/React.createElement(Legend,{layout:\"vertical\"}),/*#__PURE__*/React.createElement(Line,{type:\"monotone\",dataKey:\"confirmed\",dot:false,stroke:\"#8DB1AB\",strokeWidth:3}),/*#__PURE__*/React.createElement(Line,{type:\"monotone\",dataKey:\"recovered\",dot:false,stroke:\"#00BCD4\",strokeWidth:3}),/*#__PURE__*/React.createElement(Line,{type:\"monotone\",dataKey:\"deaths\",dot:false,stroke:\"#DD2C00\",strokeWidth:3}))))),/*#__PURE__*/React.createElement(Container,{fluid:true},/*#__PURE__*/React.createElement(Row,{className:\"justify-content-md-center\"},/*#__PURE__*/React.createElement(Col,{lg:\"12\",md:\"auto\"},/*#__PURE__*/React.createElement(Form,{title:\"Date Wise COVID-19 Cases\"},/*#__PURE__*/React.createElement(Form.Group,{controlId:\"exampleForm.SelectCustomSizeLg\"},/*#__PURE__*/React.createElement(Form.Label,null,\"Select Country\"),/*#__PURE__*/React.createElement(Form.Control,{as:\"select\",size:\"sm\",onChange:this.getCountry,custom:true},this.state.temp.map(function(items,i){return/*#__PURE__*/React.createElement(\"option\",{key:i},items);}))))))),/*#__PURE__*/React.createElement(Container,{fluid:true},/*#__PURE__*/React.createElement(Row,{className:\"justify-content-md-center\"},/*#__PURE__*/React.createElement(Col,{lg:\"12\",md:\"auto\"},/*#__PURE__*/React.createElement(\"p\",null,/*#__PURE__*/React.createElement(\"i\",null,/*#__PURE__*/React.createElement(\"b\",null,\"** Note:\"),\" Table data is accomulative.\")))),/*#__PURE__*/React.createElement(Row,{className:\"justify-content-md-center\"},/*#__PURE__*/React.createElement(Col,{lg:\"12\",md:\"auto\"},/*#__PURE__*/React.createElement(Table,{responsive:true,size:\"sm\",striped:true,bordered:true,hover:true},/*#__PURE__*/React.createElement(\"thead\",null,/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"th\",null,\"Date\"),/*#__PURE__*/React.createElement(\"th\",null,\"Confirmed\"),/*#__PURE__*/React.createElement(\"th\",null,\"Recovered\"),/*#__PURE__*/React.createElement(\"th\",null,\"Deaths\"))),/*#__PURE__*/React.createElement(\"tbody\",null,this.state.currentData.map(function(list,index){return/*#__PURE__*/React.createElement(\"tr\",{key:index},/*#__PURE__*/React.createElement(\"td\",null,list.date),/*#__PURE__*/React.createElement(\"td\",null,/*#__PURE__*/React.createElement(NumberFormat,{value:list.confirmed,displayType:'text',thousandSeparator:true})),/*#__PURE__*/React.createElement(\"td\",null,/*#__PURE__*/React.createElement(NumberFormat,{value:list.recovered,displayType:'text',thousandSeparator:true})),/*#__PURE__*/React.createElement(\"td\",{style:{fontWeight:\"bold\"}},/*#__PURE__*/React.createElement(NumberFormat,{value:list.deaths,displayType:'text',thousandSeparator:true})));})))))),/*#__PURE__*/React.createElement(Container,{fluid:true},/*#__PURE__*/React.createElement(Row,{className:\"justify-content-md-center\"},/*#__PURE__*/React.createElement(Col,{lg:\"12\",md:\"auto\"},/*#__PURE__*/React.createElement(Pagination,{dataPerPage:this.state.dataPerPage,totalData:this.state.tableCountries.length,paginate:this.paginate})))));}}]);return DataChart;}(Component);export default DataChart;","map":{"version":3,"sources":["/Users/shariati/Desktop/Projects/demo/src/components/dataChart.jsx"],"names":["React","Component","Axios","Container","Row","Col","Table","Form","NumberFormat","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","Legend","Pagination","DataChart","props","state","currentData","currentPage","dataPerPage","selectedCountry","temp","countries","tableCountries","getCountry","bind","paginate","getData","get","res","byConfirmed","data","China","slice","sort","a","b","confirmed","setState","Object","keys","indexOfLastData","indexOfFirstData","event","persist","countryRes","searchCountry","target","value","pageNumber","updatePageNumber","top","right","left","bottom","map","items","i","list","index","date","recovered","fontWeight","deaths","length"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Axios from 'axios';\nimport {Container,Row,Col,Table,Form} from 'react-bootstrap';\nimport NumberFormat from 'react-number-format';\nimport { LineChart, Line, XAxis,YAxis, CartesianGrid,Tooltip,Legend} from 'recharts';\nimport Pagination from './pagination';\n\nclass DataChart extends Component{\n    constructor (props){\n        super(props);\n        this.getCountry=this.getCountry.bind(this);\n        this.paginate=this.paginate.bind(this);\n      }\n      state={\n        currentData:[],\n        currentPage:1,\n        dataPerPage:7,\n        selectedCountry:\"China\",\n        temp:[],\n        countries:[],\n        tableCountries:[]\n      }\n      componentDidMount(){\n        this.getData();\n      }\n      async getData(){\n        const res=await Axios.get(\"https://pomber.github.io/covid19/timeseries.json\");\n        \n        const byConfirmed=res.data.China.slice(0);\n        byConfirmed.sort(function(a,b){\n            return b.confirmed - a.confirmed;\n        });\n\n        this.setState({\n          countries:res.data.China,\n          tableCountries:byConfirmed,\n          temp:Object.keys(res.data)\n        })\n\n        const indexOfLastData=this.state.currentPage * this.state.dataPerPage;\n        const indexOfFirstData=indexOfLastData - this.state.dataPerPage;\n        this.setState({\n            currentData:this.state.tableCountries.slice(indexOfFirstData,indexOfLastData)\n        })\n        \n      }\n      async getCountry(event){\n        event.persist();\n        const countryRes=await Axios.get(\"https://pomber.github.io/covid19/timeseries.json\");\n        const searchCountry=event.target.value;\n        \n        const byConfirmed=countryRes.data[searchCountry].slice(0);\n        byConfirmed.sort(function(a,b){\n            return b.confirmed - a.confirmed;\n        });\n\n        this.setState({\n            selectedCountry:searchCountry,\n            countries:countryRes.data[searchCountry],\n            tableCountries:byConfirmed\n        })\n        const indexOfLastData=this.state.currentPage * this.state.dataPerPage;\n        const indexOfFirstData=indexOfLastData - this.state.dataPerPage;\n        this.setState({\n            currentData:this.state.tableCountries.slice(indexOfFirstData,indexOfLastData)\n        })\n      }\n      async updatePageNumber(){\n        const countryRes=await Axios.get(\"https://pomber.github.io/covid19/timeseries.json\");\n        const searchCountry=this.state.selectedCountry;\n        \n        const byConfirmed=countryRes.data[searchCountry].slice(0);\n        byConfirmed.sort(function(a,b){\n            return b.confirmed - a.confirmed;\n        });\n\n        this.setState({\n            selectedCountry:searchCountry,\n            countries:countryRes.data[searchCountry],\n            tableCountries:byConfirmed\n        })\n        const indexOfLastData=this.state.currentPage * this.state.dataPerPage;\n        const indexOfFirstData=indexOfLastData - this.state.dataPerPage;\n        this.setState({\n            currentData:this.state.tableCountries.slice(indexOfFirstData,indexOfLastData)\n        })\n      }\n    //paginate = pageNumber=> this.setState({currentPage:pageNumber});\n        paginate(pageNumber){\n        this.setState({currentPage:pageNumber});\n        this.updatePageNumber();\n    }\n    \nrender(){\n    return(\n        <div className=\"dataChart\">\n            <Container fluid=\"md\">\n                <Row className=\"justify-content-md-center\">\n                    <Col lg=\"12\" md=\"12\">\n                    <h5>Visual Chart of COVID-19 Daily Statistics</h5>\n                    </Col>\n                </Row>\n                <Row className=\"justify-content-md-center\">\n                    <Col lg=\"12\" md=\"12\">\n                    <h5>{this.state.selectedCountry}'s Data</h5>\n                    </Col>\n                </Row>\n            </Container>\n            <Container fluid>\n                \n                <Row className=\"justify-content-md-center\">\n                    <Col lg=\"12\" md=\"12\">\n                    <LineChart width={300} height={350} data={this.state.countries} margin={{top: 20, right: 30, left: 0, bottom: 20}}>\n                    <CartesianGrid strokeDasharray=\"1 1\" />\n                    <XAxis dataKey=\"date\" />\n                    <YAxis />\n                    <Tooltip />\n                    <Legend  layout={\"vertical\"}/>\n                    <Line type=\"monotone\"  dataKey=\"confirmed\" dot={false}  stroke=\"#8DB1AB\" strokeWidth={3} />\n                    <Line type=\"monotone\" dataKey=\"recovered\" dot={false} stroke=\"#00BCD4\" strokeWidth={3} />\n                    <Line type=\"monotone\" dataKey=\"deaths\" dot={false}  stroke=\"#DD2C00\" strokeWidth={3} />\n                    </LineChart>\n                    </Col>\n                </Row>\n            </Container>\n            <Container fluid>\n                <Row className=\"justify-content-md-center\">\n                    <Col lg=\"12\" md=\"auto\">\n                        <Form title=\"Date Wise COVID-19 Cases\">\n                        <Form.Group controlId=\"exampleForm.SelectCustomSizeLg\">\n                            <Form.Label>Select Country</Form.Label>\n                            <Form.Control as=\"select\" size=\"sm\" onChange={this.getCountry} custom>\n                                {\n                                this.state.temp.map((items,i)=>\n                                <option key={i}>{items}</option>  \n                                )\n                                }\n                            </Form.Control>\n                        </Form.Group>\n                        </Form>      \n                    </Col>\n                </Row>\n            </Container>\n            <Container fluid>\n                <Row className=\"justify-content-md-center\">\n                    <Col lg=\"12\" md=\"auto\">\n                        <p><i><b>** Note:</b> Table data is accomulative.</i></p>\n                    </Col>\n                </Row>\n                <Row className=\"justify-content-md-center\">\n                    <Col lg=\"12\" md=\"auto\">\n                    <Table responsive size=\"sm\" striped={true} bordered={true} hover>\n                    <thead>\n                        <tr>\n                        <th>Date</th>\n                        <th>Confirmed</th>\n                        <th>Recovered</th>\n                        <th>Deaths</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {\n                        this.state.currentData.map((list,index)=>\n                        <tr key={index}>\n                        <td>{list.date}</td>\n                        <td><NumberFormat value={list.confirmed} displayType={'text'} thousandSeparator={true} /></td>\n                        <td><NumberFormat value={list.recovered} displayType={'text'} thousandSeparator={true} /></td>\n                        <td style={{fontWeight:\"bold\"}}><NumberFormat value={list.deaths} displayType={'text'} thousandSeparator={true} /></td>\n                        </tr>\n                        )\n                        }\n                    </tbody>\n                    </Table>\n                    </Col>\n                </Row>\n            </Container>\n            <Container fluid>\n                <Row className=\"justify-content-md-center\">\n                    <Col lg=\"12\" md=\"auto\">\n                    <Pagination dataPerPage={this.state.dataPerPage} totalData={this.state.tableCountries.length} paginate={this.paginate}/>\n                    </Col>\n                </Row>\n            </Container>\n            \n        </div>\n    )\n}\n}\nexport default DataChart;"]},"metadata":{},"sourceType":"module"}