{"ast":null,"code":"var _jsxFileName = \"/Users/shariati/Desktop/Projects/demo2/src/components/landingPage.jsx\";\nimport React, { Component } from 'react';\nimport Axios from 'axios';\nimport { Map, CircleMarker, TileLayer } from 'react-leaflet';\nimport { Container, Row, Col, Card, Alert } from 'react-bootstrap';\nimport NumberFormat from 'react-number-format';\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from 'recharts';\nimport \"leaflet/dist/leaflet.css\";\nconst colors = {\n  confirmed: '#FFD31D',\n  recovered: '#21BF72',\n  deaths: '#DD2C00'\n};\n\nclass LandingPage extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      mapData: [],\n      confirmed: 0,\n      recovered: 0,\n      deaths: 0,\n      top10Confirmed: [],\n      top10Recovered: [],\n      top10Deaths: [],\n      zoom: 2,\n      minZoom: 2,\n      width: window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth\n    };\n\n    this.updateDimensions = () => {\n      const width = window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth;\n      this.setState({\n        width\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.getData();\n    window.addEventListener('resize', this.updateDimensions);\n  }\n\n  async getData() {\n    const DataForMapRes = await Axios.get(\"https://covid19.mathdro.id/api/deaths\");\n    const DataForMapAccurate = DataForMapRes.data.filter(row => row.lat !== null);\n    const DataForCasesRes = await Axios.get(\"https://api.covid19api.com/summary\");\n    const confirmed = DataForCasesRes.data.Global.TotalConfirmed;\n    const recovered = DataForCasesRes.data.Global.TotalRecovered;\n    const deaths = DataForCasesRes.data.Global.TotalDeaths;\n    const confirmedSorted = DataForCasesRes.data.Countries.sort(function (a, b) {\n      return b.TotalConfirmed - a.TotalConfirmed;\n    });\n    const top10Confirmed = confirmedSorted.slice(0, 10);\n    const recoveredSorted = DataForCasesRes.data.Countries.sort(function (a, b) {\n      return b.TotalRecovered - a.TotalRecovered;\n    });\n    const top10Recovered = recoveredSorted.slice(0, 10);\n    const deathsSorted = DataForCasesRes.data.Countries.sort(function (a, b) {\n      return b.TotalDeaths - a.TotalDeaths;\n    });\n    const top10Deaths = deathsSorted.slice(0, 10);\n    console.log(top10Confirmed);\n    this.setState({\n      mapData: DataForMapAccurate,\n      confirmed,\n      recovered,\n      deaths,\n      top10Confirmed,\n      top10Recovered,\n      top10Deaths\n    });\n  }\n\n  render() {\n    const {\n      mapData,\n      confirmed,\n      recovered,\n      deaths,\n      top10Confirmed,\n      top10Recovered,\n      top10Deaths,\n      zoom,\n      minZoom,\n      width\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Container, {\n      fluid: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      className: \"justify-content-md-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      xs: \"12\",\n      lg: \"8\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      className: \"shadow\",\n      style: {\n        marginBottom: '1rem',\n        padding: '1rem',\n        border: 'none'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Map, {\n      width: width > 980 ? 960 : width - 80,\n      zoom: width < 980 ? 1 : zoom,\n      center: [20.505, -0.09],\n      minZoom: width < 980 ? 1 : minZoom,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(TileLayer, {\n      url: \"https://{s}.tile.osm.org/{z}/{x}/{y}.png\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 33\n      }\n    }), mapData.map((city, i) => {\n      return /*#__PURE__*/React.createElement(CircleMarker, {\n        key: i,\n        center: [city.lat, city.long],\n        readius: 20 * Math.log(city.deaths / confirmed),\n        fillOpacity: 0.5,\n        fillColor: \"red\",\n        stroke: false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 37\n        }\n      });\n    })))))), /*#__PURE__*/React.createElement(Container, {\n      fluid: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      className: \"justify-content-md-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      xs: true,\n      lg: \"8\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      className: \"shadow-sm\",\n      style: {\n        marginBottom: '0rem',\n        padding: '1rem',\n        border: 'none'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      className: \"justify-content-md-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Alert, {\n      className: \"shadow\",\n      style: {\n        backgroundColor: colors.confirmed\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(NumberFormat, {\n      value: confirmed,\n      displayType: 'text',\n      thousandSeparator: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 37\n      }\n    })), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 40\n      }\n    }, \"Accomulative\"), /*#__PURE__*/React.createElement(\"i\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 59\n      }\n    }, \" as of today\")))), /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Alert, {\n      className: \"shadow\",\n      style: {\n        backgroundColor: colors.recovered\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(NumberFormat, {\n      value: recovered,\n      displayType: 'text',\n      thousandSeparator: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 37\n      }\n    })), /*#__PURE__*/React.createElement(\"h6\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 41\n      }\n    }, Math.round(recovered / confirmed * 100)), /*#__PURE__*/React.createElement(\"i\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 91\n      }\n    }, \"% Recovery\")))), /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Alert, {\n      className: \"shadow\",\n      style: {\n        backgroundColor: colors.deaths,\n        color: '#FFFFFF'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(NumberFormat, {\n      value: deaths,\n      displayType: 'text',\n      thousandSeparator: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 37\n      }\n    })), /*#__PURE__*/React.createElement(\"h6\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 41\n      }\n    }, Math.round(deaths / confirmed * 100)), /*#__PURE__*/React.createElement(\"i\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 88\n      }\n    }, \"% Deaths\"))))))))), /*#__PURE__*/React.createElement(Container, {\n      fluid: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      className: \"justify-content-md-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      xs: true,\n      lg: \"8\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      className: \"shadow-sm\",\n      style: {\n        marginBottom: '1rem',\n        padding: '1rem',\n        border: 'none'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        marginTop: '1rem'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      style: {\n        textAlign: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 33\n      }\n    }, \"Top 10 Counties - Confirmed Cases Data\")), /*#__PURE__*/React.createElement(BarChart, {\n      width: width > 980 ? 1200 : width - 80,\n      height: 400,\n      data: top10Confirmed,\n      margin: {\n        top: 5,\n        right: 30,\n        left: 0,\n        bottom: 5\n      },\n      layout: \"vertical\",\n      barSize: 15,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(CartesianGrid, {\n      strokeDasharray: \"1 1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(XAxis, {\n      type: \"number\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(YAxis, {\n      dataKey: \"CountryCode\",\n      type: \"category\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(Tooltip, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(Legend, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(Bar, {\n      dataKey: \"TotalConfirmed\",\n      fill: colors.confirmed,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 25\n      }\n    })))))), /*#__PURE__*/React.createElement(Container, {\n      fluid: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      className: \"justify-content-md-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      xs: true,\n      lg: \"8\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      className: \"shadow-sm\",\n      style: {\n        marginBottom: '1rem',\n        padding: '1rem',\n        border: 'none'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        marginTop: '1rem'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      style: {\n        textAlign: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 33\n      }\n    }, \"Top 10 Countries - Recovered Cases Data\")), /*#__PURE__*/React.createElement(BarChart, {\n      width: width > 980 ? 1200 : width - 80,\n      height: 400,\n      data: top10Recovered,\n      margin: {\n        top: 5,\n        right: 30,\n        left: 0,\n        bottom: 5\n      },\n      layout: \"vertical\",\n      barSize: 15,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(CartesianGrid, {\n      strokeDasharray: \"1 1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(XAxis, {\n      type: \"number\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(YAxis, {\n      dataKey: \"CountryCode\",\n      type: \"category\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(Tooltip, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(Legend, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(Bar, {\n      dataKey: \"TotalRecovered\",\n      fill: colors.recovered,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 25\n      }\n    })))))), /*#__PURE__*/React.createElement(Container, {\n      fluid: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      className: \"justify-content-md-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      xs: true,\n      lg: \"8\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      className: \"shadow-sm\",\n      style: {\n        marginBottom: '1rem',\n        padding: '1rem',\n        border: 'none'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        marginTop: '1rem'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      style: {\n        textAlign: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 33\n      }\n    }, \"Top 10 Countries - Death Cases Data\")), /*#__PURE__*/React.createElement(BarChart, {\n      width: width > 980 ? 1200 : width - 80,\n      height: 400,\n      data: top10Deaths,\n      margin: {\n        top: 5,\n        right: 30,\n        left: 0,\n        bottom: 5\n      },\n      layout: \"vertical\",\n      barSize: 15,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(CartesianGrid, {\n      strokeDasharray: \"1 1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(XAxis, {\n      type: \"number\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(YAxis, {\n      dataKey: \"CountryCode\",\n      type: \"category\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(Tooltip, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(Legend, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(Bar, {\n      dataKey: \"TotalDeaths\",\n      fill: colors.deaths,\n      width: 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 25\n      }\n    }))), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 29\n      }\n    }, top10Confirmed.Country, \" has Highest Confirmed Cases.\")))));\n  }\n\n}\n\nexport default LandingPage;","map":{"version":3,"sources":["/Users/shariati/Desktop/Projects/demo2/src/components/landingPage.jsx"],"names":["React","Component","Axios","Map","CircleMarker","TileLayer","Container","Row","Col","Card","Alert","NumberFormat","BarChart","Bar","XAxis","YAxis","CartesianGrid","Tooltip","Legend","colors","confirmed","recovered","deaths","LandingPage","state","mapData","top10Confirmed","top10Recovered","top10Deaths","zoom","minZoom","width","window","innerWidth","document","documentElement","clientWidth","body","updateDimensions","setState","componentDidMount","getData","addEventListener","DataForMapRes","get","DataForMapAccurate","data","filter","row","lat","DataForCasesRes","Global","TotalConfirmed","TotalRecovered","TotalDeaths","confirmedSorted","Countries","sort","a","b","slice","recoveredSorted","deathsSorted","console","log","render","marginBottom","padding","border","map","city","i","long","Math","backgroundColor","round","color","marginTop","textAlign","top","right","left","bottom","Country"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,EAAcC,YAAd,EAA2BC,SAA3B,QAA2C,eAA3C;AACA,SAAQC,SAAR,EAAkBC,GAAlB,EAAsBC,GAAtB,EAA2BC,IAA3B,EAAiCC,KAAjC,QAA6C,iBAA7C;AACA,OAAOC,YAAP,MAAyB,qBAAzB;AACA,SAASC,QAAT,EAAmBC,GAAnB,EAAwBC,KAAxB,EAA8BC,KAA9B,EAAqCC,aAArC,EAAmDC,OAAnD,EAA2DC,MAA3D,QAAwE,UAAxE;AACA,OAAO,0BAAP;AAEA,MAAMC,MAAM,GAAG;AACXC,EAAAA,SAAS,EAAE,SADA;AAEXC,EAAAA,SAAS,EAAE,SAFA;AAGXC,EAAAA,MAAM,EAAE;AAHG,CAAf;;AAKA,MAAMC,WAAN,SAA0BtB,SAA1B,CAAmC;AAAA;AAAA;AAAA,SAC/BuB,KAD+B,GACzB;AACFC,MAAAA,OAAO,EAAC,EADN;AAEFL,MAAAA,SAAS,EAAC,CAFR;AAGFC,MAAAA,SAAS,EAAC,CAHR;AAIFC,MAAAA,MAAM,EAAC,CAJL;AAKFI,MAAAA,cAAc,EAAC,EALb;AAMFC,MAAAA,cAAc,EAAC,EANb;AAOFC,MAAAA,WAAW,EAAC,EAPV;AAQFC,MAAAA,IAAI,EAAC,CARH;AASFC,MAAAA,OAAO,EAAC,CATN;AAUFC,MAAAA,KAAK,EACLC,MAAM,CAACC,UAAP,IACAC,QAAQ,CAACC,eAAT,CAAyBC,WADzB,IAEAF,QAAQ,CAACG,IAAT,CAAcD;AAbZ,KADyB;;AAAA,SAqB7BE,gBArB6B,GAqBV,MAAI;AACrB,YAAMP,KAAK,GACXC,MAAM,CAACC,UAAP,IACAC,QAAQ,CAACC,eAAT,CAAyBC,WADzB,IAEAF,QAAQ,CAACG,IAAT,CAAcD,WAHd;AAKA,WAAKG,QAAL,CAAc;AAACR,QAAAA;AAAD,OAAd;AACH,KA5B8B;AAAA;;AAiB7BS,EAAAA,iBAAiB,GAAE;AACjB,SAAKC,OAAL;AACAT,IAAAA,MAAM,CAACU,gBAAP,CAAwB,QAAxB,EAAiC,KAAKJ,gBAAtC;AACD;;AASD,QAAMG,OAAN,GAAe;AAEf,UAAME,aAAa,GAAC,MAAMzC,KAAK,CAAC0C,GAAN,CAAU,uCAAV,CAA1B;AACA,UAAMC,kBAAkB,GAACF,aAAa,CAACG,IAAd,CAAmBC,MAAnB,CAA0BC,GAAG,IAAGA,GAAG,CAACC,GAAJ,KAAY,IAA5C,CAAzB;AAEA,UAAMC,eAAe,GAAC,MAAMhD,KAAK,CAAC0C,GAAN,CAAU,oCAAV,CAA5B;AAEA,UAAMxB,SAAS,GAAG8B,eAAe,CAACJ,IAAhB,CAAqBK,MAArB,CAA4BC,cAA9C;AACA,UAAM/B,SAAS,GAAG6B,eAAe,CAACJ,IAAhB,CAAqBK,MAArB,CAA4BE,cAA9C;AACA,UAAM/B,MAAM,GAAG4B,eAAe,CAACJ,IAAhB,CAAqBK,MAArB,CAA4BG,WAA3C;AAEA,UAAMC,eAAe,GAACL,eAAe,CAACJ,IAAhB,CAAqBU,SAArB,CAA+BC,IAA/B,CAAoC,UAASC,CAAT,EAAWC,CAAX,EAAa;AACnE,aAAOA,CAAC,CAACP,cAAF,GAAmBM,CAAC,CAACN,cAA5B;AACH,KAFqB,CAAtB;AAGA,UAAM1B,cAAc,GAAG6B,eAAe,CAACK,KAAhB,CAAsB,CAAtB,EAAwB,EAAxB,CAAvB;AAEA,UAAMC,eAAe,GAACX,eAAe,CAACJ,IAAhB,CAAqBU,SAArB,CAA+BC,IAA/B,CAAoC,UAASC,CAAT,EAAWC,CAAX,EAAa;AACnE,aAAOA,CAAC,CAACN,cAAF,GAAmBK,CAAC,CAACL,cAA5B;AACH,KAFqB,CAAtB;AAGA,UAAM1B,cAAc,GAAGkC,eAAe,CAACD,KAAhB,CAAsB,CAAtB,EAAwB,EAAxB,CAAvB;AAEA,UAAME,YAAY,GAACZ,eAAe,CAACJ,IAAhB,CAAqBU,SAArB,CAA+BC,IAA/B,CAAoC,UAASC,CAAT,EAAWC,CAAX,EAAa;AAChE,aAAOA,CAAC,CAACL,WAAF,GAAgBI,CAAC,CAACJ,WAAzB;AACH,KAFkB,CAAnB;AAGA,UAAM1B,WAAW,GAAGkC,YAAY,CAACF,KAAb,CAAmB,CAAnB,EAAqB,EAArB,CAApB;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAYtC,cAAZ;AACA,SAAKa,QAAL,CAAc;AACVd,MAAAA,OAAO,EAACoB,kBADE;AAEVzB,MAAAA,SAFU;AAGVC,MAAAA,SAHU;AAIVC,MAAAA,MAJU;AAKVI,MAAAA,cALU;AAMVC,MAAAA,cANU;AAOVC,MAAAA;AAPU,KAAd;AASC;;AACHqC,EAAAA,MAAM,GAAE;AACJ,UAAM;AACFxC,MAAAA,OADE;AAEFL,MAAAA,SAFE;AAGFC,MAAAA,SAHE;AAIFC,MAAAA,MAJE;AAKFI,MAAAA,cALE;AAMFC,MAAAA,cANE;AAOFC,MAAAA,WAPE;AAQFC,MAAAA,IARE;AASFC,MAAAA,OATE;AAUFC,MAAAA;AAVE,QAWF,KAAKP,KAXT;AAYA,wBACI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,SAAD;AAAW,MAAA,KAAK,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,GAAD;AAAK,MAAA,SAAS,EAAC,2BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAC,IAAR;AAAa,MAAA,EAAE,EAAC,GAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA,oBAAC,IAAD;AAAM,MAAA,SAAS,EAAC,QAAhB;AAAyB,MAAA,KAAK,EAAE;AAAC0C,QAAAA,YAAY,EAAC,MAAd;AAAqBC,QAAAA,OAAO,EAAC,MAA7B;AAAoCC,QAAAA,MAAM,EAAC;AAA3C,OAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,GAAD;AACI,MAAA,KAAK,EAAGrC,KAAK,GAAG,GAAR,GAAc,GAAd,GAAoBA,KAAK,GAAG,EADxC;AAEI,MAAA,IAAI,EAAEA,KAAK,GAAG,GAAR,GAAc,CAAd,GAAkBF,IAF5B;AAGI,MAAA,MAAM,EAAE,CAAC,MAAD,EAAQ,CAAC,IAAT,CAHZ;AAII,MAAA,OAAO,EAAEE,KAAK,GAAG,GAAR,GAAc,CAAd,GAAkBD,OAJ/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAMI,oBAAC,SAAD;AAAW,MAAA,GAAG,EAAC,0CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANJ,EASIL,OAAO,CAAC4C,GAAR,CAAY,CAACC,IAAD,EAAMC,CAAN,KAAY;AACpB,0BACA,oBAAC,YAAD;AACI,QAAA,GAAG,EAAEA,CADT;AAEI,QAAA,MAAM,EAAE,CAACD,IAAI,CAACrB,GAAN,EAAWqB,IAAI,CAACE,IAAhB,CAFZ;AAGI,QAAA,OAAO,EAAE,KAAKC,IAAI,CAACT,GAAL,CAASM,IAAI,CAAChD,MAAL,GAAcF,SAAvB,CAHlB;AAII,QAAA,WAAW,EAAE,GAJjB;AAKI,QAAA,SAAS,EAAE,KALf;AAMI,QAAA,MAAM,EAAE,KANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADA;AAUH,KAXD,CATJ,CADJ,CADA,CADJ,CADJ,CADJ,eAgCI,oBAAC,SAAD;AAAW,MAAA,KAAK,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,GAAD;AAAK,MAAA,SAAS,EAAC,2BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,GAAD;AAAK,MAAA,EAAE,MAAP;AAAQ,MAAA,EAAE,EAAC,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA,oBAAC,IAAD;AAAM,MAAA,SAAS,EAAC,WAAhB;AAA4B,MAAA,KAAK,EAAE;AAAC8C,QAAAA,YAAY,EAAC,MAAd;AAAqBC,QAAAA,OAAO,EAAC,MAA7B;AAAoCC,QAAAA,MAAM,EAAC;AAA3C,OAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,GAAD;AAAK,MAAA,SAAS,EAAC,2BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,KAAD;AAAO,MAAA,SAAS,EAAC,QAAjB;AAA0B,MAAA,KAAK,EAAE;AAACM,QAAAA,eAAe,EAACvD,MAAM,CAACC;AAAxB,OAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA,oBAAC,YAAD;AACI,MAAA,KAAK,EAAEA,SADX;AAEI,MAAA,WAAW,EAAE,MAFjB;AAGI,MAAA,iBAAiB,EAAE,IAHvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,CADA,eAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAH,eAAsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAtB,CARA,CADJ,CADJ,eAaI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,KAAD;AAAO,MAAA,SAAS,EAAC,QAAjB;AAA0B,MAAA,KAAK,EAAE;AAACsD,QAAAA,eAAe,EAACvD,MAAM,CAACE;AAAxB,OAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA,oBAAC,YAAD;AACI,MAAA,KAAK,EAAEA,SADX;AAEI,MAAA,WAAW,EAAE,MAFjB;AAGI,MAAA,iBAAiB,EAAE,IAHvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,CADA,eAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIoD,IAAI,CAACE,KAAL,CAAYtD,SAAS,GAAGD,SAAb,GAA0B,GAArC,CAAJ,CAAJ,eAAsD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAtD,CARA,CADJ,CAbJ,eAyBI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,KAAD;AAAO,MAAA,SAAS,EAAC,QAAjB;AAA0B,MAAA,KAAK,EAAE;AAACsD,QAAAA,eAAe,EAACvD,MAAM,CAACG,MAAxB;AAA+BsD,QAAAA,KAAK,EAAC;AAArC,OAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA,oBAAC,YAAD;AACI,MAAA,KAAK,EAAEtD,MADX;AAEI,MAAA,WAAW,EAAE,MAFjB;AAGI,MAAA,iBAAiB,EAAE,IAHvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,CADA,eAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAImD,IAAI,CAACE,KAAL,CAAYrD,MAAM,GAAGF,SAAV,GAAuB,GAAlC,CAAJ,CAAJ,eAAmD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAnD,CARA,CADJ,CAzBJ,CADJ,CADA,CADJ,CADJ,CAhCJ,eA+EI,oBAAC,SAAD;AAAW,MAAA,KAAK,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,GAAD;AAAK,MAAA,SAAS,EAAC,2BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,GAAD;AAAK,MAAA,EAAE,MAAP;AAAQ,MAAA,EAAE,EAAC,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA,oBAAC,IAAD;AAAM,MAAA,SAAS,EAAC,WAAhB;AAA4B,MAAA,KAAK,EAAE;AAAC8C,QAAAA,YAAY,EAAC,MAAd;AAAqBC,QAAAA,OAAO,EAAC,MAA7B;AAAoCC,QAAAA,MAAM,EAAC;AAA3C,OAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,KAAK,EAAE;AAACS,QAAAA,SAAS,EAAC;AAAX,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAI,MAAA,KAAK,EAAE;AAACC,QAAAA,SAAS,EAAC;AAAX,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gDADJ,CADJ,eAIA,oBAAC,QAAD;AACI,MAAA,KAAK,EAAG/C,KAAK,GAAG,GAAR,GAAc,IAAd,GAAqBA,KAAK,GAAG,EADzC;AAEI,MAAA,MAAM,EAAE,GAFZ;AAGI,MAAA,IAAI,EAAEL,cAHV;AAII,MAAA,MAAM,EAAE;AAACqD,QAAAA,GAAG,EAAE,CAAN;AAASC,QAAAA,KAAK,EAAE,EAAhB;AAAoBC,QAAAA,IAAI,EAAE,CAA1B;AAA6BC,QAAAA,MAAM,EAAE;AAArC,OAJZ;AAKI,MAAA,MAAM,EAAC,UALX;AAMI,MAAA,OAAO,EAAE,EANb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAQA,oBAAC,aAAD;AAAe,MAAA,eAAe,EAAC,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARA,eASA,oBAAC,KAAD;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATA,eAUA,oBAAC,KAAD;AAAO,MAAA,OAAO,EAAC,aAAf;AAA6B,MAAA,IAAI,EAAC,UAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVA,eAWA,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAXA,eAYA,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAZA,eAaA,oBAAC,GAAD;AAAK,MAAA,OAAO,EAAC,gBAAb;AAA8B,MAAA,IAAI,EAAE/D,MAAM,CAACC,SAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAbA,CAJA,CADA,CADJ,CADJ,CA/EJ,eA0GI,oBAAC,SAAD;AAAW,MAAA,KAAK,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,GAAD;AAAK,MAAA,SAAS,EAAC,2BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,GAAD;AAAK,MAAA,EAAE,MAAP;AAAQ,MAAA,EAAE,EAAC,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA,oBAAC,IAAD;AAAM,MAAA,SAAS,EAAC,WAAhB;AAA4B,MAAA,KAAK,EAAE;AAAC8C,QAAAA,YAAY,EAAC,MAAd;AAAqBC,QAAAA,OAAO,EAAC,MAA7B;AAAoCC,QAAAA,MAAM,EAAC;AAA3C,OAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,KAAK,EAAE;AAACS,QAAAA,SAAS,EAAC;AAAX,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAI,MAAA,KAAK,EAAE;AAACC,QAAAA,SAAS,EAAC;AAAX,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iDADJ,CADJ,eAIA,oBAAC,QAAD;AACI,MAAA,KAAK,EAAG/C,KAAK,GAAG,GAAR,GAAc,IAAd,GAAqBA,KAAK,GAAG,EADzC;AAEI,MAAA,MAAM,EAAE,GAFZ;AAGI,MAAA,IAAI,EAAEJ,cAHV;AAII,MAAA,MAAM,EAAE;AAACoD,QAAAA,GAAG,EAAE,CAAN;AAASC,QAAAA,KAAK,EAAE,EAAhB;AAAoBC,QAAAA,IAAI,EAAE,CAA1B;AAA6BC,QAAAA,MAAM,EAAE;AAArC,OAJZ;AAKI,MAAA,MAAM,EAAC,UALX;AAMI,MAAA,OAAO,EAAE,EANb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAQA,oBAAC,aAAD;AAAe,MAAA,eAAe,EAAC,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARA,eASA,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATA,eAUA,oBAAC,KAAD;AAAO,MAAA,OAAO,EAAC,aAAf;AAA6B,MAAA,IAAI,EAAC,UAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVA,eAWA,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAXA,eAYA,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAZA,eAaA,oBAAC,GAAD;AAAK,MAAA,OAAO,EAAC,gBAAb;AAA8B,MAAA,IAAI,EAAE/D,MAAM,CAACE,SAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAbA,CAJA,CADA,CADJ,CADJ,CA1GJ,eAqII,oBAAC,SAAD;AAAW,MAAA,KAAK,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,GAAD;AAAK,MAAA,SAAS,EAAC,2BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,GAAD;AAAK,MAAA,EAAE,MAAP;AAAQ,MAAA,EAAE,EAAC,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA,oBAAC,IAAD;AAAM,MAAA,SAAS,EAAC,WAAhB;AAA4B,MAAA,KAAK,EAAE;AAAC6C,QAAAA,YAAY,EAAC,MAAd;AAAqBC,QAAAA,OAAO,EAAC,MAA7B;AAAoCC,QAAAA,MAAM,EAAC;AAA3C,OAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,KAAK,EAAE;AAACS,QAAAA,SAAS,EAAC;AAAX,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAI,MAAA,KAAK,EAAE;AAACC,QAAAA,SAAS,EAAC;AAAX,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CADJ,CADJ,eAIA,oBAAC,QAAD;AACI,MAAA,KAAK,EAAG/C,KAAK,GAAG,GAAR,GAAc,IAAd,GAAqBA,KAAK,GAAG,EADzC;AAEI,MAAA,MAAM,EAAE,GAFZ;AAGI,MAAA,IAAI,EAAEH,WAHV;AAII,MAAA,MAAM,EAAE;AAACmD,QAAAA,GAAG,EAAE,CAAN;AAASC,QAAAA,KAAK,EAAE,EAAhB;AAAoBC,QAAAA,IAAI,EAAE,CAA1B;AAA6BC,QAAAA,MAAM,EAAE;AAArC,OAJZ;AAKI,MAAA,MAAM,EAAC,UALX;AAMI,MAAA,OAAO,EAAE,EANb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAQA,oBAAC,aAAD;AAAe,MAAA,eAAe,EAAC,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARA,eASA,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATA,eAUA,oBAAC,KAAD;AAAO,MAAA,OAAO,EAAC,aAAf;AAA6B,MAAA,IAAI,EAAC,UAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVA,eAWA,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAXA,eAYA,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAZA,eAaA,oBAAC,GAAD;AAAK,MAAA,OAAO,EAAC,aAAb;AAA2B,MAAA,IAAI,EAAE/D,MAAM,CAACG,MAAxC;AAAgD,MAAA,KAAK,EAAE,CAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAbA,CAJA,CADA,eAqBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAII,cAAc,CAACyD,OAAnB,kCArBJ,CADJ,CADJ,CArIJ,CADJ;AAmKH;;AAjP8B;;AAmPnC,eAAe5D,WAAf","sourcesContent":["import React, { Component } from 'react';\nimport Axios from 'axios';\nimport { Map, CircleMarker,TileLayer} from 'react-leaflet';\nimport {Container,Row,Col, Card, Alert} from 'react-bootstrap';\nimport NumberFormat from 'react-number-format';\nimport { BarChart, Bar, XAxis,YAxis, CartesianGrid,Tooltip,Legend} from 'recharts';\nimport \"leaflet/dist/leaflet.css\";\n\nconst colors = {\n    confirmed: '#FFD31D',\n    recovered: '#21BF72',\n    deaths: '#DD2C00',\n  };\nclass LandingPage extends Component{\n    state={\n        mapData:[],\n        confirmed:0,\n        recovered:0,\n        deaths:0,\n        top10Confirmed:[],\n        top10Recovered:[],\n        top10Deaths:[],\n        zoom:2,\n        minZoom:2,\n        width:\n        window.innerWidth ||\n        document.documentElement.clientWidth ||\n        document.body.clientWidth\n      }\n    \n      componentDidMount(){\n        this.getData();\n        window.addEventListener('resize',this.updateDimensions);\n      }\n      updateDimensions = ()=>{\n        const width = \n        window.innerWidth ||\n        document.documentElement.clientWidth ||\n        document.body.clientWidth;\n\n        this.setState({width});\n    }\n      async getData(){\n        \n      const DataForMapRes=await Axios.get(\"https://covid19.mathdro.id/api/deaths\");\n      const DataForMapAccurate=DataForMapRes.data.filter(row=> row.lat !== null);\n\n      const DataForCasesRes=await Axios.get(\"https://api.covid19api.com/summary\");\n      \n      const confirmed = DataForCasesRes.data.Global.TotalConfirmed;\n      const recovered = DataForCasesRes.data.Global.TotalRecovered;\n      const deaths = DataForCasesRes.data.Global.TotalDeaths;\n\n      const confirmedSorted=DataForCasesRes.data.Countries.sort(function(a,b){\n          return b.TotalConfirmed - a.TotalConfirmed;\n      });\n      const top10Confirmed = confirmedSorted.slice(0,10);\n\n      const recoveredSorted=DataForCasesRes.data.Countries.sort(function(a,b){\n          return b.TotalRecovered - a.TotalRecovered;\n      });\n      const top10Recovered = recoveredSorted.slice(0,10);\n      \n      const deathsSorted=DataForCasesRes.data.Countries.sort(function(a,b){\n          return b.TotalDeaths - a.TotalDeaths;\n      });\n      const top10Deaths = deathsSorted.slice(0,10);\n      console.log(top10Confirmed);\n      this.setState({\n          mapData:DataForMapAccurate,\n          confirmed,\n          recovered,\n          deaths,\n          top10Confirmed,\n          top10Recovered,\n          top10Deaths\n      })\n      }\n    render(){\n        const {\n            mapData,\n            confirmed,\n            recovered,\n            deaths,\n            top10Confirmed,\n            top10Recovered,\n            top10Deaths,\n            zoom,\n            minZoom,\n            width\n        } = this.state;\n        return(\n            <div className=\"mid\">\n                <Container fluid>\n                    <Row className=\"justify-content-md-center\">\n                        <Col xs=\"12\" lg=\"8\">\n                        <Card className=\"shadow\" style={{marginBottom:'1rem',padding:'1rem',border:'none'}}>\n                            <Map\n                                width={ width > 980 ? 960 : width - 80 }\n                                zoom={width < 980 ? 1 : zoom}\n                                center={[20.505,-0.09]}\n                                minZoom={width < 980 ? 1 : minZoom}\n                                >\n                                <TileLayer url=\"https://{s}.tile.osm.org/{z}/{x}/{y}.png\" />\n                                \n                                {\n                                mapData.map((city,i) => {\n                                    return (\n                                    <CircleMarker \n                                        key={i} \n                                        center={[city.lat, city.long]} \n                                        readius={20 * Math.log(city.deaths / confirmed)}\n                                        fillOpacity={0.5}\n                                        fillColor={\"red\"}\n                                        stroke={false}\n                                    />\n                                    )\n                                })\n                                }\n                            </Map>\n                        </Card>     \n                        </Col>\n                    </Row>\n                </Container>\n                <Container fluid>\n                    <Row className=\"justify-content-md-center\">\n                        <Col xs lg=\"8\">\n                        <Card className=\"shadow-sm\" style={{marginBottom:'0rem',padding:'1rem',border:'none'}}>\n                            <Row className=\"justify-content-md-center\">\n                                <Col>\n                                    <Alert className=\"shadow\" style={{backgroundColor:colors.confirmed}}>\n                                    <h4>\n                                    <NumberFormat \n                                        value={confirmed} \n                                        displayType={'text'} \n                                        thousandSeparator={true} \n                                    />  \n                                    </h4>  \n                                    <p><b>Accomulative</b><i> as of today</i></p> \n                                    </Alert>\n                                </Col>\n                                <Col>\n                                    <Alert className=\"shadow\" style={{backgroundColor:colors.recovered}}>\n                                    <h4>\n                                    <NumberFormat \n                                        value={recovered} \n                                        displayType={'text'} \n                                        thousandSeparator={true} \n                                    />\n                                    </h4>\n                                    <h6><b>{Math.round((recovered / confirmed) * 100)}</b><i>% Recovery</i></h6>  \n                                    </Alert>\n                                </Col>\n                                <Col>\n                                    <Alert className=\"shadow\" style={{backgroundColor:colors.deaths,color:'#FFFFFF'}}>\n                                    <h4>\n                                    <NumberFormat \n                                        value={deaths} \n                                        displayType={'text'} \n                                        thousandSeparator={true} \n                                    />\n                                    </h4>\n                                    <h6><b>{Math.round((deaths / confirmed) * 100)}</b><i>% Deaths</i></h6>   \n                                    </Alert>\n                                </Col>\n                            </Row>\n                        </Card>     \n                        </Col>\n                    </Row>\n                </Container>\n\n                <Container fluid>\n                    <Row className=\"justify-content-md-center\">\n                        <Col xs lg=\"8\">\n                        <Card className=\"shadow-sm\" style={{marginBottom:'1rem',padding:'1rem',border:'none'}}>\n                            <div style={{marginTop:'1rem'}}>\n                                <h5 style={{textAlign:'center'}}>Top 10 Counties - Confirmed Cases Data</h5>\n                            </div>\n                        <BarChart \n                            width={ width > 980 ? 1200 : width - 80 } \n                            height={400} \n                            data={top10Confirmed}\n                            margin={{top: 5, right: 30, left: 0, bottom: 5}}\n                            layout=\"vertical\"\n                            barSize={15}\n                        >\n                        <CartesianGrid strokeDasharray=\"1 1\"/>\n                        <XAxis  type=\"number\"/>\n                        <YAxis dataKey=\"CountryCode\" type=\"category\" />\n                        <Tooltip />\n                        <Legend  />\n                        <Bar dataKey=\"TotalConfirmed\" fill={colors.confirmed} />\n                        </BarChart>\n                        </Card>     \n                        </Col>\n                    </Row>\n                </Container>\n\n                <Container fluid>\n                    <Row className=\"justify-content-md-center\">\n                        <Col xs lg=\"8\">\n                        <Card className=\"shadow-sm\" style={{marginBottom:'1rem',padding:'1rem',border:'none'}}>\n                            <div style={{marginTop:'1rem'}}>\n                                <h5 style={{textAlign:'center'}}>Top 10 Countries - Recovered Cases Data</h5>\n                            </div>\n                        <BarChart \n                            width={ width > 980 ? 1200 : width - 80 }  \n                            height={400} \n                            data={top10Recovered}\n                            margin={{top: 5, right: 30, left: 0, bottom: 5}}\n                            layout=\"vertical\"\n                            barSize={15}\n                        >\n                        <CartesianGrid strokeDasharray=\"1 1\"/>\n                        <XAxis type=\"number\"/>\n                        <YAxis dataKey=\"CountryCode\" type=\"category\"/>\n                        <Tooltip/>\n                        <Legend />\n                        <Bar dataKey=\"TotalRecovered\" fill={colors.recovered} />\n                        </BarChart>\n                        </Card>     \n                        </Col>\n                    </Row>\n                </Container>\n\n                <Container fluid>\n                    <Row className=\"justify-content-md-center\">\n                        <Col xs lg=\"8\">\n                        <Card className=\"shadow-sm\" style={{marginBottom:'1rem',padding:'1rem',border:'none'}}>\n                            <div style={{marginTop:'1rem'}}>\n                                <h5 style={{textAlign:'center'}}>Top 10 Countries - Death Cases Data</h5>\n                            </div>\n                        <BarChart \n                            width={ width > 980 ? 1200 : width - 80 }  \n                            height={400} \n                            data={top10Deaths}\n                            margin={{top: 5, right: 30, left: 0, bottom: 5}}\n                            layout=\"vertical\"\n                            barSize={15}\n                        >\n                        <CartesianGrid strokeDasharray=\"1 1\"/>\n                        <XAxis type=\"number\"/>\n                        <YAxis dataKey=\"CountryCode\" type=\"category\"/>\n                        <Tooltip/>\n                        <Legend />\n                        <Bar dataKey=\"TotalDeaths\" fill={colors.deaths} width={1} />\n                        </BarChart>\n                        </Card>\n                            <p>{top10Confirmed.Country} has Highest Confirmed Cases.</p>     \n                        </Col>\n                    </Row>\n                </Container>\n            </div>\n        )\n    }\n}\nexport default LandingPage;"]},"metadata":{},"sourceType":"module"}