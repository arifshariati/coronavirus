{"ast":null,"code":"var _jsxFileName = \"/Users/shariati/Desktop/Projects/demo/src/App.js\";\nimport React, { Component } from 'react';\nimport Axios from 'axios';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from 'recharts';\nimport './App.css';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      countries: []\n    };\n    this.temp = [\"China\", \"Turkey\", \"US\"];\n    this.getCountry = this.getCountry.bind(this);\n  }\n\n  componentDidMount() {\n    this.getData();\n  }\n\n  async getData() {\n    const res = await Axios.get(\"https://pomber.github.io/covid19/timeseries.json\");\n    this.setState({\n      countries: res.data.Iran\n    });\n    console.log(this.state.total);\n  }\n\n  async getCountry(event) {\n    event.persist();\n    const countryRes = await Axios.get(\"https://pomber.github.io/covid19/timeseries.json\");\n    const searchCountry = event.target.value;\n    console.log(countryRes.data.Iran);\n    {\n      /*\n      this.setState({\n       countries:countryRes.data.searchCountry\n      })*/\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }\n    }, \"Hi\"), this.state.countries.map((list, i) => /*#__PURE__*/React.createElement(\"li\", {\n      key: i,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }\n    }, list.date, \" deaths: \", list.deaths)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"options\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"select\", {\n      className: \"countrySelect\",\n      onChange: this.getCountry,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }\n    }, this.temp.map((items, i) => /*#__PURE__*/React.createElement(\"option\", {\n      key: i,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 15\n      }\n    }, items)))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"chart\",\n      style: {\n        width: \"100%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }\n    }, \"I am here\"), /*#__PURE__*/React.createElement(LineChart, {\n      width: 1200,\n      height: 600,\n      data: this.state.countries,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(CartesianGrid, {\n      strokeDasharray: \"1 1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(XAxis, {\n      dataKey: \"date\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(YAxis, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Tooltip, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Legend, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Line, {\n      type: \"monotone\",\n      dataKey: \"confirmed\",\n      dot: false,\n      points: 1,\n      stroke: \"#1B262C\",\n      strokeWidth: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Line, {\n      type: \"monotone\",\n      dataKey: \"recovered\",\n      dot: false,\n      points: 1,\n      stroke: \"#323Edd\",\n      strokeWidth: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Line, {\n      type: \"monotone\",\n      dataKey: \"deaths\",\n      dot: false,\n      points: 1,\n      stroke: \"#C81912\",\n      strokeWidth: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }\n    }))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/shariati/Desktop/Projects/demo/src/App.js"],"names":["React","Component","Axios","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","Legend","App","constructor","props","state","countries","temp","getCountry","bind","componentDidMount","getData","res","get","setState","data","Iran","console","log","total","event","persist","countryRes","searchCountry","target","value","render","map","list","i","date","deaths","items","width"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Axios from 'axios';\nimport { LineChart, Line, XAxis,YAxis, CartesianGrid,Tooltip,Legend} from 'recharts';\nimport './App.css';\n\nclass App extends Component {\n  constructor (props){\n    super(props);\n    this.getCountry=this.getCountry.bind(this);\n  }\n  state={\n    countries:[]\n  }\n  temp=[\n    \"China\",\"Turkey\",\"US\"\n  ]\n  componentDidMount(){\n    this.getData();\n  }\n  async getData(){\n    const res=await Axios.get(\"https://pomber.github.io/covid19/timeseries.json\");\n    \n    this.setState({\n      countries:res.data.Iran\n    })\n    console.log(this.state.total);\n  }\n  async getCountry(event){\n    event.persist();\n    const countryRes=await Axios.get(\"https://pomber.github.io/covid19/timeseries.json\");\n    const searchCountry=event.target.value;\n    console.log(countryRes.data.Iran);\n    {/*\n    this.setState({\n      countries:countryRes.data.searchCountry\n    })*/}\n  }\n  render(){\n    return (\n      <div className=\"App\">\n        <h1>Hi</h1>\n        {\n          this.state.countries.map((list,i)=>\n        <li key={i}>{list.date} deaths: {list.deaths}</li>\n          )\n        }\n        <div className=\"options\">\n          <select className=\"countrySelect\" onChange={this.getCountry}>\n            {\n              this.temp.map((items,i)=>\n              <option key={i}>{items}</option>  \n              )\n            }\n          </select>\n        </div>\n        <div className=\"chart\" style={{width:\"100%\"}}>\n          <p>I am here</p>\n            <LineChart width={1200} height={600} data={this.state.countries}>\n            <CartesianGrid strokeDasharray=\"1 1\" />\n            <XAxis dataKey=\"date\" />\n            <YAxis />\n            <Tooltip />\n            <Legend />\n            <Line type=\"monotone\" dataKey=\"confirmed\" dot={false} points={1} stroke=\"#1B262C\" strokeWidth={2} />\n            <Line type=\"monotone\" dataKey=\"recovered\" dot={false} points={1} stroke=\"#323Edd\" strokeWidth={2} />\n            <Line type=\"monotone\" dataKey=\"deaths\" dot={false} points={1} stroke=\"#C81912\" strokeWidth={2} />\n            </LineChart>\n          \n        </div>\n      </div>\n\n      )\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}