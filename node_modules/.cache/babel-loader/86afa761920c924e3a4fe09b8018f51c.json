{"ast":null,"code":"import _regeneratorRuntime from\"/Users/shariati/Desktop/Projects/demo2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/shariati/Desktop/Projects/demo2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _classCallCheck from\"/Users/shariati/Desktop/Projects/demo2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/shariati/Desktop/Projects/demo2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _createSuper from\"/Users/shariati/Desktop/Projects/demo2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import _inherits from\"/Users/shariati/Desktop/Projects/demo2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import React,{Component}from'react';import Axios from'axios';import{Map,CircleMarker,TileLayer}from'react-leaflet';import{Container,Row,Col,Card,Alert}from'react-bootstrap';import NumberFormat from'react-number-format';import{BarChart,Bar,XAxis,YAxis,CartesianGrid,Tooltip,Legend}from'recharts';import\"leaflet/dist/leaflet.css\";import Loader from'react-loader-spinner';var colors={confirmed:'#FFD31D',recovered:'#21BF72',deaths:'#DD2C00'};var LandingPage=/*#__PURE__*/function(_Component){_inherits(LandingPage,_Component);var _super=_createSuper(LandingPage);function LandingPage(){var _this;_classCallCheck(this,LandingPage);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={mapData:[],confirmed:0,recovered:0,deaths:0,top10Confirmed:[],top10Recovered:[],top10Deaths:[],zoom:2,minZoom:2,width:window.innerWidth||document.documentElement.clientWidth||document.body.clientWidth};_this.updateDimensions=function(){var width=window.innerWidth||document.documentElement.clientWidth||document.body.clientWidth;_this.setState({width:width});};return _this;}_createClass(LandingPage,[{key:\"componentDidMount\",value:function componentDidMount(){this.getData();window.addEventListener('resize',this.updateDimensions);}},{key:\"getData\",value:function(){var _getData=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var DataForMapRes,DataForMapAccurate,DataForCasesRes,confirmed,recovered,deaths,confirmedSorted,top10Confirmed,recoveredSorted,top10Recovered,deathsSorted,top10Deaths;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return Axios.get(\"https://covid19.mathdro.id/api/deaths\");case 2:DataForMapRes=_context.sent;DataForMapAccurate=DataForMapRes.data.filter(function(row){return row.lat!==null;});_context.next=6;return Axios.get(\"https://api.covid19api.com/summary\");case 6:DataForCasesRes=_context.sent;confirmed=DataForCasesRes.data.Global.TotalConfirmed;recovered=DataForCasesRes.data.Global.TotalRecovered;deaths=DataForCasesRes.data.Global.TotalDeaths;confirmedSorted=DataForCasesRes.data.Countries.sort(function(a,b){return b.TotalConfirmed-a.TotalConfirmed;});top10Confirmed=confirmedSorted.slice(0,10);recoveredSorted=DataForCasesRes.data.Countries.sort(function(a,b){return b.TotalRecovered-a.TotalRecovered;});top10Recovered=recoveredSorted.slice(0,10);deathsSorted=DataForCasesRes.data.Countries.sort(function(a,b){return b.TotalDeaths-a.TotalDeaths;});top10Deaths=deathsSorted.slice(0,10);this.setState({mapData:DataForMapAccurate,confirmed:confirmed,recovered:recovered,deaths:deaths,top10Confirmed:top10Confirmed,top10Recovered:top10Recovered,top10Deaths:top10Deaths});case 17:case\"end\":return _context.stop();}}},_callee,this);}));function getData(){return _getData.apply(this,arguments);}return getData;}()},{key:\"render\",value:function render(){var _this$state=this.state,mapData=_this$state.mapData,confirmed=_this$state.confirmed,recovered=_this$state.recovered,deaths=_this$state.deaths,top10Confirmed=_this$state.top10Confirmed,top10Recovered=_this$state.top10Recovered,top10Deaths=_this$state.top10Deaths,zoom=_this$state.zoom,minZoom=_this$state.minZoom,width=_this$state.width;if(!confirmed)return/*#__PURE__*/React.createElement(Container,{fluid:true},/*#__PURE__*/React.createElement(Row,{className:\"justify-content-md-center\"},/*#__PURE__*/React.createElement(Col,{xs:\"12\",lg:\"8\"},/*#__PURE__*/React.createElement(Card,{className:\"shadow\",style:{marginBottom:'1rem',paddingTop:'5rem',border:'none',minHeight:\"700px\"}},/*#__PURE__*/React.createElement(Loader,{type:\"Rings\",color:\"#DD2C00\",height:500,width:500,timeout:90000})))));return/*#__PURE__*/React.createElement(\"div\",{className:\"mid\"},/*#__PURE__*/React.createElement(Container,{fluid:true},/*#__PURE__*/React.createElement(Row,{className:\"justify-content-md-center\"},/*#__PURE__*/React.createElement(Col,{xs:\"12\",lg:\"8\"},/*#__PURE__*/React.createElement(Card,{className:\"shadow\",style:{marginBottom:'1rem',padding:'1rem',border:'none'}},/*#__PURE__*/React.createElement(Map,{width:width>980?960:width-80,zoom:width<980?1:zoom,center:[20.505,-0.09],minZoom:width<980?1:minZoom},/*#__PURE__*/React.createElement(TileLayer,{url:\"https://{s}.tile.osm.org/{z}/{x}/{y}.png\"}),mapData.map(function(city,i){return/*#__PURE__*/React.createElement(CircleMarker,{key:i,center:[city.lat,city.long],readius:20*Math.log(city.deaths/confirmed),fillOpacity:0.5,fillColor:\"red\",stroke:false});})))))),/*#__PURE__*/React.createElement(Container,{fluid:true},/*#__PURE__*/React.createElement(Row,{className:\"justify-content-md-center\"},/*#__PURE__*/React.createElement(Col,{xs:true,lg:\"8\"},/*#__PURE__*/React.createElement(Card,{className:\"shadow-sm\",style:{marginBottom:'0rem',padding:'1rem',border:'none'}},/*#__PURE__*/React.createElement(Row,{className:\"justify-content-md-center\"},/*#__PURE__*/React.createElement(Col,null,/*#__PURE__*/React.createElement(Alert,{className:\"shadow\",style:{backgroundColor:colors.confirmed}},/*#__PURE__*/React.createElement(\"h4\",null,/*#__PURE__*/React.createElement(NumberFormat,{value:confirmed,displayType:'text',thousandSeparator:true})),/*#__PURE__*/React.createElement(\"p\",null,/*#__PURE__*/React.createElement(\"b\",null,\"Accomulative\"),/*#__PURE__*/React.createElement(\"i\",null,\" as of today\")))),/*#__PURE__*/React.createElement(Col,null,/*#__PURE__*/React.createElement(Alert,{className:\"shadow\",style:{backgroundColor:colors.recovered}},/*#__PURE__*/React.createElement(\"h4\",null,/*#__PURE__*/React.createElement(NumberFormat,{value:recovered,displayType:'text',thousandSeparator:true})),/*#__PURE__*/React.createElement(\"h6\",null,/*#__PURE__*/React.createElement(\"b\",null,Math.round(recovered/confirmed*100)),/*#__PURE__*/React.createElement(\"i\",null,\"% Recovery\")))),/*#__PURE__*/React.createElement(Col,null,/*#__PURE__*/React.createElement(Alert,{className:\"shadow\",style:{backgroundColor:colors.deaths,color:'#FFFFFF'}},/*#__PURE__*/React.createElement(\"h4\",null,/*#__PURE__*/React.createElement(NumberFormat,{value:deaths,displayType:'text',thousandSeparator:true})),/*#__PURE__*/React.createElement(\"h6\",null,/*#__PURE__*/React.createElement(\"b\",null,Math.round(deaths/confirmed*100)),/*#__PURE__*/React.createElement(\"i\",null,\"% Deaths\"))))))))),/*#__PURE__*/React.createElement(Container,{fluid:true},/*#__PURE__*/React.createElement(Row,{className:\"justify-content-md-center\"},/*#__PURE__*/React.createElement(Col,{xs:true,lg:\"8\"},/*#__PURE__*/React.createElement(Card,{className:\"shadow-sm\",style:{marginBottom:'1rem',padding:'1rem',border:'none'}},/*#__PURE__*/React.createElement(\"div\",{style:{marginTop:'1rem'}},/*#__PURE__*/React.createElement(\"h5\",{style:{textAlign:'center'}},\"Top 10 Counties - Confirmed Cases Data\")),/*#__PURE__*/React.createElement(BarChart,{width:width>980?1200:width-80,height:400,data:top10Confirmed,margin:{top:5,right:30,left:0,bottom:5},layout:\"vertical\",barSize:15},/*#__PURE__*/React.createElement(CartesianGrid,{strokeDasharray:\"1 1\"}),/*#__PURE__*/React.createElement(XAxis,{type:\"number\"}),/*#__PURE__*/React.createElement(YAxis,{dataKey:\"CountryCode\",type:\"category\"}),/*#__PURE__*/React.createElement(Tooltip,null),/*#__PURE__*/React.createElement(Legend,null),/*#__PURE__*/React.createElement(Bar,{dataKey:\"TotalConfirmed\",fill:colors.confirmed})))))),/*#__PURE__*/React.createElement(Container,{fluid:true},/*#__PURE__*/React.createElement(Row,{className:\"justify-content-md-center\"},/*#__PURE__*/React.createElement(Col,{xs:true,lg:\"8\"},/*#__PURE__*/React.createElement(Card,{className:\"shadow-sm\",style:{marginBottom:'1rem',padding:'1rem',border:'none'}},/*#__PURE__*/React.createElement(\"div\",{style:{marginTop:'1rem'}},/*#__PURE__*/React.createElement(\"h5\",{style:{textAlign:'center'}},\"Top 10 Countries - Recovered Cases Data\")),/*#__PURE__*/React.createElement(BarChart,{width:width>980?1200:width-80,height:400,data:top10Recovered,margin:{top:5,right:30,left:0,bottom:5},layout:\"vertical\",barSize:15},/*#__PURE__*/React.createElement(CartesianGrid,{strokeDasharray:\"1 1\"}),/*#__PURE__*/React.createElement(XAxis,{type:\"number\"}),/*#__PURE__*/React.createElement(YAxis,{dataKey:\"CountryCode\",type:\"category\"}),/*#__PURE__*/React.createElement(Tooltip,null),/*#__PURE__*/React.createElement(Legend,null),/*#__PURE__*/React.createElement(Bar,{dataKey:\"TotalRecovered\",fill:colors.recovered})))))),/*#__PURE__*/React.createElement(Container,{fluid:true},/*#__PURE__*/React.createElement(Row,{className:\"justify-content-md-center\"},/*#__PURE__*/React.createElement(Col,{xs:true,lg:\"8\"},/*#__PURE__*/React.createElement(Card,{className:\"shadow-sm\",style:{marginBottom:'1rem',padding:'1rem',border:'none'}},/*#__PURE__*/React.createElement(\"div\",{style:{marginTop:'1rem'}},/*#__PURE__*/React.createElement(\"h5\",{style:{textAlign:'center'}},\"Top 10 Countries - Death Cases Data\")),/*#__PURE__*/React.createElement(BarChart,{width:width>980?1200:width-80,height:400,data:top10Deaths,margin:{top:5,right:30,left:0,bottom:5},layout:\"vertical\",barSize:15},/*#__PURE__*/React.createElement(CartesianGrid,{strokeDasharray:\"1 1\"}),/*#__PURE__*/React.createElement(XAxis,{type:\"number\"}),/*#__PURE__*/React.createElement(YAxis,{dataKey:\"CountryCode\",type:\"category\"}),/*#__PURE__*/React.createElement(Tooltip,null),/*#__PURE__*/React.createElement(Legend,null),/*#__PURE__*/React.createElement(Bar,{dataKey:\"TotalDeaths\",fill:colors.deaths,width:1})))))));}}]);return LandingPage;}(Component);export default LandingPage;","map":{"version":3,"sources":["/Users/shariati/Desktop/Projects/demo2/src/components/landingPage.jsx"],"names":["React","Component","Axios","Map","CircleMarker","TileLayer","Container","Row","Col","Card","Alert","NumberFormat","BarChart","Bar","XAxis","YAxis","CartesianGrid","Tooltip","Legend","Loader","colors","confirmed","recovered","deaths","LandingPage","state","mapData","top10Confirmed","top10Recovered","top10Deaths","zoom","minZoom","width","window","innerWidth","document","documentElement","clientWidth","body","updateDimensions","setState","getData","addEventListener","get","DataForMapRes","DataForMapAccurate","data","filter","row","lat","DataForCasesRes","Global","TotalConfirmed","TotalRecovered","TotalDeaths","confirmedSorted","Countries","sort","a","b","slice","recoveredSorted","deathsSorted","marginBottom","paddingTop","border","minHeight","padding","map","city","i","long","Math","log","backgroundColor","round","color","marginTop","textAlign","top","right","left","bottom"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Axios from 'axios';\nimport { Map, CircleMarker,TileLayer} from 'react-leaflet';\nimport {Container,Row,Col, Card, Alert} from 'react-bootstrap';\nimport NumberFormat from 'react-number-format';\nimport { BarChart, Bar, XAxis,YAxis, CartesianGrid,Tooltip,Legend} from 'recharts';\nimport \"leaflet/dist/leaflet.css\";\nimport Loader from 'react-loader-spinner';\n\nconst colors = {\n    confirmed: '#FFD31D',\n    recovered: '#21BF72',\n    deaths: '#DD2C00',\n  };\nclass LandingPage extends Component{\n    state={\n        mapData:[],\n        confirmed:0,\n        recovered:0,\n        deaths:0,\n        top10Confirmed:[],\n        top10Recovered:[],\n        top10Deaths:[],\n        zoom:2,\n        minZoom:2,\n        width:\n        window.innerWidth ||\n        document.documentElement.clientWidth ||\n        document.body.clientWidth\n      }\n    \n      componentDidMount(){\n        this.getData();\n        window.addEventListener('resize',this.updateDimensions);\n      }\n      updateDimensions = ()=>{\n        const width = \n        window.innerWidth ||\n        document.documentElement.clientWidth ||\n        document.body.clientWidth;\n\n        this.setState({width});\n    }\n      async getData(){\n        \n      const DataForMapRes=await Axios.get(\"https://covid19.mathdro.id/api/deaths\");\n      const DataForMapAccurate=DataForMapRes.data.filter(row=> row.lat !== null);\n\n      const DataForCasesRes=await Axios.get(\"https://api.covid19api.com/summary\");\n      \n      const confirmed = DataForCasesRes.data.Global.TotalConfirmed;\n      const recovered = DataForCasesRes.data.Global.TotalRecovered;\n      const deaths = DataForCasesRes.data.Global.TotalDeaths;\n\n      const confirmedSorted=DataForCasesRes.data.Countries.sort(function(a,b){\n          return b.TotalConfirmed - a.TotalConfirmed;\n      });\n      const top10Confirmed = confirmedSorted.slice(0,10);\n\n      const recoveredSorted=DataForCasesRes.data.Countries.sort(function(a,b){\n          return b.TotalRecovered - a.TotalRecovered;\n      });\n      const top10Recovered = recoveredSorted.slice(0,10);\n      \n      const deathsSorted=DataForCasesRes.data.Countries.sort(function(a,b){\n          return b.TotalDeaths - a.TotalDeaths;\n      });\n      const top10Deaths = deathsSorted.slice(0,10);\n      this.setState({\n          mapData:DataForMapAccurate,\n          confirmed,\n          recovered,\n          deaths,\n          top10Confirmed,\n          top10Recovered,\n          top10Deaths\n      })\n      }\n    render(){\n        const {\n            mapData,\n            confirmed,\n            recovered,\n            deaths,\n            top10Confirmed,\n            top10Recovered,\n            top10Deaths,\n            zoom,\n            minZoom,\n            width\n        } = this.state;\n\n        if(!confirmed) return (\n                <Container fluid>\n                    <Row className=\"justify-content-md-center\">\n                        <Col xs=\"12\" lg=\"8\">\n                        <Card \n                            className=\"shadow\" \n                            style={{marginBottom:'1rem',paddingTop:'5rem',border:'none',minHeight:\"700px\"}}\n                        >\n                            <Loader \n                                type=\"Rings\"\n                                color=\"#DD2C00\"\n                                height={500}\n                                width={500}\n                                timeout={90000}\n                            />\n                        </Card>     \n                        </Col>\n                    </Row>\n                </Container>\n            );\n\n        return(\n            <div className=\"mid\">\n                <Container fluid>\n                    <Row className=\"justify-content-md-center\">\n                        <Col xs=\"12\" lg=\"8\">\n                        <Card className=\"shadow\" style={{marginBottom:'1rem',padding:'1rem',border:'none'}}>\n                            <Map\n                                width={ width > 980 ? 960 : width - 80 }\n                                zoom={width < 980 ? 1 : zoom}\n                                center={[20.505,-0.09]}\n                                minZoom={width < 980 ? 1 : minZoom}\n                                >\n                                <TileLayer url=\"https://{s}.tile.osm.org/{z}/{x}/{y}.png\" />\n                                \n                                {\n                                mapData.map((city,i) => {\n                                    return (\n                                    <CircleMarker \n                                        key={i} \n                                        center={[city.lat, city.long]} \n                                        readius={20 * Math.log(city.deaths / confirmed)}\n                                        fillOpacity={0.5}\n                                        fillColor={\"red\"}\n                                        stroke={false}\n                                    />\n                                    )\n                                })\n                                }\n                            </Map>\n                        </Card>     \n                        </Col>\n                    </Row>\n                </Container>\n                <Container fluid>\n                    <Row className=\"justify-content-md-center\">\n                        <Col xs lg=\"8\">\n                        <Card className=\"shadow-sm\" style={{marginBottom:'0rem',padding:'1rem',border:'none'}}>\n                            <Row className=\"justify-content-md-center\">\n                                <Col>\n                                    <Alert className=\"shadow\" style={{backgroundColor:colors.confirmed}}>\n                                    <h4>\n                                    <NumberFormat \n                                        value={confirmed} \n                                        displayType={'text'} \n                                        thousandSeparator={true} \n                                    />  \n                                    </h4>  \n                                    <p><b>Accomulative</b><i> as of today</i></p> \n                                    </Alert>\n                                </Col>\n                                <Col>\n                                    <Alert className=\"shadow\" style={{backgroundColor:colors.recovered}}>\n                                    <h4>\n                                    <NumberFormat \n                                        value={recovered} \n                                        displayType={'text'} \n                                        thousandSeparator={true} \n                                    />\n                                    </h4>\n                                    <h6><b>{Math.round((recovered / confirmed) * 100)}</b><i>% Recovery</i></h6>  \n                                    </Alert>\n                                </Col>\n                                <Col>\n                                    <Alert className=\"shadow\" style={{backgroundColor:colors.deaths,color:'#FFFFFF'}}>\n                                    <h4>\n                                    <NumberFormat \n                                        value={deaths} \n                                        displayType={'text'} \n                                        thousandSeparator={true} \n                                    />\n                                    </h4>\n                                    <h6><b>{Math.round((deaths / confirmed) * 100)}</b><i>% Deaths</i></h6>   \n                                    </Alert>\n                                </Col>\n                            </Row>\n                        </Card>     \n                        </Col>\n                    </Row>\n                </Container>\n\n                <Container fluid>\n                    <Row className=\"justify-content-md-center\">\n                        <Col xs lg=\"8\">\n                        <Card className=\"shadow-sm\" style={{marginBottom:'1rem',padding:'1rem',border:'none'}}>\n                            <div style={{marginTop:'1rem'}}>\n                                <h5 style={{textAlign:'center'}}>Top 10 Counties - Confirmed Cases Data</h5>\n                            </div>\n                        <BarChart \n                            width={ width > 980 ? 1200 : width - 80 } \n                            height={400} \n                            data={top10Confirmed}\n                            margin={{top: 5, right: 30, left: 0, bottom: 5}}\n                            layout=\"vertical\"\n                            barSize={15}\n                        >\n                        <CartesianGrid strokeDasharray=\"1 1\"/>\n                        <XAxis  type=\"number\"/>\n                        <YAxis dataKey=\"CountryCode\" type=\"category\" />\n                        <Tooltip />\n                        <Legend  />\n                        <Bar dataKey=\"TotalConfirmed\" fill={colors.confirmed} />\n                        </BarChart> \n                        </Card>     \n                        </Col>\n                    </Row>\n                </Container>\n\n                <Container fluid>\n                    <Row className=\"justify-content-md-center\">\n                        <Col xs lg=\"8\">\n                        <Card className=\"shadow-sm\" style={{marginBottom:'1rem',padding:'1rem',border:'none'}}>\n                            <div style={{marginTop:'1rem'}}>\n                                <h5 style={{textAlign:'center'}}>Top 10 Countries - Recovered Cases Data</h5>\n                            </div>\n                        <BarChart \n                            width={ width > 980 ? 1200 : width - 80 }  \n                            height={400} \n                            data={top10Recovered}\n                            margin={{top: 5, right: 30, left: 0, bottom: 5}}\n                            layout=\"vertical\"\n                            barSize={15}\n                        >\n                        <CartesianGrid strokeDasharray=\"1 1\"/>\n                        <XAxis type=\"number\"/>\n                        <YAxis dataKey=\"CountryCode\" type=\"category\"/>\n                        <Tooltip/>\n                        <Legend />\n                        <Bar dataKey=\"TotalRecovered\" fill={colors.recovered} />\n                        </BarChart>\n                        </Card>     \n                        </Col>\n                    </Row>\n                </Container>\n\n                <Container fluid>\n                    <Row className=\"justify-content-md-center\">\n                        <Col xs lg=\"8\">\n                        <Card className=\"shadow-sm\" style={{marginBottom:'1rem',padding:'1rem',border:'none'}}>\n                            <div style={{marginTop:'1rem'}}>\n                                <h5 style={{textAlign:'center'}}>Top 10 Countries - Death Cases Data</h5>\n                            </div>\n                        <BarChart \n                            width={ width > 980 ? 1200 : width - 80 }  \n                            height={400} \n                            data={top10Deaths}\n                            margin={{top: 5, right: 30, left: 0, bottom: 5}}\n                            layout=\"vertical\"\n                            barSize={15}\n                        >\n                        <CartesianGrid strokeDasharray=\"1 1\"/>\n                        <XAxis type=\"number\"/>\n                        <YAxis dataKey=\"CountryCode\" type=\"category\"/>\n                        <Tooltip/>\n                        <Legend />\n                        <Bar dataKey=\"TotalDeaths\" fill={colors.deaths} width={1} />\n                        </BarChart>\n                        </Card>\n                               \n                        </Col>\n                    </Row>\n                </Container>\n            </div>\n        )\n    }\n}\nexport default LandingPage;"]},"metadata":{},"sourceType":"module"}