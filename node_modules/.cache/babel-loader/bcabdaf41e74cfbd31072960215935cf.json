{"ast":null,"code":"import _regeneratorRuntime from\"/Users/shariati/Desktop/Projects/demo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/shariati/Desktop/Projects/demo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _classCallCheck from\"/Users/shariati/Desktop/Projects/demo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/shariati/Desktop/Projects/demo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _assertThisInitialized from\"/Users/shariati/Desktop/Projects/demo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _createSuper from\"/Users/shariati/Desktop/Projects/demo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import _inherits from\"/Users/shariati/Desktop/Projects/demo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import React,{Component}from'react';import Axios from'axios';import{LineChart,Line,XAxis,YAxis,CartesianGrid,Tooltip,Legend}from'recharts';import'./App.css';var App=/*#__PURE__*/function(_Component){_inherits(App,_Component);var _super=_createSuper(App);function App(props){var _this;_classCallCheck(this,App);_this=_super.call(this,props);_this.state={temp:[],countries:[]};_this.getCountry=_this.getCountry.bind(_assertThisInitialized(_this));return _this;}_createClass(App,[{key:\"componentDidMount\",value:function componentDidMount(){this.getData();}},{key:\"getData\",value:function(){var _getData=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var res;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return Axios.get(\"https://pomber.github.io/covid19/timeseries.json\");case 2:res=_context.sent;this.setState({countries:res.data.Iran,temp:Object.keys(res.data)});console.log(this.state.temp);case 5:case\"end\":return _context.stop();}}},_callee,this);}));function getData(){return _getData.apply(this,arguments);}return getData;}()},{key:\"getCountry\",value:function(){var _getCountry=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(event){var countryRes,searchCountry;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:event.persist();_context2.next=3;return Axios.get(\"https://pomber.github.io/covid19/timeseries.json\");case 3:countryRes=_context2.sent;searchCountry=event.target.value;console.log(countryRes.data[searchCountry]);this.setState({countries:countryRes.data[searchCountry]});case 7:case\"end\":return _context2.stop();}}},_callee2,this);}));function getCountry(_x){return _getCountry.apply(this,arguments);}return getCountry;}()},{key:\"render\",value:function render(){return/*#__PURE__*/React.createElement(\"div\",{className:\"App\"},/*#__PURE__*/React.createElement(\"h1\",null,\"Hi\"),this.state.countries.map(function(list,i){return/*#__PURE__*/React.createElement(\"li\",{key:i},list.date,\" deaths: \",list.deaths);}),/*#__PURE__*/React.createElement(\"div\",{className:\"options\"},/*#__PURE__*/React.createElement(\"select\",{className:\"countrySelect\",onChange:this.getCountry},this.state.temp.map(function(items,i){return/*#__PURE__*/React.createElement(\"option\",{key:i},items);}))),/*#__PURE__*/React.createElement(\"div\",{className:\"chart\",style:{width:\"100%\"}},/*#__PURE__*/React.createElement(\"p\",null,\"I am here\"),/*#__PURE__*/React.createElement(LineChart,{width:1200,height:600,data:this.state.countries},/*#__PURE__*/React.createElement(CartesianGrid,{strokeDasharray:\"1 1\"}),/*#__PURE__*/React.createElement(XAxis,{dataKey:\"date\"}),/*#__PURE__*/React.createElement(YAxis,null),/*#__PURE__*/React.createElement(Tooltip,null),/*#__PURE__*/React.createElement(Legend,null),/*#__PURE__*/React.createElement(Line,{type:\"monotone\",dataKey:\"confirmed\",dot:false,points:1,stroke:\"#1B262C\",strokeWidth:2}),/*#__PURE__*/React.createElement(Line,{type:\"monotone\",dataKey:\"recovered\",dot:false,points:1,stroke:\"#323Edd\",strokeWidth:2}),/*#__PURE__*/React.createElement(Line,{type:\"monotone\",dataKey:\"deaths\",dot:false,points:1,stroke:\"#C81912\",strokeWidth:2}))));}}]);return App;}(Component);export default App;","map":{"version":3,"sources":["/Users/shariati/Desktop/Projects/demo/src/App.js"],"names":["React","Component","Axios","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","Legend","App","props","state","temp","countries","getCountry","bind","getData","get","res","setState","data","Iran","Object","keys","console","log","event","persist","countryRes","searchCountry","target","value","map","list","i","date","deaths","items","width"],"mappings":"ikCAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,SAAT,CAAoBC,IAApB,CAA0BC,KAA1B,CAAgCC,KAAhC,CAAuCC,aAAvC,CAAqDC,OAArD,CAA6DC,MAA7D,KAA0E,UAA1E,CACA,MAAO,WAAP,C,GAEMC,CAAAA,G,0FACJ,aAAaC,KAAb,CAAmB,qCACjB,uBAAMA,KAAN,EADiB,MAInBC,KAJmB,CAIb,CACJC,IAAI,CAAC,EADD,CAEJC,SAAS,CAAC,EAFN,CAJa,CAEjB,MAAKC,UAAL,CAAgB,MAAKA,UAAL,CAAgBC,IAAhB,+BAAhB,CAFiB,aAGlB,C,6EAKkB,CACjB,KAAKC,OAAL,GACD,C,wQAEiBf,CAAAA,KAAK,CAACgB,GAAN,CAAU,kDAAV,C,QAAVC,G,eAEN,KAAKC,QAAL,CAAc,CACZN,SAAS,CAACK,GAAG,CAACE,IAAJ,CAASC,IADP,CAEZT,IAAI,CAACU,MAAM,CAACC,IAAP,CAAYL,GAAG,CAACE,IAAhB,CAFO,CAAd,EAIAI,OAAO,CAACC,GAAR,CAAY,KAAKd,KAAL,CAAWC,IAAvB,E,yQAEec,K,mJACfA,KAAK,CAACC,OAAN,G,uBACuB1B,CAAAA,KAAK,CAACgB,GAAN,CAAU,kDAAV,C,QAAjBW,U,gBACAC,a,CAAcH,KAAK,CAACI,MAAN,CAAaC,K,CACjCP,OAAO,CAACC,GAAR,CAAYG,UAAU,CAACR,IAAX,CAAgBS,aAAhB,CAAZ,EAEA,KAAKV,QAAL,CAAc,CACZN,SAAS,CAACe,UAAU,CAACR,IAAX,CAAgBS,aAAhB,CADE,CAAd,E,8LAIM,CACN,mBACE,2BAAK,SAAS,CAAC,KAAf,eACE,mCADF,CAGI,KAAKlB,KAAL,CAAWE,SAAX,CAAqBmB,GAArB,CAAyB,SAACC,IAAD,CAAMC,CAAN,qBAC3B,0BAAI,GAAG,CAAEA,CAAT,EAAaD,IAAI,CAACE,IAAlB,aAAiCF,IAAI,CAACG,MAAtC,CAD2B,EAAzB,CAHJ,cAOE,2BAAK,SAAS,CAAC,SAAf,eACE,8BAAQ,SAAS,CAAC,eAAlB,CAAkC,QAAQ,CAAE,KAAKtB,UAAjD,EAEI,KAAKH,KAAL,CAAWC,IAAX,CAAgBoB,GAAhB,CAAoB,SAACK,KAAD,CAAOH,CAAP,qBACpB,8BAAQ,GAAG,CAAEA,CAAb,EAAiBG,KAAjB,CADoB,EAApB,CAFJ,CADF,CAPF,cAgBE,2BAAK,SAAS,CAAC,OAAf,CAAuB,KAAK,CAAE,CAACC,KAAK,CAAC,MAAP,CAA9B,eACE,yCADF,cAEI,oBAAC,SAAD,EAAW,KAAK,CAAE,IAAlB,CAAwB,MAAM,CAAE,GAAhC,CAAqC,IAAI,CAAE,KAAK3B,KAAL,CAAWE,SAAtD,eACA,oBAAC,aAAD,EAAe,eAAe,CAAC,KAA/B,EADA,cAEA,oBAAC,KAAD,EAAO,OAAO,CAAC,MAAf,EAFA,cAGA,oBAAC,KAAD,MAHA,cAIA,oBAAC,OAAD,MAJA,cAKA,oBAAC,MAAD,MALA,cAMA,oBAAC,IAAD,EAAM,IAAI,CAAC,UAAX,CAAsB,OAAO,CAAC,WAA9B,CAA0C,GAAG,CAAE,KAA/C,CAAsD,MAAM,CAAE,CAA9D,CAAiE,MAAM,CAAC,SAAxE,CAAkF,WAAW,CAAE,CAA/F,EANA,cAOA,oBAAC,IAAD,EAAM,IAAI,CAAC,UAAX,CAAsB,OAAO,CAAC,WAA9B,CAA0C,GAAG,CAAE,KAA/C,CAAsD,MAAM,CAAE,CAA9D,CAAiE,MAAM,CAAC,SAAxE,CAAkF,WAAW,CAAE,CAA/F,EAPA,cAQA,oBAAC,IAAD,EAAM,IAAI,CAAC,UAAX,CAAsB,OAAO,CAAC,QAA9B,CAAuC,GAAG,CAAE,KAA5C,CAAmD,MAAM,CAAE,CAA3D,CAA8D,MAAM,CAAC,SAArE,CAA+E,WAAW,CAAE,CAA5F,EARA,CAFJ,CAhBF,CADF,CAkCD,C,iBAlEeb,S,EAqElB,cAAeS,CAAAA,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport Axios from 'axios';\nimport { LineChart, Line, XAxis,YAxis, CartesianGrid,Tooltip,Legend} from 'recharts';\nimport './App.css';\n\nclass App extends Component {\n  constructor (props){\n    super(props);\n    this.getCountry=this.getCountry.bind(this);\n  }\n  state={\n    temp:[],\n    countries:[]\n  }\n  componentDidMount(){\n    this.getData();\n  }\n  async getData(){\n    const res=await Axios.get(\"https://pomber.github.io/covid19/timeseries.json\");\n    \n    this.setState({\n      countries:res.data.Iran,\n      temp:Object.keys(res.data)\n    })\n    console.log(this.state.temp);\n  }\n  async getCountry(event){\n    event.persist();\n    const countryRes=await Axios.get(\"https://pomber.github.io/covid19/timeseries.json\");\n    const searchCountry=event.target.value;\n    console.log(countryRes.data[searchCountry]);\n    \n    this.setState({\n      countries:countryRes.data[searchCountry]\n    })\n  }\n  render(){\n    return (\n      <div className=\"App\">\n        <h1>Hi</h1>\n        {\n          this.state.countries.map((list,i)=>\n        <li key={i}>{list.date} deaths: {list.deaths}</li>\n          )\n        }\n        <div className=\"options\">\n          <select className=\"countrySelect\" onChange={this.getCountry}>\n            {\n              this.state.temp.map((items,i)=>\n              <option key={i}>{items}</option>  \n              )\n            }\n          </select>\n        </div>\n        <div className=\"chart\" style={{width:\"100%\"}}>\n          <p>I am here</p>\n            <LineChart width={1200} height={600} data={this.state.countries}>\n            <CartesianGrid strokeDasharray=\"1 1\" />\n            <XAxis dataKey=\"date\" />\n            <YAxis />\n            <Tooltip />\n            <Legend />\n            <Line type=\"monotone\" dataKey=\"confirmed\" dot={false} points={1} stroke=\"#1B262C\" strokeWidth={2} />\n            <Line type=\"monotone\" dataKey=\"recovered\" dot={false} points={1} stroke=\"#323Edd\" strokeWidth={2} />\n            <Line type=\"monotone\" dataKey=\"deaths\" dot={false} points={1} stroke=\"#C81912\" strokeWidth={2} />\n            </LineChart>\n          \n        </div>\n      </div>\n\n      )\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}