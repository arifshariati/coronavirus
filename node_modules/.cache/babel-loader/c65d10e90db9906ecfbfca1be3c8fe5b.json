{"ast":null,"code":"var _jsxFileName = \"/Users/shariati/Desktop/Projects/demo2/src/components/dataChart.jsx\";\nimport React, { Component } from 'react';\nimport Axios from 'axios';\nimport { Container, Row, Col, Table, Form, Card, Button } from 'react-bootstrap';\nimport NumberFormat from 'react-number-format';\nimport ReactGA from 'react-ga';\nimport Pagination from './pagination';\nimport Loader from 'react-loader-spinner';\nconst colors = {\n  confirmed: '#FFD31D',\n  recovered: '#21BF72',\n  deaths: '#DD2C00'\n};\nconst showChartPeriod = [{\n  period: 0,\n  periodTitle: \"Sow All Data\"\n}, {\n  period: 7,\n  periodTitle: \"Sow Last 7 Days Data\"\n}, {\n  period: 14,\n  periodTitle: \"Sow Last 14 Days Data\"\n}, {\n  period: 30,\n  periodTitle: \"Sow Last 30 Days Data\"\n}];\n\nclass DataChart extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentData: [],\n      currentPage: 1,\n      dataPerPage: 7,\n      selectedCountry: \"China\",\n      population: 0,\n      temp: [],\n      countries: [],\n      tableCountries: [],\n      width: window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth\n    };\n\n    this.updateDimensions = () => {\n      const width = window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth;\n      this.setState({\n        width\n      });\n    };\n\n    this.getData = this.getData.bind(this);\n    this.getCountry = this.getCountry.bind(this);\n    this.updateChartPeriod = this.updateChartPeriod.bind(this);\n    this.paginate = this.paginate.bind(this);\n  }\n\n  componentDidMount() {\n    ReactGA.initialize('UA-163115935-1');\n    ReactGA.pageview('/Daily-Data');\n    this.getCountryByIP();\n    window.addEventListener('resize', this.updateDimensions);\n  }\n\n  async getCountryByIP() {\n    const res = await Axios.get(\"https://ipapi.co/json\");\n    this.setState({\n      selectedCountry: res.data.country_name === \"United States\" ? \"US\" : res.data.country_name,\n      population: res.data.country_population\n    });\n    this.getData();\n  }\n\n  async getData() {\n    const res = await Axios.get(\"https://pomber.github.io/covid19/timeseries.json\");\n    const selectedCountry = this.state.selectedCountry;\n    const byConfirmed = res.data[selectedCountry].slice(0);\n    byConfirmed.sort(function (a, b) {\n      return b.confirmed - a.confirmed;\n    });\n    this.setState({\n      countries: res.data[selectedCountry],\n      tableCountries: byConfirmed,\n      temp: Object.keys(res.data)\n    });\n    const dataPerPage = this.state.dataPerPage === 0 ? this.state.tableCountries.length - 1 : this.state.dataPerPage;\n    const indexOfLastData = this.state.currentPage * dataPerPage;\n    const indexOfFirstData = indexOfLastData - dataPerPage;\n    this.setState({\n      currentData: this.state.tableCountries.slice(indexOfFirstData, indexOfLastData)\n    });\n  }\n\n  async getCountry(event) {\n    event.persist();\n    const countryRes = await Axios.get(\"https://pomber.github.io/covid19/timeseries.json\");\n    const searchCountry = event.target.value;\n    const byConfirmed = countryRes.data[searchCountry].slice(0);\n    byConfirmed.sort(function (a, b) {\n      return b.confirmed - a.confirmed;\n    });\n    this.setState({\n      selectedCountry: searchCountry,\n      tableCountries: byConfirmed\n    });\n    const dataPerPage = this.state.dataPerPage === 0 ? this.state.tableCountries.length - 1 : this.state.dataPerPage;\n    const indexOfLastData = this.state.currentPage * dataPerPage;\n    const indexOfFirstData = indexOfLastData - dataPerPage;\n    this.setState({\n      currentData: this.state.tableCountries.slice(indexOfFirstData, indexOfLastData)\n    });\n  }\n\n  updateChartPeriod(props) {\n    console.log(props);\n    this.setState({\n      dataPerPage: props\n    });\n    this.getData(); //console.log(event.target.value);\n  }\n\n  async updatePageNumber() {\n    const countryRes = await Axios.get(\"https://pomber.github.io/covid19/timeseries.json\");\n    const searchCountry = this.state.selectedCountry;\n    const byConfirmed = countryRes.data[searchCountry].slice(0);\n    byConfirmed.sort(function (a, b) {\n      return b.confirmed - a.confirmed;\n    });\n    this.setState({\n      selectedCountry: searchCountry,\n      tableCountries: byConfirmed\n    });\n    const indexOfLastData = this.state.currentPage * this.state.dataPerPage;\n    const indexOfFirstData = indexOfLastData - this.state.dataPerPage;\n    this.setState({\n      currentData: this.state.tableCountries.slice(indexOfFirstData, indexOfLastData)\n    });\n  } //paginate = pageNumber=> this.setState({currentPage:pageNumber});\n\n\n  paginate(pageNumber) {\n    this.setState({\n      currentPage: pageNumber\n    });\n    this.updatePageNumber();\n  }\n\n  render() {\n    const {\n      currentData,\n      dataPerPage,\n      selectedCountry,\n      population,\n      temp,\n      tableCountries,\n      width\n    } = this.state;\n    if (!currentData) return /*#__PURE__*/React.createElement(Container, {\n      fluid: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      className: \"justify-content-md-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      xs: \"12\",\n      lg: \"8\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      className: \"shadow\",\n      style: {\n        marginBottom: '1rem',\n        paddingTop: '15rem',\n        border: 'none',\n        minHeight: \"700px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Loader, {\n      type: \"ThreeDots\",\n      color: \"#DD2C00\",\n      height: 100,\n      width: 100,\n      timeout: 900000000,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 21\n      }\n    })))));\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Container, {\n      fluid: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      className: \"justify-content-md-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      xs: \"12\",\n      lg: \"8\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      className: \"shadow-sm\",\n      style: {\n        marginBottom: '1rem',\n        padding: '1rem',\n        border: 'none'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Form.Control, {\n      as: \"select\",\n      size: \"sm\",\n      onChange: this.getCountry,\n      custom: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 33\n      }\n    }, selectedCountry), temp.map((items, i) => /*#__PURE__*/React.createElement(\"option\", {\n      key: i,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 33\n      }\n    }, items)))))), /*#__PURE__*/React.createElement(Row, {\n      className: \"justify-content-md-center\",\n      style: {\n        marginBottom: \"1rem\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      xs: true,\n      lg: \"8\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      className: \"justify-content-md-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 29\n      }\n    }, showChartPeriod.map((period, index) => /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      key: index,\n      variant: \"primary\",\n      onClick: () => this.updateChartPeriod(period.period),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 45\n      }\n    }, period.periodTitle))))))), /*#__PURE__*/React.createElement(Container, {\n      fluid: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      className: \"justify-content-md-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      xs: true,\n      lg: \"8\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      className: \"shadow-sm\",\n      style: {\n        marginTop: '1rem',\n        padding: '1rem',\n        border: 'none'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Table, {\n      responsive: true,\n      size: \"sm\",\n      striped: true,\n      bordered: true,\n      hover: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 37\n      }\n    }, \"Date\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 37\n      }\n    }, \"Confirmed\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 37\n      }\n    }, \"Recovered\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 37\n      }\n    }, \"Deaths\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 33\n      }\n    }, currentData.map((list, index) => /*#__PURE__*/React.createElement(\"tr\", {\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 37\n      }\n    }, list.date), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(NumberFormat, {\n      value: list.confirmed,\n      displayType: 'text',\n      thousandSeparator: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 41\n      }\n    })), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(NumberFormat, {\n      value: list.recovered,\n      displayType: 'text',\n      thousandSeparator: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 41\n      }\n    })), /*#__PURE__*/React.createElement(\"td\", {\n      style: {\n        fontWeight: \"bold\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(NumberFormat, {\n      value: list.deaths,\n      displayType: 'text',\n      thousandSeparator: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 41\n      }\n    })))))), /*#__PURE__*/React.createElement(Pagination, {\n      dataPerPage: dataPerPage,\n      totalData: tableCountries.length,\n      paginate: this.paginate,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 33\n      }\n    }))))));\n  }\n\n}\n\nexport default DataChart;","map":{"version":3,"sources":["/Users/shariati/Desktop/Projects/demo2/src/components/dataChart.jsx"],"names":["React","Component","Axios","Container","Row","Col","Table","Form","Card","Button","NumberFormat","ReactGA","Pagination","Loader","colors","confirmed","recovered","deaths","showChartPeriod","period","periodTitle","DataChart","constructor","props","state","currentData","currentPage","dataPerPage","selectedCountry","population","temp","countries","tableCountries","width","window","innerWidth","document","documentElement","clientWidth","body","updateDimensions","setState","getData","bind","getCountry","updateChartPeriod","paginate","componentDidMount","initialize","pageview","getCountryByIP","addEventListener","res","get","data","country_name","country_population","byConfirmed","slice","sort","a","b","Object","keys","length","indexOfLastData","indexOfFirstData","event","persist","countryRes","searchCountry","target","value","console","log","updatePageNumber","pageNumber","render","marginBottom","paddingTop","border","minHeight","padding","map","items","i","index","marginTop","list","date","fontWeight"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Axios from 'axios';\nimport {Container,Row,Col,Table,Form, Card,Button} from 'react-bootstrap';\nimport NumberFormat from 'react-number-format';\nimport ReactGA from 'react-ga';\nimport Pagination from './pagination';\nimport Loader from 'react-loader-spinner';\n\nconst colors = {\n    confirmed: '#FFD31D',\n    recovered: '#21BF72',\n    deaths: '#DD2C00',\n  };\n\n  const showChartPeriod=[\n    {\n        period:0,\n        periodTitle:\"Sow All Data\"\n    },\n    {\n        period:7,\n        periodTitle:\"Sow Last 7 Days Data\"\n    },\n    {\n        period:14,\n        periodTitle:\"Sow Last 14 Days Data\"\n    },\n    {\n        period:30,\n        periodTitle:\"Sow Last 30 Days Data\"\n    }\n]\n\nclass DataChart extends Component{\n    constructor (props){\n        super(props);\n        this.getData=this.getData.bind(this);\n        this.getCountry=this.getCountry.bind(this);\n        this.updateChartPeriod=this.updateChartPeriod.bind(this);\n        this.paginate=this.paginate.bind(this);\n      }\n      \n      state={\n        currentData:[],\n        currentPage:1,\n        dataPerPage:7,\n        selectedCountry:\"China\",\n        population:0,\n        temp:[],\n        countries:[],\n        tableCountries:[],\n        width:\n        window.innerWidth ||\n        document.documentElement.clientWidth ||\n        document.body.clientWidth\n      }\n      componentDidMount(){\n\n        ReactGA.initialize('UA-163115935-1');\n        ReactGA.pageview('/Daily-Data');\n\n        this.getCountryByIP();\n        window.addEventListener('resize',this.updateDimensions);\n      }\n      updateDimensions = ()=>{\n          const width = \n          window.innerWidth ||\n          document.documentElement.clientWidth ||\n          document.body.clientWidth;\n\n          this.setState({width});\n      }\n      async getCountryByIP(){\n        const res=await Axios.get(\"https://ipapi.co/json\");\n        this.setState({\n            selectedCountry:res.data.country_name ===\"United States\" ? \"US\" : res.data.country_name,\n              population:res.data.country_population\n        })\n        this.getData();\n    }\n      async getData(){\n        const res=await Axios.get(\"https://pomber.github.io/covid19/timeseries.json\");\n        const selectedCountry=this.state.selectedCountry;\n        const byConfirmed=res.data[selectedCountry].slice(0);\n        byConfirmed.sort(function(a,b){\n            return b.confirmed - a.confirmed;\n        });\n\n        this.setState({\n          countries:res.data[selectedCountry],\n          tableCountries:byConfirmed,\n          temp:Object.keys(res.data)\n        })\n\n        const dataPerPage = this.state.dataPerPage === 0 ? this.state.tableCountries.length-1 : this.state.dataPerPage;\n\n        const indexOfLastData=this.state.currentPage * dataPerPage;\n        const indexOfFirstData=indexOfLastData - dataPerPage;\n        this.setState({\n            currentData:this.state.tableCountries.slice(indexOfFirstData,indexOfLastData)\n        })\n        \n        \n      }\n      async getCountry(event){\n        event.persist();\n        const countryRes=await Axios.get(\"https://pomber.github.io/covid19/timeseries.json\");\n        const searchCountry=event.target.value;\n        \n        const byConfirmed=countryRes.data[searchCountry].slice(0);\n        byConfirmed.sort(function(a,b){\n            return b.confirmed - a.confirmed;\n        });\n\n        this.setState({\n            selectedCountry:searchCountry,\n            tableCountries:byConfirmed\n        })\n\n        const dataPerPage = this.state.dataPerPage === 0 ? this.state.tableCountries.length-1 : this.state.dataPerPage;\n\n        const indexOfLastData=this.state.currentPage * dataPerPage;\n        const indexOfFirstData=indexOfLastData - dataPerPage;\n        this.setState({\n            currentData:this.state.tableCountries.slice(indexOfFirstData,indexOfLastData)\n        })\n      }\n\n      updateChartPeriod(props){\n        console.log(props);\n        this.setState({\n            dataPerPage:props,\n        })\n        this.getData();\n        //console.log(event.target.value);\n      }\n\n      async updatePageNumber(){\n        const countryRes=await Axios.get(\"https://pomber.github.io/covid19/timeseries.json\");\n        const searchCountry=this.state.selectedCountry;\n        \n        const byConfirmed=countryRes.data[searchCountry].slice(0);\n        byConfirmed.sort(function(a,b){\n            return b.confirmed - a.confirmed;\n        });\n\n        this.setState({\n            selectedCountry:searchCountry,\n            tableCountries:byConfirmed\n        })\n\n        \n\n        const indexOfLastData=this.state.currentPage * this.state.dataPerPage;\n        const indexOfFirstData=indexOfLastData - this.state.dataPerPage;\n        this.setState({\n            currentData:this.state.tableCountries.slice(indexOfFirstData,indexOfLastData)\n        })\n\n      }\n\n    //paginate = pageNumber=> this.setState({currentPage:pageNumber});\n        paginate(pageNumber){\n        this.setState({currentPage:pageNumber});\n        this.updatePageNumber();\n    }\n    \nrender(){\n    const {\n        currentData,\n        dataPerPage,\n        selectedCountry,\n        population,\n        temp,\n        tableCountries,\n        width\n    } = this.state;\n\n    if(!currentData) return (\n        <Container fluid>\n            <Row className=\"justify-content-md-center\">\n                <Col xs=\"12\" lg=\"8\">\n                <Card \n                    className=\"shadow\" \n                    style={{marginBottom:'1rem',paddingTop:'15rem',border:'none',minHeight:\"700px\"}}\n                >\n                    <Loader \n                        type=\"ThreeDots\"\n                        color=\"#DD2C00\"\n                        height={100}\n                        width={100}\n                        timeout={900000000}\n                    />\n                </Card>     \n                </Col>\n            </Row>\n\n            \n        </Container>\n    );\n\n    return(\n        <div className=\"mid\">\n            <Container fluid>\n                <Row className=\"justify-content-md-center\">\n                    <Col xs=\"12\" lg=\"8\">\n                    <Card className=\"shadow-sm\" style={{marginBottom:'1rem',padding:'1rem',border:'none'}}>\n                        <Form.Control as=\"select\" size=\"sm\" onChange={this.getCountry} custom>\n                                <option>{selectedCountry}</option> \n                                {\n                                temp.map((items,i)=>\n                                <option key={i}>{items}</option>  \n                                )\n                                }\n                            </Form.Control>\n                    </Card>     \n                    </Col>\n                </Row>\n\n                <Row className=\"justify-content-md-center\" style={{marginBottom:\"1rem\"}}>\n                        <Col xs lg=\"8\">\n                            <Row className=\"justify-content-md-center\">\n                                {\n                                    showChartPeriod.map((period,index)=>\n                                        <Col>\n                                            <Button key={index} variant=\"primary\" onClick={()=>this.updateChartPeriod(period.period)}>{period.periodTitle}</Button>\n                                        </Col>\n                                    )\n                                }\n                            </Row>\n                        </Col>\n                    </Row>\n            </Container>\n            \n            <Container fluid>\n                <Row className=\"justify-content-md-center\">\n                    <Col xs lg=\"8\">\n                        <Card className=\"shadow-sm\" style={{marginTop:'1rem',padding:'1rem',border:'none'}}>\n                            <Table responsive size=\"sm\" striped={true} bordered={true} hover>\n                                <thead>\n                                    <tr>\n                                    <th>Date</th>\n                                    <th>Confirmed</th>\n                                    <th>Recovered</th>\n                                    <th>Deaths</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {\n                                    currentData.map((list,index)=>\n                                    <tr key={index}>\n                                    <td>{list.date}</td>\n                                    <td>\n                                        <NumberFormat \n                                            value={list.confirmed} \n                                            displayType={'text'} \n                                            thousandSeparator={true} \n                                        />\n                                        \n                                    </td>\n                                    <td>\n                                        <NumberFormat value={list.recovered} displayType={'text'} thousandSeparator={true} />\n                                    </td>\n                                    <td style={{fontWeight:\"bold\"}}>\n                                        <NumberFormat value={list.deaths} displayType={'text'} thousandSeparator={true} />\n                                    </td>\n                                    </tr>\n                                    )\n                                    }\n                                </tbody>\n                                </Table>\n                                <Pagination  \n                                    dataPerPage={dataPerPage} \n                                    totalData={tableCountries.length} \n                                    paginate={this.paginate}\n                                />\n                        </Card>\n                    \n                    </Col>\n                </Row>\n            </Container>\n            \n        </div>\n    )\n}\n}\nexport default DataChart;"]},"metadata":{},"sourceType":"module"}