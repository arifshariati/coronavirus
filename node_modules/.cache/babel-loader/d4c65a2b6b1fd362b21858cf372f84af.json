{"ast":null,"code":"import _regeneratorRuntime from\"/Users/shariati/Desktop/Projects/demo2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/shariati/Desktop/Projects/demo2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _classCallCheck from\"/Users/shariati/Desktop/Projects/demo2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/shariati/Desktop/Projects/demo2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _createSuper from\"/Users/shariati/Desktop/Projects/demo2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import _inherits from\"/Users/shariati/Desktop/Projects/demo2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import React,{Component}from'react';import Axios from'axios';import{Map,CircleMarker,TileLayer}from'react-leaflet';import{Container,Row,Col,Card,Alert}from'react-bootstrap';import NumberFormat from'react-number-format';import{BarChart,Bar,XAxis,YAxis,CartesianGrid,Tooltip,Legend}from'recharts';import\"leaflet/dist/leaflet.css\";var colors={confirmed:'#FFD31D',recovered:'#21BF72',deaths:'#DD2C00'};var LandingPage=/*#__PURE__*/function(_Component){_inherits(LandingPage,_Component);var _super=_createSuper(LandingPage);function LandingPage(){var _this;_classCallCheck(this,LandingPage);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={confirmed:0,recovered:0,deaths:0,total:0,incidents:[],incidentsSorted:[],confirmedSorted:[],recoveredSorted:[],deathsSorted:[],zoom:2,minZoom:2,width:window.innerWidth||document.documentElement.clientWidth||document.body.clientWidth};_this.updateDimensions=function(){var width=window.innerWidth||document.documentElement.clientWidth||document.body.clientWidth;_this.setState({width:width});};return _this;}_createClass(LandingPage,[{key:\"componentDidMount\",value:function componentDidMount(){this.getData();window.addEventListener('resize',this.updateDimensions);}},{key:\"getData\",value:function(){var _getData=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var res,totalDeaths,filteredData,sortfilteredData,incidentsSorted,confirmedSorted,recoveredSorted,deathsSorted;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return Axios.get(\"https://covid19.mathdro.id/api/confirmed\");case 2:res=_context.sent;_context.next=5;return Axios.get(\"https://covid19.mathdro.id/api\");case 5:totalDeaths=_context.sent;filteredData=res.data.filter(function(row){return row.lat!==null;});sortfilteredData=res.data.filter(function(row){return row.countryRegion!==\"US\";});incidentsSorted=sortfilteredData.sort(function(a,b){return b.confirmed-a.confirmed;});confirmedSorted=sortfilteredData.sort(function(a,b){return b.confirmed-a.confirmed;});recoveredSorted=sortfilteredData.sort(function(a,b){return b.recovered-a.recovered;});deathsSorted=sortfilteredData.sort(function(a,b){return b.deaths-a.deaths;});this.setState({incidents:filteredData,incidentsSorted:incidentsSorted.slice(1,10),confirmedSorted:confirmedSorted.slice(1,10),recoveredSorted:recoveredSorted.slice(1,10),deathsSorted:deathsSorted.slice(1,10),total:totalDeaths.data.deaths.value,confirmed:totalDeaths.data.confirmed.value,recovered:totalDeaths.data.recovered.value,deaths:totalDeaths.data.deaths.value});case 13:case\"end\":return _context.stop();}}},_callee,this);}));function getData(){return _getData.apply(this,arguments);}return getData;}()},{key:\"render\",value:function render(){var _this$state=this.state,confirmed=_this$state.confirmed,recovered=_this$state.recovered,deaths=_this$state.deaths,total=_this$state.total,incidents=_this$state.incidents,confirmedSorted=_this$state.confirmedSorted,recoveredSorted=_this$state.recoveredSorted,deathsSorted=_this$state.deathsSorted,zoom=_this$state.zoom,minZoom=_this$state.minZoom,width=_this$state.width;return/*#__PURE__*/React.createElement(\"div\",{className:\"mid\"},/*#__PURE__*/React.createElement(Container,{fluid:true},/*#__PURE__*/React.createElement(Row,{className:\"justify-content-md-center\"},/*#__PURE__*/React.createElement(Col,{xs:\"12\",lg:\"8\"},/*#__PURE__*/React.createElement(Card,{className:\"shadow\",style:{marginBottom:'1rem',padding:'1rem',border:'none'}},/*#__PURE__*/React.createElement(Map,{width:width>980?960:width-80,zoom:width<980?1:zoom,center:[20.505,-0.09],minZoom:width<980?1:minZoom},/*#__PURE__*/React.createElement(TileLayer,{url:\"https://{s}.tile.osm.org/{z}/{x}/{y}.png\"}),incidents.map(function(city,i){return/*#__PURE__*/React.createElement(CircleMarker,{key:i,center:[city.lat,city.long],readius:20*Math.log(city.deaths/total),fillOpacity:0.5,fillColor:\"red\",stroke:false});})))))),/*#__PURE__*/React.createElement(Container,{fluid:true},/*#__PURE__*/React.createElement(Row,{className:\"justify-content-md-center\"},/*#__PURE__*/React.createElement(Col,{xs:true,lg:\"8\"},/*#__PURE__*/React.createElement(Card,{className:\"shadow-sm\",style:{marginBottom:'1rem',padding:'1rem',border:'none'}},/*#__PURE__*/React.createElement(Row,{className:\"justify-content-md-center\"},/*#__PURE__*/React.createElement(Col,null,/*#__PURE__*/React.createElement(Alert,{style:{backgroundColor:colors.confirmed}},/*#__PURE__*/React.createElement(\"h4\",null,/*#__PURE__*/React.createElement(NumberFormat,{value:confirmed,displayType:'text',thousandSeparator:true})),/*#__PURE__*/React.createElement(\"p\",null,/*#__PURE__*/React.createElement(\"b\",null,\"Accomulative\"),/*#__PURE__*/React.createElement(\"i\",null,\" as of today\")))),/*#__PURE__*/React.createElement(Col,null,/*#__PURE__*/React.createElement(Alert,{style:{backgroundColor:colors.recovered}},/*#__PURE__*/React.createElement(\"h4\",null,/*#__PURE__*/React.createElement(NumberFormat,{value:recovered,displayType:'text',thousandSeparator:true})),/*#__PURE__*/React.createElement(\"h6\",null,/*#__PURE__*/React.createElement(\"b\",null,Math.round(recovered/confirmed*100)),/*#__PURE__*/React.createElement(\"i\",null,\"% Recovery\")))),/*#__PURE__*/React.createElement(Col,null,/*#__PURE__*/React.createElement(Alert,{style:{backgroundColor:colors.deaths,color:'#FFFFFF'}},/*#__PURE__*/React.createElement(\"h4\",null,/*#__PURE__*/React.createElement(NumberFormat,{value:deaths,displayType:'text',thousandSeparator:true})),/*#__PURE__*/React.createElement(\"h6\",null,/*#__PURE__*/React.createElement(\"b\",null,Math.round(deaths/confirmed*100)),/*#__PURE__*/React.createElement(\"i\",null,\"% Deaths\"))))))))),/*#__PURE__*/React.createElement(Container,{fluid:true},/*#__PURE__*/React.createElement(Row,{className:\"justify-content-md-center\"},/*#__PURE__*/React.createElement(Col,{xs:true,lg:\"8\"},/*#__PURE__*/React.createElement(Card,{className:\"shadow-sm\",style:{marginBottom:'1rem',padding:'1rem',border:'none'}},/*#__PURE__*/React.createElement(\"div\",{style:{marginTop:'1rem'}},/*#__PURE__*/React.createElement(\"h5\",{style:{textAlign:'center'}},\"Top 10 Counties - Confirmed Cases Data\")),/*#__PURE__*/React.createElement(BarChart,{width:width>980?1200:width-80,height:400,data:confirmedSorted,margin:{top:5,right:30,left:20,bottom:5},layout:\"vertical\",barSize:15},/*#__PURE__*/React.createElement(CartesianGrid,{strokeDasharray:\"1 1\"}),/*#__PURE__*/React.createElement(XAxis,{type:\"number\"}),/*#__PURE__*/React.createElement(YAxis,{dataKey:\"countryRegion\",type:\"category\"}),/*#__PURE__*/React.createElement(Tooltip,null),/*#__PURE__*/React.createElement(Legend,null),/*#__PURE__*/React.createElement(Bar,{dataKey:\"confirmed\",fill:colors.confirmed})))))),/*#__PURE__*/React.createElement(Container,{fluid:true},/*#__PURE__*/React.createElement(Row,{className:\"justify-content-md-center\"},/*#__PURE__*/React.createElement(Col,{xs:true,lg:\"8\"},/*#__PURE__*/React.createElement(Card,{className:\"shadow-sm\",style:{marginBottom:'1rem',padding:'1rem',border:'none'}},/*#__PURE__*/React.createElement(\"div\",{style:{marginTop:'1rem'}},/*#__PURE__*/React.createElement(\"h5\",{style:{textAlign:'center'}},\"Top 10 Countries - Recovered Cases Data\")),/*#__PURE__*/React.createElement(BarChart,{width:width>980?1200:width-80,height:400,data:recoveredSorted,margin:{top:5,right:30,left:20,bottom:5},layout:\"vertical\",barSize:15},/*#__PURE__*/React.createElement(CartesianGrid,{strokeDasharray:\"1 1\"}),/*#__PURE__*/React.createElement(XAxis,{type:\"number\"}),/*#__PURE__*/React.createElement(YAxis,{dataKey:\"countryRegion\",type:\"category\"}),/*#__PURE__*/React.createElement(Tooltip,null),/*#__PURE__*/React.createElement(Legend,null),/*#__PURE__*/React.createElement(Bar,{dataKey:\"recovered\",fill:colors.recovered})))))),/*#__PURE__*/React.createElement(Container,{fluid:true},/*#__PURE__*/React.createElement(Row,{className:\"justify-content-md-center\"},/*#__PURE__*/React.createElement(Col,{xs:true,lg:\"8\"},/*#__PURE__*/React.createElement(Card,{className:\"shadow-sm\",style:{marginBottom:'1rem',padding:'1rem',border:'none'}},/*#__PURE__*/React.createElement(\"div\",{style:{marginTop:'1rem'}},/*#__PURE__*/React.createElement(\"h5\",{style:{textAlign:'center'}},\"Top 10 Countries - Death Cases Data\")),/*#__PURE__*/React.createElement(BarChart,{width:width>980?1200:width-80,height:400,data:deathsSorted,margin:{top:5,right:30,left:20,bottom:5},layout:\"vertical\",barSize:15},/*#__PURE__*/React.createElement(CartesianGrid,{strokeDasharray:\"1 1\"}),/*#__PURE__*/React.createElement(XAxis,{type:\"number\"}),/*#__PURE__*/React.createElement(YAxis,{dataKey:\"countryRegion\",type:\"category\"}),/*#__PURE__*/React.createElement(Tooltip,null),/*#__PURE__*/React.createElement(Legend,null),/*#__PURE__*/React.createElement(Bar,{dataKey:\"deaths\",fill:colors.deaths,width:1})))))));}}]);return LandingPage;}(Component);export default LandingPage;","map":{"version":3,"sources":["/Users/shariati/Desktop/Projects/demo2/src/components/landingPage.jsx"],"names":["React","Component","Axios","Map","CircleMarker","TileLayer","Container","Row","Col","Card","Alert","NumberFormat","BarChart","Bar","XAxis","YAxis","CartesianGrid","Tooltip","Legend","colors","confirmed","recovered","deaths","LandingPage","state","total","incidents","incidentsSorted","confirmedSorted","recoveredSorted","deathsSorted","zoom","minZoom","width","window","innerWidth","document","documentElement","clientWidth","body","updateDimensions","setState","getData","addEventListener","get","res","totalDeaths","filteredData","data","filter","row","lat","sortfilteredData","countryRegion","sort","a","b","slice","value","marginBottom","padding","border","map","city","i","long","Math","log","backgroundColor","round","color","marginTop","textAlign","top","right","left","bottom"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Axios from 'axios';\nimport { Map, CircleMarker,TileLayer} from 'react-leaflet';\nimport {Container,Row,Col, Card, Alert} from 'react-bootstrap';\nimport NumberFormat from 'react-number-format';\nimport { BarChart, Bar, XAxis,YAxis, CartesianGrid,Tooltip,Legend} from 'recharts';\nimport \"leaflet/dist/leaflet.css\";\n\nconst colors = {\n    confirmed: '#FFD31D',\n    recovered: '#21BF72',\n    deaths: '#DD2C00',\n  };\nclass LandingPage extends Component{\n    state={\n        confirmed:0,\n        recovered:0,\n        deaths:0,\n        total:0,\n        incidents:[],\n        incidentsSorted:[],\n        confirmedSorted:[],\n        recoveredSorted:[],\n        deathsSorted:[],\n        zoom:2,\n        minZoom:2,\n        width:\n        window.innerWidth ||\n        document.documentElement.clientWidth ||\n        document.body.clientWidth\n      }\n    \n      componentDidMount(){\n        this.getData();\n        window.addEventListener('resize',this.updateDimensions);\n      }\n      updateDimensions = ()=>{\n        const width = \n        window.innerWidth ||\n        document.documentElement.clientWidth ||\n        document.body.clientWidth;\n\n        this.setState({width});\n    }\n      async getData(){\n      const res=await Axios.get(\"https://covid19.mathdro.id/api/confirmed\");\n      const totalDeaths=await Axios.get(\"https://covid19.mathdro.id/api\");\n      \n      const filteredData=res.data.filter(row=> row.lat !== null)\n      \n      const sortfilteredData=res.data.filter(row=>row.countryRegion !== \"US\")\n    \n      const incidentsSorted=sortfilteredData.sort(function(a,b){\n        return b.confirmed - a.confirmed;\n    });\n      const confirmedSorted=sortfilteredData.sort(function(a,b){\n        return b.confirmed - a.confirmed;\n    });\n\n    const recoveredSorted=sortfilteredData.sort(function(a,b){\n        return b.recovered - a.recovered;\n    });\n\n    const deathsSorted=sortfilteredData.sort(function(a,b){\n        return b.deaths - a.deaths;\n    });\n\n      this.setState({\n        incidents:filteredData,\n        incidentsSorted:incidentsSorted.slice(1,10),\n        confirmedSorted:confirmedSorted.slice(1,10),\n        recoveredSorted:recoveredSorted.slice(1,10),\n        deathsSorted:deathsSorted.slice(1,10),\n        total:totalDeaths.data.deaths.value,\n        confirmed:totalDeaths.data.confirmed.value,\n        recovered:totalDeaths.data.recovered.value,\n        deaths:totalDeaths.data.deaths.value\n      })\n      }\n    render(){\n        const {\n            confirmed,\n            recovered,\n            deaths,\n            total,\n            incidents,\n            confirmedSorted,\n            recoveredSorted,\n            deathsSorted,\n            zoom,\n            minZoom,\n            width\n        } = this.state;\n        return(\n            <div className=\"mid\">\n                <Container fluid>\n                    <Row className=\"justify-content-md-center\">\n                        <Col xs=\"12\" lg=\"8\">\n                        <Card className=\"shadow\" style={{marginBottom:'1rem',padding:'1rem',border:'none'}}>\n                            <Map\n                                width={ width > 980 ? 960 : width - 80 }\n                                zoom={width < 980 ? 1 : zoom}\n                                center={[20.505,-0.09]}\n                                minZoom={width < 980 ? 1 : minZoom}\n                                >\n                                <TileLayer url=\"https://{s}.tile.osm.org/{z}/{x}/{y}.png\" />\n                                \n                                {\n                                incidents.map((city,i) => {\n                                    return (\n                                    <CircleMarker \n                                        key={i} \n                                        center={[city.lat, city.long]} \n                                        readius={20 * Math.log(city.deaths / total)}\n                                        fillOpacity={0.5}\n                                        fillColor={\"red\"}\n                                        stroke={false}\n                                    />\n                                    )\n                                })\n                                }\n                            </Map>\n                        </Card>     \n                        </Col>\n                    </Row>\n                </Container>\n                <Container fluid>\n                    <Row className=\"justify-content-md-center\">\n                        <Col xs lg=\"8\">\n                        <Card className=\"shadow-sm\" style={{marginBottom:'1rem',padding:'1rem',border:'none'}}>\n                            <Row className=\"justify-content-md-center\">\n                                <Col>\n                                    <Alert style={{backgroundColor:colors.confirmed}}>\n                                    <h4>\n                                    <NumberFormat \n                                        value={confirmed} \n                                        displayType={'text'} \n                                        thousandSeparator={true} \n                                    />  \n                                    </h4>  \n                                    <p><b>Accomulative</b><i> as of today</i></p> \n                                    </Alert>\n                                </Col>\n                                <Col>\n                                    <Alert style={{backgroundColor:colors.recovered}}>\n                                    <h4>\n                                    <NumberFormat \n                                        value={recovered} \n                                        displayType={'text'} \n                                        thousandSeparator={true} \n                                    />\n                                    </h4>\n                                    <h6><b>{Math.round((recovered / confirmed) * 100)}</b><i>% Recovery</i></h6>  \n                                    </Alert>\n                                </Col>\n                                <Col>\n                                    <Alert style={{backgroundColor:colors.deaths,color:'#FFFFFF'}}>\n                                    <h4>\n                                    <NumberFormat \n                                        value={deaths} \n                                        displayType={'text'} \n                                        thousandSeparator={true} \n                                    />\n                                    </h4>\n                                    <h6><b>{Math.round((deaths / confirmed) * 100)}</b><i>% Deaths</i></h6>   \n                                    </Alert>\n                                </Col>\n                            </Row>\n                        </Card>     \n                        </Col>\n                    </Row>\n                </Container>\n\n                <Container fluid>\n                    <Row className=\"justify-content-md-center\">\n                        <Col xs lg=\"8\">\n                        <Card className=\"shadow-sm\" style={{marginBottom:'1rem',padding:'1rem',border:'none'}}>\n                            <div style={{marginTop:'1rem'}}>\n                                <h5 style={{textAlign:'center'}}>Top 10 Counties - Confirmed Cases Data</h5>\n                            </div>\n                        <BarChart \n                            width={ width > 980 ? 1200 : width - 80 } \n                            height={400} \n                            data={confirmedSorted}\n                            margin={{top: 5, right: 30, left: 20, bottom: 5}}\n                            layout=\"vertical\"\n                            barSize={15}\n                        >\n                        <CartesianGrid strokeDasharray=\"1 1\"/>\n                        <XAxis  type=\"number\"/>\n                        <YAxis dataKey=\"countryRegion\" type=\"category\" />\n                        <Tooltip/>\n                        <Legend  />\n                        <Bar dataKey=\"confirmed\" fill={colors.confirmed} />\n                        </BarChart>\n                        </Card>     \n                        </Col>\n                    </Row>\n                </Container>\n\n                <Container fluid>\n                    <Row className=\"justify-content-md-center\">\n                        <Col xs lg=\"8\">\n                        <Card className=\"shadow-sm\" style={{marginBottom:'1rem',padding:'1rem',border:'none'}}>\n                            <div style={{marginTop:'1rem'}}>\n                                <h5 style={{textAlign:'center'}}>Top 10 Countries - Recovered Cases Data</h5>\n                            </div>\n                        <BarChart \n                            width={ width > 980 ? 1200 : width - 80 }  \n                            height={400} \n                            data={recoveredSorted}\n                            margin={{top: 5, right: 30, left: 20, bottom: 5}}\n                            layout=\"vertical\"\n                            barSize={15}\n                        >\n                        <CartesianGrid strokeDasharray=\"1 1\"/>\n                        <XAxis type=\"number\"/>\n                        <YAxis dataKey=\"countryRegion\" type=\"category\"/>\n                        <Tooltip/>\n                        <Legend />\n                        <Bar dataKey=\"recovered\" fill={colors.recovered} />\n                        </BarChart>\n                        </Card>     \n                        </Col>\n                    </Row>\n                </Container>\n\n                <Container fluid>\n                    <Row className=\"justify-content-md-center\">\n                        <Col xs lg=\"8\">\n                        <Card className=\"shadow-sm\" style={{marginBottom:'1rem',padding:'1rem',border:'none'}}>\n                            <div style={{marginTop:'1rem'}}>\n                                <h5 style={{textAlign:'center'}}>Top 10 Countries - Death Cases Data</h5>\n                            </div>\n                        <BarChart \n                            width={ width > 980 ? 1200 : width - 80 }  \n                            height={400} \n                            data={deathsSorted}\n                            margin={{top: 5, right: 30, left: 20, bottom: 5}}\n                            layout=\"vertical\"\n                            barSize={15}\n                        >\n                        <CartesianGrid strokeDasharray=\"1 1\"/>\n                        <XAxis type=\"number\"/>\n                        <YAxis dataKey=\"countryRegion\" type=\"category\"/>\n                        <Tooltip/>\n                        <Legend />\n                        <Bar dataKey=\"deaths\" fill={colors.deaths} width={1} />\n                        </BarChart>\n                        </Card>     \n                        </Col>\n                    </Row>\n                </Container>\n            </div>\n        )\n    }\n}\nexport default LandingPage;"]},"metadata":{},"sourceType":"module"}