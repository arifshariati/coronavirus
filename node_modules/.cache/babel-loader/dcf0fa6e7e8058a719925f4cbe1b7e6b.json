{"ast":null,"code":"var _jsxFileName = \"/Users/shariati/Desktop/Projects/demo/src/components/dataChart.jsx\";\nimport React, { Component } from 'react';\nimport Axios from 'axios';\nimport { Container, Row, Col, Table } from 'react-bootstrap';\nimport NumberFormat from 'react-number-format';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from 'recharts';\n\nclass DataChart extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      temp: [],\n      countries: []\n    };\n    this.getCountry = this.getCountry.bind(this);\n  }\n\n  componentDidMount() {\n    this.getData();\n  }\n\n  async getData() {\n    const res = await Axios.get(\"https://pomber.github.io/covid19/timeseries.json\");\n    this.setState({\n      countries: res.data.China,\n      temp: Object.keys(res.data)\n    });\n    console.log(this.state.temp);\n  }\n\n  async getCountry(event) {\n    event.persist();\n    const countryRes = await Axios.get(\"https://pomber.github.io/covid19/timeseries.json\");\n    const searchCountry = event.target.value;\n    console.log(countryRes.data[searchCountry]);\n    this.setState({\n      countries: countryRes.data[searchCountry]\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"dataChart\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }\n    }, \"Visual Chart of COVID Statistics\"), /*#__PURE__*/React.createElement(Row, {\n      className: \"justify-content-md-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      lg: \"12\",\n      md: \"auto\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(LineChart, {\n      width: 800,\n      height: 500,\n      data: this.state.countries,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(CartesianGrid, {\n      strokeDasharray: \"1 1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(XAxis, {\n      dataKey: \"date\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(YAxis, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Tooltip, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Legend, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Line, {\n      type: \"monotone\",\n      dataKey: \"confirmed\",\n      dot: false,\n      points: 1,\n      stroke: \"#1B262C\",\n      strokeWidth: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Line, {\n      type: \"monotone\",\n      dataKey: \"recovered\",\n      dot: false,\n      points: 1,\n      stroke: \"#323Edd\",\n      strokeWidth: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Line, {\n      type: \"monotone\",\n      dataKey: \"deaths\",\n      dot: false,\n      points: 1,\n      stroke: \"#C81912\",\n      strokeWidth: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 21\n      }\n    }))))), /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      className: \"justify-content-md-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      lg: \"12\",\n      md: \"auto\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 25\n      }\n    }, \"Select Country\"), /*#__PURE__*/React.createElement(\"select\", {\n      className: \"countrySelect\",\n      onChange: this.getCountry,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 25\n      }\n    }, this.state.temp.map((items, i) => /*#__PURE__*/React.createElement(\"option\", {\n      key: i,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 29\n      }\n    }, items)))))), /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      className: \"justify-content-md-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      lg: \"12\",\n      md: \"auto\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Table, {\n      striped: true,\n      bordered: true,\n      hover: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 25\n      }\n    }, \"Date\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 25\n      }\n    }, \"Confirmed\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 25\n      }\n    }, \"Recovered\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 25\n      }\n    }, \"Deaths\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 21\n      }\n    }, this.state.countries.map((list, index) => /*#__PURE__*/React.createElement(\"tr\", {\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 25\n      }\n    }, list.date), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(NumberFormat, {\n      value: list.confirmed,\n      displayType: 'text',\n      thousandSeparator: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(NumberFormat, {\n      value: list.recovered,\n      displayType: 'text',\n      thousandSeparator: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(NumberFormat, {\n      value: list.deaths,\n      displayType: 'text',\n      thousandSeparator: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 29\n      }\n    }))))))))));\n  }\n\n}\n\nexport default DataChart;","map":{"version":3,"sources":["/Users/shariati/Desktop/Projects/demo/src/components/dataChart.jsx"],"names":["React","Component","Axios","Container","Row","Col","Table","NumberFormat","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","Legend","DataChart","constructor","props","state","temp","countries","getCountry","bind","componentDidMount","getData","res","get","setState","data","China","Object","keys","console","log","event","persist","countryRes","searchCountry","target","value","render","map","items","i","list","index","date","confirmed","recovered","deaths"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Axios from 'axios';\nimport {Container,Row,Col,Table} from 'react-bootstrap';\nimport NumberFormat from 'react-number-format';\nimport { LineChart, Line, XAxis,YAxis, CartesianGrid,Tooltip,Legend} from 'recharts';\n\nclass DataChart extends Component{\n    constructor (props){\n        super(props);\n        this.getCountry=this.getCountry.bind(this);\n      }\n      state={\n        temp:[],\n        countries:[]\n      }\n      componentDidMount(){\n        this.getData();\n      }\n      async getData(){\n        const res=await Axios.get(\"https://pomber.github.io/covid19/timeseries.json\");\n        \n        this.setState({\n          countries:res.data.China,\n          temp:Object.keys(res.data)\n        })\n        console.log(this.state.temp);\n      }\n      async getCountry(event){\n        event.persist();\n        const countryRes=await Axios.get(\"https://pomber.github.io/covid19/timeseries.json\");\n        const searchCountry=event.target.value;\n        console.log(countryRes.data[searchCountry]);\n        \n        this.setState({\n          countries:countryRes.data[searchCountry]\n        })\n      }\nrender(){\n    return(\n        <div className=\"dataChart\">\n            <Container>\n                <h4>Visual Chart of COVID Statistics</h4>\n                <Row className=\"justify-content-md-center\">\n                    <Col lg=\"12\" md=\"auto\">\n                    <LineChart width={800} height={500} data={this.state.countries}>\n                    <CartesianGrid strokeDasharray=\"1 1\" />\n                    <XAxis dataKey=\"date\" />\n                    <YAxis />\n                    <Tooltip />\n                    <Legend />\n                    <Line type=\"monotone\" dataKey=\"confirmed\" dot={false} points={1} stroke=\"#1B262C\" strokeWidth={2} />\n                    <Line type=\"monotone\" dataKey=\"recovered\" dot={false} points={1} stroke=\"#323Edd\" strokeWidth={2} />\n                    <Line type=\"monotone\" dataKey=\"deaths\" dot={false} points={1} stroke=\"#C81912\" strokeWidth={2} />\n                    </LineChart>\n                    </Col>\n                </Row>\n            </Container>\n            <Container>\n                <Row className=\"justify-content-md-center\">\n                    <Col lg=\"12\" md=\"auto\">\n                        <label>Select Country</label>\n                        <select className=\"countrySelect\" onChange={this.getCountry}>\n                            {\n                            this.state.temp.map((items,i)=>\n                            <option key={i}>{items}</option>  \n                            )\n                            }\n                        </select>        \n                    </Col>\n                </Row>\n            </Container>\n            <Container>\n                <Row className=\"justify-content-md-center\">\n                    <Col lg=\"12\" md=\"auto\">\n                    <Table striped bordered hover>\n                    <thead>\n                        <tr>\n                        <th>Date</th>\n                        <th>Confirmed</th>\n                        <th>Recovered</th>\n                        <th>Deaths</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {\n                        this.state.countries.map((list,index)=>\n                        <tr key={index}>\n                        <td>{list.date}</td>\n                        <td><NumberFormat value={list.confirmed} displayType={'text'} thousandSeparator={true} /></td>\n                        <td><NumberFormat value={list.recovered} displayType={'text'} thousandSeparator={true} /></td>\n                        <td><NumberFormat value={list.deaths} displayType={'text'} thousandSeparator={true} /></td>\n                        </tr>\n                        )\n                        }\n                    </tbody>\n                    </Table>\n                    </Col>\n                </Row>\n            </Container>\n        </div>\n    )\n}\n}\nexport default DataChart;"]},"metadata":{},"sourceType":"module"}