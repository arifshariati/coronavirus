{"ast":null,"code":"var _jsxFileName = \"/Users/shariati/Desktop/Projects/demo/src/components/dataChart.jsx\";\nimport React, { Component } from 'react';\nimport Axios from 'axios';\nimport { Container, Row, Col, Table, Form } from 'react-bootstrap';\nimport NumberFormat from 'react-number-format';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from 'recharts';\nimport Pagination from './pagination';\n\nclass DataChart extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentData: [],\n      currentPage: 1,\n      dataPerPage: 7,\n      selectedCountry: \"China\",\n      temp: [],\n      countries: [],\n      tableCountries: []\n    };\n    this.getData = this.getData.bind(this);\n    this.getCountry = this.getCountry.bind(this);\n    this.paginate = this.paginate.bind(this);\n  }\n\n  componentDidMount() {\n    this.getData(this.state.pageNumber);\n  }\n\n  async getData(pageNumber) {\n    const res = await Axios.get(\"https://pomber.github.io/covid19/timeseries.json\");\n    const byConfirmed = res.data.China.slice(0);\n    byConfirmed.sort(function (a, b) {\n      return b.confirmed - a.confirmed;\n    });\n    this.setState({\n      countries: res.data.China,\n      tableCountries: byConfirmed,\n      temp: Object.keys(res.data),\n      pageNumber\n    });\n    const indexOfLastData = this.state.currentPage * this.state.dataPerPage;\n    const indexOfFirstData = indexOfLastData - this.state.dataPerPage;\n    this.setState({\n      currentData: this.state.tableCountries.slice(indexOfFirstData, indexOfLastData)\n    });\n    console.log(this.state.currentData);\n  }\n\n  async getCountry(event) {\n    event.persist();\n    const countryRes = await Axios.get(\"https://pomber.github.io/covid19/timeseries.json\");\n    const searchCountry = event.target.value;\n    const byConfirmed = countryRes.data[searchCountry].slice(0);\n    byConfirmed.sort(function (a, b) {\n      return b.confirmed - a.confirmed;\n    });\n    this.setState({\n      selectedCountry: searchCountry,\n      countries: countryRes.data[searchCountry],\n      tableCountries: byConfirmed\n    });\n    const indexOfLastData = this.state.currentPage * this.state.dataPerPage;\n    const indexOfFirstData = indexOfLastData - this.state.dataPerPage;\n    this.setState({\n      currentData: this.state.tableCountries.slice(indexOfFirstData, indexOfLastData)\n    });\n    console.log(this.state.currentData);\n  } //paginate = pageNumber=> this.setState({currentPage:pageNumber});\n\n\n  async paginate(pageNumber) {\n    this.setState({\n      currentPage: pageNumber\n    });\n    console.log(\"page number changed\");\n    console.log(this.state.currentPage);\n    this.getData();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"dataChart\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Container, {\n      fluid: \"md\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      className: \"justify-content-md-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      lg: \"12\",\n      md: \"12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 21\n      }\n    }, \"Visual Chart of COVID-19 Daily Statistics\"))), /*#__PURE__*/React.createElement(Row, {\n      className: \"justify-content-md-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      lg: \"12\",\n      md: \"12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 21\n      }\n    }, this.state.selectedCountry, \"'s Data\")))), /*#__PURE__*/React.createElement(Container, {\n      fluid: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      className: \"justify-content-md-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      lg: \"12\",\n      md: \"12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(LineChart, {\n      width: 300,\n      height: 350,\n      data: this.state.countries,\n      margin: {\n        top: 20,\n        right: 30,\n        left: 0,\n        bottom: 20\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(CartesianGrid, {\n      strokeDasharray: \"1 1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(XAxis, {\n      dataKey: \"date\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(YAxis, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Tooltip, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Legend, {\n      layout: \"vertical\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Line, {\n      type: \"monotone\",\n      dataKey: \"confirmed\",\n      dot: false,\n      stroke: \"#8DB1AB\",\n      strokeWidth: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Line, {\n      type: \"monotone\",\n      dataKey: \"recovered\",\n      dot: false,\n      stroke: \"#00BCD4\",\n      strokeWidth: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Line, {\n      type: \"monotone\",\n      dataKey: \"deaths\",\n      dot: false,\n      stroke: \"#DD2C00\",\n      strokeWidth: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 21\n      }\n    }))))), /*#__PURE__*/React.createElement(Container, {\n      fluid: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      className: \"justify-content-md-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      lg: \"12\",\n      md: \"auto\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      title: \"Date Wise COVID-19 Cases\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"exampleForm.SelectCustomSizeLg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 29\n      }\n    }, \"Select Country\"), /*#__PURE__*/React.createElement(Form.Control, {\n      as: \"select\",\n      size: \"sm\",\n      onChange: this.getCountry,\n      custom: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 29\n      }\n    }, this.state.temp.map((items, i) => /*#__PURE__*/React.createElement(\"option\", {\n      key: i,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 33\n      }\n    }, items)))))))), /*#__PURE__*/React.createElement(Container, {\n      fluid: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      className: \"justify-content-md-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      lg: \"12\",\n      md: \"auto\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 28\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 31\n      }\n    }, \"** Note:\"), \" Table data is accomulative.\")))), /*#__PURE__*/React.createElement(Row, {\n      className: \"justify-content-md-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      lg: \"12\",\n      md: \"auto\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Table, {\n      responsive: true,\n      size: \"sm\",\n      striped: true,\n      bordered: true,\n      hover: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 25\n      }\n    }, \"Date\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 25\n      }\n    }, \"Confirmed\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 25\n      }\n    }, \"Recovered\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 25\n      }\n    }, \"Deaths\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 21\n      }\n    }, this.state.currentData.map((list, index) => /*#__PURE__*/React.createElement(\"tr\", {\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 25\n      }\n    }, list.date), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(NumberFormat, {\n      value: list.confirmed,\n      displayType: 'text',\n      thousandSeparator: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(NumberFormat, {\n      value: list.recovered,\n      displayType: 'text',\n      thousandSeparator: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(\"td\", {\n      style: {\n        fontWeight: \"bold\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(NumberFormat, {\n      value: list.deaths,\n      displayType: 'text',\n      thousandSeparator: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 57\n      }\n    }))))))))), /*#__PURE__*/React.createElement(Container, {\n      fluid: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      className: \"justify-content-md-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      lg: \"12\",\n      md: \"auto\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Pagination, {\n      dataPerPage: this.state.dataPerPage,\n      totalData: this.state.tableCountries.length,\n      paginate: this.getData,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 21\n      }\n    })))));\n  }\n\n}\n\nexport default DataChart;","map":{"version":3,"sources":["/Users/shariati/Desktop/Projects/demo/src/components/dataChart.jsx"],"names":["React","Component","Axios","Container","Row","Col","Table","Form","NumberFormat","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","Legend","Pagination","DataChart","constructor","props","state","currentData","currentPage","dataPerPage","selectedCountry","temp","countries","tableCountries","getData","bind","getCountry","paginate","componentDidMount","pageNumber","res","get","byConfirmed","data","China","slice","sort","a","b","confirmed","setState","Object","keys","indexOfLastData","indexOfFirstData","console","log","event","persist","countryRes","searchCountry","target","value","render","top","right","left","bottom","map","items","i","list","index","date","recovered","fontWeight","deaths","length"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Axios from 'axios';\nimport {Container,Row,Col,Table,Form} from 'react-bootstrap';\nimport NumberFormat from 'react-number-format';\nimport { LineChart, Line, XAxis,YAxis, CartesianGrid,Tooltip,Legend} from 'recharts';\nimport Pagination from './pagination';\n\nclass DataChart extends Component{\n    constructor (props){\n        super(props);\n        this.getData=this.getData.bind(this);\n        this.getCountry=this.getCountry.bind(this);\n        this.paginate=this.paginate.bind(this);\n      }\n      state={\n        currentData:[],\n        currentPage:1,\n        dataPerPage:7,\n        selectedCountry:\"China\",\n        temp:[],\n        countries:[],\n        tableCountries:[]\n      }\n      componentDidMount(){\n        this.getData(this.state.pageNumber);\n      }\n      async getData(pageNumber){\n        const res=await Axios.get(\"https://pomber.github.io/covid19/timeseries.json\");\n        \n        const byConfirmed=res.data.China.slice(0);\n        byConfirmed.sort(function(a,b){\n            return b.confirmed - a.confirmed;\n        });\n\n        this.setState({\n          countries:res.data.China,\n          tableCountries:byConfirmed,\n          temp:Object.keys(res.data),\n          pageNumber\n        })\n\n        const indexOfLastData=this.state.currentPage * this.state.dataPerPage;\n        const indexOfFirstData=indexOfLastData - this.state.dataPerPage;\n        this.setState({\n            currentData:this.state.tableCountries.slice(indexOfFirstData,indexOfLastData)\n        })\n        console.log(this.state.currentData);\n        \n      }\n      async getCountry(event){\n        event.persist();\n        const countryRes=await Axios.get(\"https://pomber.github.io/covid19/timeseries.json\");\n        const searchCountry=event.target.value;\n        \n        const byConfirmed=countryRes.data[searchCountry].slice(0);\n        byConfirmed.sort(function(a,b){\n            return b.confirmed - a.confirmed;\n        });\n\n        this.setState({\n            selectedCountry:searchCountry,\n            countries:countryRes.data[searchCountry],\n            tableCountries:byConfirmed\n        })\n        const indexOfLastData=this.state.currentPage * this.state.dataPerPage;\n        const indexOfFirstData=indexOfLastData - this.state.dataPerPage;\n        this.setState({\n            currentData:this.state.tableCountries.slice(indexOfFirstData,indexOfLastData)\n        })\n        console.log(this.state.currentData);\n      }\n    //paginate = pageNumber=> this.setState({currentPage:pageNumber});\n    async paginate(pageNumber){\n        this.setState({currentPage:pageNumber});\n        console.log(\"page number changed\");\n        console.log(this.state.currentPage);\n        this.getData();\n    }\n    \nrender(){\n    return(\n        <div className=\"dataChart\">\n            <Container fluid=\"md\">\n                <Row className=\"justify-content-md-center\">\n                    <Col lg=\"12\" md=\"12\">\n                    <h5>Visual Chart of COVID-19 Daily Statistics</h5>\n                    </Col>\n                </Row>\n                <Row className=\"justify-content-md-center\">\n                    <Col lg=\"12\" md=\"12\">\n                    <h5>{this.state.selectedCountry}'s Data</h5>\n                    </Col>\n                </Row>\n            </Container>\n            <Container fluid>\n                \n                <Row className=\"justify-content-md-center\">\n                    <Col lg=\"12\" md=\"12\">\n                    <LineChart width={300} height={350} data={this.state.countries} margin={{top: 20, right: 30, left: 0, bottom: 20}}>\n                    <CartesianGrid strokeDasharray=\"1 1\" />\n                    <XAxis dataKey=\"date\" />\n                    <YAxis />\n                    <Tooltip />\n                    <Legend  layout={\"vertical\"}/>\n                    <Line type=\"monotone\"  dataKey=\"confirmed\" dot={false}  stroke=\"#8DB1AB\" strokeWidth={3} />\n                    <Line type=\"monotone\" dataKey=\"recovered\" dot={false} stroke=\"#00BCD4\" strokeWidth={3} />\n                    <Line type=\"monotone\" dataKey=\"deaths\" dot={false}  stroke=\"#DD2C00\" strokeWidth={3} />\n                    </LineChart>\n                    </Col>\n                </Row>\n            </Container>\n            <Container fluid>\n                <Row className=\"justify-content-md-center\">\n                    <Col lg=\"12\" md=\"auto\">\n                        <Form title=\"Date Wise COVID-19 Cases\">\n                        <Form.Group controlId=\"exampleForm.SelectCustomSizeLg\">\n                            <Form.Label>Select Country</Form.Label>\n                            <Form.Control as=\"select\" size=\"sm\" onChange={this.getCountry} custom>\n                                {\n                                this.state.temp.map((items,i)=>\n                                <option key={i}>{items}</option>  \n                                )\n                                }\n                            </Form.Control>\n                        </Form.Group>\n                        </Form>      \n                    </Col>\n                </Row>\n            </Container>\n            <Container fluid>\n                <Row className=\"justify-content-md-center\">\n                    <Col lg=\"12\" md=\"auto\">\n                        <p><i><b>** Note:</b> Table data is accomulative.</i></p>\n                    </Col>\n                </Row>\n                <Row className=\"justify-content-md-center\">\n                    <Col lg=\"12\" md=\"auto\">\n                    <Table responsive size=\"sm\" striped={true} bordered={true} hover>\n                    <thead>\n                        <tr>\n                        <th>Date</th>\n                        <th>Confirmed</th>\n                        <th>Recovered</th>\n                        <th>Deaths</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {\n                        this.state.currentData.map((list,index)=>\n                        <tr key={index}>\n                        <td>{list.date}</td>\n                        <td><NumberFormat value={list.confirmed} displayType={'text'} thousandSeparator={true} /></td>\n                        <td><NumberFormat value={list.recovered} displayType={'text'} thousandSeparator={true} /></td>\n                        <td style={{fontWeight:\"bold\"}}><NumberFormat value={list.deaths} displayType={'text'} thousandSeparator={true} /></td>\n                        </tr>\n                        )\n                        }\n                    </tbody>\n                    </Table>\n                    </Col>\n                </Row>\n            </Container>\n            <Container fluid>\n                <Row className=\"justify-content-md-center\">\n                    <Col lg=\"12\" md=\"auto\">\n                    <Pagination dataPerPage={this.state.dataPerPage} totalData={this.state.tableCountries.length} paginate={this.getData}/>\n                    </Col>\n                </Row>\n            </Container>\n            \n        </div>\n    )\n}\n}\nexport default DataChart;"]},"metadata":{},"sourceType":"module"}