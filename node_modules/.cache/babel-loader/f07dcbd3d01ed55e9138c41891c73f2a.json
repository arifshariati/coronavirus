{"ast":null,"code":"var _jsxFileName = \"/Users/shariati/Desktop/Projects/demo2/src/components/dataChart.jsx\";\nimport React, { Component } from 'react';\nimport Axios from 'axios';\nimport { Container, Row, Col, Table, Form, Card, Button } from 'react-bootstrap';\nimport NumberFormat from 'react-number-format';\nimport ReactGA from 'react-ga';\nimport Loading from './loading';\nconst colors = {\n  confirmed: '#FFD31D',\n  recovered: '#21BF72',\n  deaths: '#DD2C00'\n};\nconst showChartPeriod = [{\n  period: 0,\n  periodTitle: \"All Data\"\n}, {\n  period: 7,\n  periodTitle: \"Last 7 Days\"\n}, {\n  period: 14,\n  periodTitle: \"Last 14 Days\"\n}, {\n  period: 30,\n  periodTitle: \"Last 30 Days\"\n}];\n\nclass DataChart extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: true,\n      currentData: [],\n      currentPage: 1,\n      dataPerPage: 7,\n      selectedCountry: \"China\",\n      population: 0,\n      temp: [],\n      countries: [],\n      tableCountries: [],\n      width: window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth\n    };\n\n    this.updateDimensions = () => {\n      const width = window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth;\n      this.setState({\n        width\n      });\n    };\n\n    this.getData = this.getData.bind(this);\n    this.getCountry = this.getCountry.bind(this);\n    this.updateChartPeriod = this.updateChartPeriod.bind(this);\n  }\n\n  componentDidMount() {\n    ReactGA.initialize('UA-163115935-1');\n    ReactGA.pageview('/Daily-Data');\n    this.getCountryByIP();\n    window.addEventListener('resize', this.updateDimensions);\n  }\n\n  async getCountryByIP() {\n    const res = await Axios.get(\"https://ipapi.co/json\");\n    this.setState({\n      selectedCountry: res.data.country_name === \"United States\" ? \"US\" : res.data.country_name,\n      population: res.data.country_population\n    });\n    this.getData();\n  }\n\n  async getData() {\n    const res = await Axios.get(\"https://pomber.github.io/covid19/timeseries.json\");\n    const selectedCountry = this.state.selectedCountry;\n    const byConfirmed = res.data[selectedCountry].slice(0);\n    byConfirmed.sort(function (a, b) {\n      return b.confirmed - a.confirmed;\n    });\n    this.setState({\n      countries: res.data[selectedCountry],\n      tableCountries: byConfirmed,\n      temp: Object.keys(res.data)\n    });\n    const indexOfLastData = this.state.currentPage * this.state.dataPerPage;\n    const indexOfFirstData = indexOfLastData - this.state.dataPerPage;\n    this.setState({\n      loading: false,\n      currentData: this.state.dataPerPage === 0 ? this.state.tableCountries : this.state.tableCountries.slice(indexOfFirstData, indexOfLastData)\n    });\n  }\n\n  async getCountry(event) {\n    event.persist();\n    const countryRes = await Axios.get(\"https://pomber.github.io/covid19/timeseries.json\");\n    const searchCountry = event.target.value;\n    const byConfirmed = countryRes.data[searchCountry].slice(0);\n    byConfirmed.sort(function (a, b) {\n      return b.confirmed - a.confirmed;\n    });\n    this.setState({\n      selectedCountry: searchCountry,\n      tableCountries: byConfirmed\n    });\n    const indexOfLastData = this.state.currentPage * this.state.dataPerPage;\n    const indexOfFirstData = indexOfLastData - this.state.dataPerPage;\n    this.setState({\n      loading: false,\n      currentData: this.state.dataPerPage === 0 ? this.state.tableCountries : this.state.tableCountries.slice(indexOfFirstData, indexOfLastData)\n    });\n  }\n\n  updateChartPeriod(props) {\n    console.log(props);\n    this.setState({\n      dataPerPage: props\n    });\n    this.getData(); //console.log(event.target.value);\n  }\n\n  render() {\n    const {\n      currentData,\n      dataPerPage,\n      selectedCountry,\n      population,\n      temp,\n      tableCountries,\n      width\n    } = this.state;\n    const loading = this.state.loading;\n    if (loading) return /*#__PURE__*/React.createElement(Loading, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Container, {\n      fluid: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      className: \"justify-content-md-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      xs: \"12\",\n      lg: \"8\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      className: \"shadow-sm\",\n      style: {\n        marginBottom: '1rem',\n        padding: '1rem',\n        border: 'none'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Form.Control, {\n      as: \"select\",\n      size: \"sm\",\n      onChange: this.getCountry,\n      custom: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 33\n      }\n    }, selectedCountry), temp.map((items, i) => /*#__PURE__*/React.createElement(\"option\", {\n      key: i,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 33\n      }\n    }, items)))))), /*#__PURE__*/React.createElement(Row, {\n      className: \"justify-content-md-center\",\n      style: {\n        marginBottom: \"1rem\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      xs: true,\n      lg: \"8\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 21\n      }\n    }, showChartPeriod.map((period, index) => /*#__PURE__*/React.createElement(Button, {\n      key: index,\n      variant: \"primary\",\n      size: \"sm\",\n      style: {\n        margin: \"1rem\"\n      },\n      onClick: () => this.updateChartPeriod(period.period),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 33\n      }\n    }, period.periodTitle))))), /*#__PURE__*/React.createElement(Container, {\n      fluid: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      className: \"justify-content-md-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      xs: true,\n      lg: \"8\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      className: \"shadow-sm\",\n      style: {\n        marginTop: '1rem',\n        padding: '1rem',\n        border: 'none'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Table, {\n      responsive: true,\n      size: \"sm\",\n      striped: true,\n      bordered: true,\n      hover: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 37\n      }\n    }, \"Date\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 37\n      }\n    }, \"Confirmed\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 37\n      }\n    }, \"Recovered\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 37\n      }\n    }, \"Deaths\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 33\n      }\n    }, currentData.map((list, index) => /*#__PURE__*/React.createElement(\"tr\", {\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 37\n      }\n    }, list.date), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(NumberFormat, {\n      value: list.confirmed,\n      displayType: 'text',\n      thousandSeparator: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 41\n      }\n    })), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(NumberFormat, {\n      value: list.recovered,\n      displayType: 'text',\n      thousandSeparator: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 41\n      }\n    })), /*#__PURE__*/React.createElement(\"td\", {\n      style: {\n        fontWeight: \"bold\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(NumberFormat, {\n      value: list.deaths,\n      displayType: 'text',\n      thousandSeparator: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 41\n      }\n    })))))))))));\n  }\n\n}\n\nexport default DataChart;","map":{"version":3,"sources":["/Users/shariati/Desktop/Projects/demo2/src/components/dataChart.jsx"],"names":["React","Component","Axios","Container","Row","Col","Table","Form","Card","Button","NumberFormat","ReactGA","Loading","colors","confirmed","recovered","deaths","showChartPeriod","period","periodTitle","DataChart","constructor","props","state","loading","currentData","currentPage","dataPerPage","selectedCountry","population","temp","countries","tableCountries","width","window","innerWidth","document","documentElement","clientWidth","body","updateDimensions","setState","getData","bind","getCountry","updateChartPeriod","componentDidMount","initialize","pageview","getCountryByIP","addEventListener","res","get","data","country_name","country_population","byConfirmed","slice","sort","a","b","Object","keys","indexOfLastData","indexOfFirstData","event","persist","countryRes","searchCountry","target","value","console","log","render","marginBottom","padding","border","map","items","i","index","margin","marginTop","list","date","fontWeight"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Axios from 'axios';\nimport {Container,Row,Col,Table,Form, Card,Button} from 'react-bootstrap';\nimport NumberFormat from 'react-number-format';\nimport ReactGA from 'react-ga';\nimport Loading from './loading';\n\nconst colors = {\n    confirmed: '#FFD31D',\n    recovered: '#21BF72',\n    deaths: '#DD2C00',\n  };\n  const showChartPeriod=[\n    {\n        period:0,\n        periodTitle:\"All Data\"\n    },\n    {\n        period:7,\n        periodTitle:\"Last 7 Days\"\n    },\n    {\n        period:14,\n        periodTitle:\"Last 14 Days\"\n    },\n    {\n        period:30,\n        periodTitle:\"Last 30 Days\"\n    }\n]\n\nclass DataChart extends Component{\n    constructor (props){\n        super(props);\n        this.getData=this.getData.bind(this);\n        this.getCountry=this.getCountry.bind(this);\n        this.updateChartPeriod=this.updateChartPeriod.bind(this);\n      }\n      \n      state={\n        loading:true,\n        currentData:[],\n        currentPage:1,\n        dataPerPage:7,\n        selectedCountry:\"China\",\n        population:0,\n        temp:[],\n        countries:[],\n        tableCountries:[],\n        width:\n        window.innerWidth ||\n        document.documentElement.clientWidth ||\n        document.body.clientWidth\n      }\n      componentDidMount(){\n\n        ReactGA.initialize('UA-163115935-1');\n        ReactGA.pageview('/Daily-Data');\n\n        this.getCountryByIP();\n        window.addEventListener('resize',this.updateDimensions);\n      }\n      updateDimensions = ()=>{\n          const width = \n          window.innerWidth ||\n          document.documentElement.clientWidth ||\n          document.body.clientWidth;\n\n          this.setState({width});\n      }\n      async getCountryByIP(){\n        const res=await Axios.get(\"https://ipapi.co/json\");\n        this.setState({\n            selectedCountry:res.data.country_name ===\"United States\" ? \"US\" : res.data.country_name,\n              population:res.data.country_population\n        })\n        this.getData();\n    }\n      async getData(){\n        const res=await Axios.get(\"https://pomber.github.io/covid19/timeseries.json\");\n        const selectedCountry=this.state.selectedCountry;\n        const byConfirmed=res.data[selectedCountry].slice(0);\n        byConfirmed.sort(function(a,b){\n            return b.confirmed - a.confirmed;\n        });\n\n        this.setState({\n          countries:res.data[selectedCountry],\n          tableCountries:byConfirmed,\n          temp:Object.keys(res.data)\n        })\n\n\n        const indexOfLastData=this.state.currentPage * this.state.dataPerPage;\n        const indexOfFirstData=indexOfLastData - this.state.dataPerPage;\n        this.setState({\n            loading:false,\n            currentData:\n                        this.state.dataPerPage === 0 ? \n                        this.state.tableCountries : \n                        this.state.tableCountries.slice(indexOfFirstData,indexOfLastData)\n        })\n        \n        \n      }\n      async getCountry(event){\n        event.persist();\n        const countryRes=await Axios.get(\"https://pomber.github.io/covid19/timeseries.json\");\n        const searchCountry=event.target.value;\n        \n        const byConfirmed=countryRes.data[searchCountry].slice(0);\n        byConfirmed.sort(function(a,b){\n            return b.confirmed - a.confirmed;\n        });\n\n        this.setState({\n            selectedCountry:searchCountry,\n            tableCountries:byConfirmed\n        })\n\n\n        const indexOfLastData=this.state.currentPage * this.state.dataPerPage;\n        const indexOfFirstData=indexOfLastData - this.state.dataPerPage;\n        this.setState({\n            loading:false,\n            currentData:\n                        this.state.dataPerPage === 0 ?\n                        this.state.tableCountries :\n                        this.state.tableCountries.slice(indexOfFirstData,indexOfLastData)\n        })\n      }\n\n      updateChartPeriod(props){\n        console.log(props);\n        this.setState({\n            dataPerPage:props,\n        })\n        this.getData();\n        //console.log(event.target.value);\n      }\n\n    \nrender(){\n    const {\n        currentData,\n        dataPerPage,\n        selectedCountry,\n        population,\n        temp,\n        tableCountries,\n        width\n    } = this.state;\n    \n    const loading = this.state.loading;\n    if(loading) return (\n        <Loading />\n    );\n\n    return(\n        <div className=\"mid\">\n            <Container fluid>\n                <Row className=\"justify-content-md-center\">\n                    <Col xs=\"12\" lg=\"8\">\n                    <Card className=\"shadow-sm\" style={{marginBottom:'1rem',padding:'1rem',border:'none'}}>\n                        <Form.Control as=\"select\" size=\"sm\" onChange={this.getCountry} custom>\n                                <option>{selectedCountry}</option> \n                                {\n                                temp.map((items,i)=>\n                                <option key={i}>{items}</option>  \n                                )\n                                }\n                            </Form.Control>\n                    </Card>     \n                    </Col>\n                </Row>\n\n                <Row className=\"justify-content-md-center\" style={{marginBottom:\"1rem\"}}>\n                    <Col xs lg=\"8\">\n                        {\n                            showChartPeriod.map((period,index)=>\n                                <Button \n                                    key={index} variant=\"primary\"\n                                    size=\"sm\"\n                                    style={{margin:\"1rem\"}}\n                                    onClick={()=>this.updateChartPeriod(period.period)}\n                                >\n                                    {period.periodTitle}\n                                </Button>\n                            )               \n                        }\n                    </Col>\n                </Row>\n            </Container>\n            \n            <Container fluid>\n                <Row className=\"justify-content-md-center\">\n                    <Col xs lg=\"8\">\n                        <Card className=\"shadow-sm\" style={{marginTop:'1rem',padding:'1rem',border:'none'}}>\n                            <Table responsive size=\"sm\" striped={true} bordered={true} hover>\n                                <thead>\n                                    <tr>\n                                    <th>Date</th>\n                                    <th>Confirmed</th>\n                                    <th>Recovered</th>\n                                    <th>Deaths</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {\n                                    currentData.map((list,index)=>\n                                    <tr key={index}>\n                                    <td>{list.date}</td>\n                                    <td>\n                                        <NumberFormat \n                                            value={list.confirmed} \n                                            displayType={'text'} \n                                            thousandSeparator={true} \n                                        />\n                                        \n                                    </td>\n                                    <td>\n                                        <NumberFormat value={list.recovered} displayType={'text'} thousandSeparator={true} />\n                                    </td>\n                                    <td style={{fontWeight:\"bold\"}}>\n                                        <NumberFormat value={list.deaths} displayType={'text'} thousandSeparator={true} />\n                                    </td>\n                                    </tr>\n                                    )\n                                    }\n                                </tbody>\n                                </Table>\n                        </Card>\n                    \n                    </Col>\n                </Row>\n            </Container>\n            \n        </div>\n    )\n}\n}\nexport default DataChart;"]},"metadata":{},"sourceType":"module"}